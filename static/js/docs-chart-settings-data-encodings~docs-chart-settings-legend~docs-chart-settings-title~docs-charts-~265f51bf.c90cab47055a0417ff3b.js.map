{"version":3,"sources":["/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/common/config.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/hooks/useAnimationFrame.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/hooks/useContainerDimension.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/hooks/useHoverState.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/index.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/AxisLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/HoverLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/ResponsiveLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/TooltipLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/legend/Legend.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/legend/LegendGroup.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/overlays/HeaderBox.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/themes/index.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/tooltip/Tooltip.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/tooltip/TooltipItem.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getAxisScale.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getColorScale.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getDataGroupByEncodings.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getFieldValuesFromData.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getRecordFieldSelector.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getValByScaleType.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/styled-components/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_VALS","SCALE_TYPE","useAnimationFrame","react__WEBPACK_IMPORTED_MODULE_0__","animaFrameIdRef","useRef","requestWindowAnimationFrame","useCallback","rafCallback","current","window","requestAnimationFrame","useEffect","cancelAnimationFrame","animationFrame","useContainerDimension","containerRef","debounceTime","arguments","length","undefined","_useState","useState","width","height","_useState2","Object","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dimension","setDimension","resizeObsrRef","updateDimension","debouncedResize","debounce","entries","observer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_entry$contentRect","value","contentRect","err","resizeObserverPolyfill","observe","disconnect","useHoverState","hovering","setHovering","_useState3","index","position","x","y","_useState4","hoveredPoint","setHoveredPoint","clearHovering","setHoveredPosAndIndex","hoveredIndex","xPos","yPos","_common_types__WEBPACK_IMPORTED_MODULE_0__","o","_hooks_useContainerDimension__WEBPACK_IMPORTED_MODULE_2__","_hooks_useHoverState__WEBPACK_IMPORTED_MODULE_3__","_layers_ResponsiveLayer__WEBPACK_IMPORTED_MODULE_5__","_layers_AxisLayer__WEBPACK_IMPORTED_MODULE_6__","_layers_HoverLayer__WEBPACK_IMPORTED_MODULE_7__","_layers_TooltipLayer__WEBPACK_IMPORTED_MODULE_8__","_overlays_HeaderBox__WEBPACK_IMPORTED_MODULE_9__","_themes__WEBPACK_IMPORTED_MODULE_10__","_legend_LegendGroup__WEBPACK_IMPORTED_MODULE_12__","_utils_getValByScaleType__WEBPACK_IMPORTED_MODULE_15__","_utils_getAxisScale__WEBPACK_IMPORTED_MODULE_16__","_utils_getColorScale__WEBPACK_IMPORTED_MODULE_17__","_utils_getDataGroupByEncodings__WEBPACK_IMPORTED_MODULE_18__","_utils_getRecordFieldSelector__WEBPACK_IMPORTED_MODULE_19__","_utils_styled_components__WEBPACK_IMPORTED_MODULE_21__","AxisLayer","react__WEBPACK_IMPORTED_MODULE_0___default","n","_vx_axis__WEBPACK_IMPORTED_MODULE_1__","_themes__WEBPACK_IMPORTED_MODULE_2__","getNumberOfTicks","axisLength","data","maxTicks","Math","max","lengthBasis","ticksFromLen","ceil","min","getAxisLabel","axis","label","field","hideLabel","getYtickLabelProps","styles","fill","strokeColor","fontSize","tickFontSize","textAnchor","tickFormat","val","concat","_ref","_ref$showLeftAxis","showLeftAxis","_ref$showBottomAxis","showBottomAxis","_ref$showZeroLine","showZeroLine","_ref$drawFromXAxis","drawFromXAxis","xAxisScale","yAxisScale","theme","useContext","ThemeContext","xAxisTheme","xAxis","yAxisTheme","yAxis","xAxisLabel","useMemo","yAxisLabel","zeroLineProps","crossedPosNeg","yDomain","domain","xDomain","x1","y1","x2","range","y2","getZeroLineProps","a","createElement","Fragment","assign","style","stroke","strokeWidth","top","left","scale","labelProps","labelColor","labelFontSize","labelTextAnchor","tickStroke","tickStrokeColor","numTicks","tickLabelProps","dx","dy","HoverLayer","lodash_throttle__WEBPACK_IMPORTED_MODULE_1__","lodash_throttle__WEBPACK_IMPORTED_MODULE_1___default","_vx_event__WEBPACK_IMPORTED_MODULE_2__","_hooks_useAnimationFrame__WEBPACK_IMPORTED_MODULE_3__","handleHover","hoverDetectionComponents","throttleTime","updatePosition","throttle","dataIndex","event","_localPoint","localPoint","handleTooltip","persist","hideTooltip","cancel","detectionAreas","map","area","handleCurrentTooltip","React","cloneElement","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","defaultProps","ResponsiveLayer","className","children","restProps","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","layerRef","react__WEBPACK_IMPORTED_MODULE_2___default","ref","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","TooltipLayer","_tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_1__","_tooltip_TooltipItem__WEBPACK_IMPORTED_MODULE_2__","axisProjectedValues","graphWidth","graphHeight","margin","_ref$x","basePos","_ref$y","_ref$xOffset","xOffset","_ref$yOffset","yOffset","projected","tooltipItems","projectedVals","pointY","key","color","text","projectedStrVal","show","baseStrVal","Legend","_vx_legend__WEBPACK_IMPORTED_MODULE_1__","SCALE_TYPE_TO_LEGEND","ordinal","LegendOrdinal","sequential","LegendLinear","direction","render","scaleType","title","LegendComponent","vxDirection","LegendGroupWrapper","styled","div","_templateObject","LeftLegendGroupWrapper","_templateObject2","RightLegendGroupWrapper","_templateObject3","LEGEND_WRAPPER_MAP","_templateObject4","right","bottom","_templateObject5","LegendGroup","forwardRef","legend","hide","_color$legend","orient","isSideLegend","indexOf","LegendGroupWrapperComponent","react__WEBPACK_IMPORTED_MODULE_1___default","_Legend__WEBPACK_IMPORTED_MODULE_3__","Wrapper","padding","_ref2","lineHeight","_ref3","align","defaultTextAlign","Title","h5","_ref4","titleFontSize","_ref5","titleColor","Description","span","_ref6","titleDescFontSize","_ref7","titleDescColor","HeaderBox","_ref8","desc","headerBoxTheme","headerBox","ThemeProvider","d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__","deepmerge__WEBPACK_IMPORTED_MODULE_2__","deepmerge__WEBPACK_IMPORTED_MODULE_2___default","COLORS","themes","default","colors","category","schemeCategory10","scheme","schemeBlues","interpolator","interpolateCool","globalStyle","fontColor","defaultTheme","Provider","resultTheme","partialTheme","deepmerge","arrayMerge","dest","source","mergeTheme","TooltipWrapper","Tooltip","_ref$show","tooltipStyle","onRightHalf","percentX","percentY","round","transform","transition","getTooltipPosition","useTransition","from","opacity","enter","leave","unique","item","props","react_spring__WEBPACK_IMPORTED_MODULE_3__","ItemWrapper","TooltipItem","_ref2$color","react__WEBPACK_IMPORTED_MODULE_1__","getXAxisScale","getYAxisScale","d3_array__WEBPACK_IMPORTED_MODULE_0__","d3_scale__WEBPACK_IMPORTED_MODULE_1__","_common_config__WEBPACK_IMPORTED_MODULE_2__","_getValByScaleType__WEBPACK_IMPORTED_MODULE_3__","_getFieldValuesFromData__WEBPACK_IMPORTED_MODULE_4__","getAxisScale","encoding","type","scaleConfig","dataVals","getFieldValuesFromData","getValue","getValByScaleType","scalePoint","d3Extent","time","scaleTime","scaleBand","paddingInner","paddingOuter","scaleLinear","getNumericDomain","values","_d3Extent","_d3Extent2","_d3Extent2$","extentMin","_d3Extent2$2","getColorScaleSetting","scaleOrdinal","sortedUniq","sort","b","Number","obj","getTime","scaleSequential","row","Error","getColorScale","_getColorScaleSetting","getDataGroupByFields","fields","reduce","all","rows","groupBy","joinedGroups","group","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getDataGroupByEncodings","encodings","fieldName","forEach","push","getRecordFieldSelector","_getValByScaleType__WEBPACK_IMPORTED_MODULE_0__","getOriginalVal","record","getScaledVal","getFormattedStringVal","recordValue","toLocaleString","_common_config__WEBPACK_IMPORTED_MODULE_0__","Date","styled_components__WEBPACK_IMPORTED_MODULE_0__","styledComponents","css","createGlobalStyle","keyframes"],"mappings":"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","file":"static/js/docs-chart-settings-data-encodings~docs-chart-settings-legend~docs-chart-settings-title~docs-charts-~265f51bf.67e9186b.js","sourcesContent":["import { ScaleType } from './types';\n\nconst SCALE_TYPE: ScaleType = 'linear';\n\nexport const DEFAULT_VALS = {\n  SCALE_TYPE,\n};\n","import {\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\n\nexport interface AnimationFrameControl {\n  /** The current animation frame ID */\n  animationFrame: number | null;\n\n  /** Function that takes `rafCallback` and put it into `window.requestAnimationFrame()`  */\n  requestWindowAnimationFrame: (rafCallback: () => void) => void;\n}\n\nexport function useAnimationFrame(): AnimationFrameControl {\n  /** stores the animation frame ID */\n  const animaFrameIdRef = useRef<number | null>(null);\n\n  const requestWindowAnimationFrame = useCallback(\n    (rafCallback) => {\n      animaFrameIdRef.current = window.requestAnimationFrame(rafCallback);\n    },\n    [],\n  );\n\n  useEffect(\n    () => {\n      // the functional component unmounting\n      return () => {\n        // cancel the scheduled update on the animation frame\n        if (animaFrameIdRef.current) {\n          window.cancelAnimationFrame(animaFrameIdRef.current);\n        }\n      };\n    },\n    [],\n  );\n\n  return {\n    requestWindowAnimationFrame,\n    animationFrame: animaFrameIdRef.current,\n  };\n}\n","import {\n  RefObject,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport resizeObserverPolyfill from 'resize-observer-polyfill';\n\nimport { GraphDimension } from '../common/types';\n\nimport { useAnimationFrame } from './useAnimationFrame';\n\ninterface ResizeObserverEntry {\n  readonly target: Element;\n  readonly contentRect: DOMRectReadOnly;\n}\n\nexport function useContainerDimension(\n  containerRef: RefObject<HTMLElement>,\n  debounceTime = 300,\n) {\n  const [dimension, setDimension] = useState<GraphDimension>({\n    width: 0,\n    height: 0,\n  });\n\n  /** resizeObsrRef.current stores the ResizeObserver */\n  const resizeObsrRef = useRef<ResizeObserver | null>(null);\n  /** use requestAnimationFrame to update the dimension */\n  const { requestWindowAnimationFrame } = useAnimationFrame();\n\n  /** Function to set the updated dimension */\n  const updateDimension = useCallback(\n    (width: number, height: number) => {\n      requestWindowAnimationFrame(() => {\n        setDimension({\n          width,\n          height,\n        });\n      });\n    },\n    [],\n  );\n\n  /**\n   * Function to be called when there are resizing events observed by ResizeObserver\n   * Ref: https://developers.google.com/web/updates/2016/10/resizeobserver\n   */\n  const debouncedResize = useCallback(\n    debounce(\n      (\n        entries: ResizeObserverEntry[],\n        observer: ResizeObserver,\n      ) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          updateDimension(width, height);\n        }\n      },\n      debounceTime,\n    ),\n    [],\n  );\n\n  useEffect(\n    () => {\n      // connect the resize observer on mounted\n      if (containerRef.current) {\n        resizeObsrRef.current = new resizeObserverPolyfill(debouncedResize);\n        resizeObsrRef.current.observe(containerRef.current!);\n      }\n\n      return () => {\n        // disconnect the resize observer on unmounted\n        if (resizeObsrRef.current) {\n          resizeObsrRef.current!.disconnect();\n        }\n      };\n    },\n    [containerRef],\n  );\n\n  return dimension;\n}\n","import { useState, useCallback } from 'react';\n\nimport { HoveredPointState, HoveringState } from '../common/types';\n\nexport interface HoverState {\n  /** Records whether there is mouse or touch event generating from the inner layer */\n  hovering: HoveringState;\n\n  /** The position of the point being hovered and its mapped index of data  */\n  hoveredPoint: HoveredPointState;\n}\n\nexport interface HoverStateControls extends HoverState {\n  /** set `hovering` as false; it should be called after the mouse left the `<HoverLayer>`. */\n  clearHovering: () => void;\n  /** set current hovered position and data index */\n  setHoveredPosAndIndex: (hoveredIndex: number, xPos: number, yPos: number) => void;\n}\n\nexport function useHoverState(): HoverStateControls {\n  const [hovering, setHovering] = useState(false);\n  const [hoveredPoint, setHoveredPoint] = useState({\n    index: 0,\n    position: {\n      x: 0,\n      y: 0,\n    },\n  });\n\n  const clearHovering = useCallback(\n    () => {\n      setHovering(false);\n    },\n    [],\n  );\n\n  const setHoveredPosAndIndex = useCallback(\n    (hoveredIndex: number, xPos: number, yPos: number) => {\n      setHovering(true);\n      setHoveredPoint({\n        index: hoveredIndex,\n        position: {\n          x: xPos,\n          y: yPos,\n        },\n      });\n    },\n    [],\n  );\n\n  return {\n    hovering,\n    hoveredPoint,\n    clearHovering,\n    setHoveredPosAndIndex,\n  };\n}\n","export * from './common/types';\nexport * from './common/config';\nexport * from './hooks/useContainerDimension';\nexport * from './hooks/useHoverState';\nexport * from './hooks/useAnimationFrame';\nexport * from './layers/ResponsiveLayer';\nexport * from './layers/AxisLayer';\nexport * from './layers/HoverLayer';\nexport * from './layers/TooltipLayer';\nexport * from './overlays/HeaderBox';\nexport * from './themes';\nexport * from './legend/Legend';\nexport * from './legend/LegendGroup';\nexport * from './tooltip/Tooltip';\nexport * from './tooltip/TooltipItem';\nexport * from './utils/getValByScaleType';\nexport * from './utils/getAxisScale';\nexport * from './utils/getColorScale';\nexport * from './utils/getDataGroupByEncodings';\nexport * from './utils/getRecordFieldSelector';\nexport * from './utils/getFieldValuesFromData';\nexport * from './utils/styled-components';\n","import React, { useContext, useMemo } from 'react';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\n\nimport { AxisScale, AxisEncoding } from '../common/types';\nimport { ThemeContext } from '../themes';\n\n/**\n * Returns the number of ticks on the axis based on the length of data and the axis\n * @param axisLength - length of the axis\n * @param data - data of the graph\n */\nfunction getNumberOfTicks(axisLength: number, data: object[]): number {\n  const maxTicks = Math.max(data.length, 2);\n  const lengthBasis = axisLength > 0 ? axisLength : 60;\n  const ticksFromLen = Math.ceil(lengthBasis / 60);\n  return Math.min(maxTicks, ticksFromLen);\n}\n\n/**\n * Returns the text of the label displayed along axis\n */\nfunction getAxisLabel(axis: AxisEncoding): string | undefined {\n  const { label, field, hideLabel } = axis;\n  if (hideLabel) {\n    return undefined;\n  }\n\n  return label || field;\n}\n\nexport interface AxisLayerProps {\n  /** Width of the inner graph */\n  width: number;\n\n  /** Height of the inner graph */\n  height: number;\n\n  /** Should show the axis on the left or not */\n  showLeftAxis: boolean;\n\n  /** Should show the axis on the bottom or not */\n  showBottomAxis: boolean;\n\n  /** Should show the zero line */\n  showZeroLine?: boolean;\n\n  /** Data of the chart */\n  data: object[];\n\n  /** Axis encoding of x-axis */\n  x: AxisEncoding;\n\n  /** Axis encoding of y-axis */\n  y: AxisEncoding;\n\n  /** Whether it is a vertical chart. True for most charts. */\n  drawFromXAxis?: boolean;\n\n  /** X-axis configurations produced by `getAxisScale` */\n  xAxisScale: AxisScale['scale'];\n\n  /** Y-axis configurations produced by `getAxisScale` */\n  yAxisScale: AxisScale['scale'];\n}\n\nconst getZeroLineProps = (\n  xAxisScale: AxisScale['scale'],\n  yAxisScale: AxisScale['scale'],\n  drawFromXAxis: AxisLayerProps['drawFromXAxis'],\n) => {\n  if (drawFromXAxis) {\n    const yPos = yAxisScale(0);\n    return {\n      x1: 0,\n      y1: yPos,\n      x2: xAxisScale.range()[1],\n      y2: yPos,\n    };\n  }\n\n  // horizontal charts\n  const xPos = xAxisScale(0);\n  return {\n    x1: xPos,\n    y1: 0,\n    x2: xPos,\n    y2: yAxisScale.range()[0],\n  };\n};\n\nconst getXtickLabelProps = (styles: {\n  tickFontSize: number,\n  strokeColor: string,\n}) => (value: any, index: number) => ({\n  fill: styles.strokeColor,\n  textAnchor: 'end',\n  fontSize: styles.tickFontSize,\n  dx: '-0.25em',\n  dy: '0.25em',\n});\n\nconst getYtickLabelProps = (styles: {\n  tickFontSize: number,\n  strokeColor: string,\n}) => (value: any, index: number) => ({\n  fill: styles.strokeColor,\n  fontSize: styles.tickFontSize,\n  textAnchor: 'middle',\n});\n\n/**\n * Always format the value as string to prevent the zero value from not showing\n */\nconst tickFormat = (val: any) => `${val}`;\n\nexport const AxisLayer: React.SFC<AxisLayerProps> = ({\n  width,\n  height,\n  x,\n  y,\n  // it should always show the left axis by default\n  showLeftAxis = true,\n  // it should always show the bottom axis by default\n  showBottomAxis = true,\n  // it should always show the zero line if its domain crosses zero\n  showZeroLine = true,\n  drawFromXAxis = true,\n  data,\n  xAxisScale,\n  yAxisScale,\n}) => {\n  const theme = useContext(ThemeContext);\n  const { xAxis: xAxisTheme, yAxis: yAxisTheme } = theme;\n\n  const xAxisLabel = useMemo(() => getAxisLabel(x), [x]);\n  const yAxisLabel = useMemo(() => getAxisLabel(y), [y]);\n\n  // props for the zero value auxiliary line\n  const zeroLineProps = useMemo(\n    () => {\n      let crossedPosNeg = false;\n      if (drawFromXAxis) {\n        const yDomain = yAxisScale.domain();\n        crossedPosNeg = yDomain[0] * yDomain[1] < 0;\n      } else {\n        const xDomain = xAxisScale.domain();\n        crossedPosNeg = xDomain[0] * xDomain[1] < 0;\n      }\n\n      // if there is no need to draw the zero value line\n      if (!(showZeroLine && crossedPosNeg)) {\n        return undefined;\n      }\n\n      return getZeroLineProps(xAxisScale, yAxisScale, drawFromXAxis);\n    },\n    [xAxisScale, yAxisScale, drawFromXAxis]\n  );\n\n  const axisLayer = useMemo(\n    () => {\n      return (\n        <>\n          {/* Zero value line */}\n          {zeroLineProps && (\n            <line\n              {...zeroLineProps}\n              style={{ stroke:'rgba(124, 137, 147, 0.25)', strokeWidth: 2 }}\n            />\n          )}\n\n          {/* Y Axis */}\n          {showLeftAxis && (\n            <AxisLeft\n              top={0}\n              left={0}\n              scale={yAxisScale}\n              label={yAxisLabel}\n              labelProps={{\n                fill: yAxisTheme.labelColor,\n                fontSize: yAxisTheme.labelFontSize,\n                textAnchor: yAxisTheme.labelTextAnchor,\n              }}\n              stroke={yAxisTheme.strokeColor}\n              strokeWidth={yAxisTheme.strokeWidth}\n              tickStroke={yAxisTheme.tickStrokeColor}\n              // TODO: modify it as a function\n              numTicks={getNumberOfTicks(height, data)}\n              tickLabelProps={getXtickLabelProps(yAxisTheme)}\n              tickFormat={tickFormat}\n              // TODO: format the ticks based on the axis types\n              // tickComponent={({ formattedValue, ...tickProps }) => (\n              //   <text {...tickProps}>{formattedValue}</text>\n              // )}\n            />\n          )}\n\n          {/* X Axis */}\n          {showBottomAxis && (\n            <AxisBottom\n              top={height}\n              scale={xAxisScale}\n              label={xAxisLabel}\n              labelProps={{\n                fill: xAxisTheme.labelColor,\n                fontSize: xAxisTheme.labelFontSize,\n                textAnchor: xAxisTheme.labelTextAnchor,\n              }}\n              stroke={xAxisTheme.strokeColor}\n              strokeWidth={xAxisTheme.strokeWidth}\n              tickStroke={xAxisTheme.tickStrokeColor}\n              numTicks={getNumberOfTicks(width, data)}\n              tickFormat={tickFormat}\n              tickLabelProps={getYtickLabelProps(xAxisTheme)}\n            />\n          )}\n        </>\n      );\n    },\n    [\n      width,\n      height,\n      x,\n      y,\n      showLeftAxis,\n      showBottomAxis,\n      showZeroLine,\n      data,\n      xAxisScale,\n      yAxisScale,\n    ]\n  );\n\n  return axisLayer;\n};\n","import React, { useCallback } from 'react';\nimport throttle from 'lodash/throttle';\nimport { localPoint } from '@vx/event';\n\nimport { useAnimationFrame } from '../hooks/useAnimationFrame';\n\nexport type HoverLayerProps = {\n  /** Set the information related to hover or touch interactions  */\n  setHoveredPosAndIndex: (hoveredIndex: number, xPos: number, yPos: number) => void;\n\n  /** Function to hide the tooltip */\n  clearHovering: () => void;\n\n  /**\n   * Hidden components to detect the mouse or touch interactions.\n   * **Note:** The order of the components should correspond to the order of the data.\n   */\n  hoverDetectionComponents: JSX.Element[];\n} & typeof defaultProps;\n\nconst defaultProps = {\n  /** Function to be called before the latest tooltip position is set */\n  handleHover: () => null,\n\n  /** The throttle time for the mouse and touch events */\n  throttleTime: 180,\n};\n\nexport const HoverLayer = ({\n  setHoveredPosAndIndex,\n  handleHover,\n  clearHovering,\n  hoverDetectionComponents,\n  throttleTime,\n}: HoverLayerProps) => {\n  /** use requestAnimationFrame to schedule updates of hovered position and data index */\n  const { requestWindowAnimationFrame } = useAnimationFrame();\n\n  /** Function to update the position of the tooltip and sets the currently active data index */\n  const updatePosition = useCallback(\n    throttle(\n      (dataIndex: number, event: React.SyntheticEvent) => {\n        // custom action which executes before the position is updated\n        handleHover();\n\n        // convert the position of the event to the coordinate system of the SVG\n        const { x, y } = localPoint(event);\n        requestWindowAnimationFrame(() => {\n          setHoveredPosAndIndex(\n            dataIndex,\n            x,\n            y,\n          );\n        });\n      },\n      throttleTime,\n    ),\n    [handleHover, setHoveredPosAndIndex, throttleTime],\n  );\n\n  /** Function to keep the event data and perform throttled updates of the position */\n  const handleTooltip = useCallback(\n    (dataIndex: number) => (event: React.SyntheticEvent) => {\n      // removes it from the event pool and allows references to the event\n      event.persist();\n      updatePosition(dataIndex, event);\n    },\n    [updatePosition],\n  );\n\n  /** Function to cancel the update of position and disable the hovering state */\n  const hideTooltip = useCallback(\n    () => {\n      // cancel the previously thorttled event to prevent the tooltip from reappearing\n      updatePosition.cancel();\n      clearHovering();\n    },\n    [updatePosition, clearHovering],\n  );\n\n  const detectionAreas = hoverDetectionComponents.map((area: JSX.Element, dataIndex: number) => {\n    const handleCurrentTooltip = handleTooltip(dataIndex);\n    return React.cloneElement(area, {\n      onTouchStart: handleCurrentTooltip,\n      onTouchMove: handleCurrentTooltip,\n      onMouseMove: handleCurrentTooltip,\n      onMouseLeave: hideTooltip,\n    });\n  });\n\n  // Render areas to detect hovering interaction with mouse pointers or touches with data points\n  return (\n    <>\n      {detectionAreas}\n    </>\n  );\n};\n\nHoverLayer.defaultProps = defaultProps;\n","import React, { FunctionComponent, useRef } from 'react';\n\nimport { useContainerDimension } from '../hooks/useContainerDimension';\n\nexport interface ResponsiveProps {\n  className?: string;\n  style?: React.CSSProperties;\n  debounceTime?: number;\n  children: (dimension: { width: number; height: number }) => React.ReactNode;\n}\n\nexport const ResponsiveLayer: FunctionComponent<ResponsiveProps> = ({\n  className,\n  style,\n  children,\n  debounceTime,\n  ...restProps\n}) => {\n  const layerRef = useRef<HTMLDivElement>(null);\n  const dimension = useContainerDimension(layerRef);\n\n  return (\n    <div\n      ref={layerRef}\n      style={{ ...style, width: '100%', height: '100%', position: 'relative' }}\n      className={className}\n      {...restProps}\n    >\n      {children(dimension)}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport { Margin, HoveringState, HoveredPointState } from '../common/types';\nimport { Tooltip } from '../tooltip/Tooltip';\nimport { TooltipItem } from '../tooltip/TooltipItem';\nexport interface GroupedY {\n  /** Index of `dataGroups` */\n  groupIdx: number;\n\n  /** Original value (normally on y-axis) */\n  projectedStrVal: number;\n\n  /** Projected position (normally on y-axis) */\n  projectedPos: number;\n\n  /** Color string of the point */\n  color: string;\n}\nexport interface AxisProjectedValue {\n  /** Projected position of the base axis (normally x-axis) */\n  basePos: number;\n\n  /** Original value on the base axis (normally x-axis) */\n  baseStrVal: number;\n\n  /** Corresponding data in `dataGroups` */\n  projectedVals: GroupedY[];\n}\n\nexport interface TooltipLayerProps {\n  hovering: HoveringState;\n  hoveredPoint: HoveredPointState;\n  drawFromXAxis?: boolean;\n  axisProjectedValues: AxisProjectedValue[];\n  graphWidth: number;\n  graphHeight: number;\n  margin: Margin;\n\n  /** X position of the tooltip */\n  x?: number;\n\n  /** Y position of the tooltip */\n  y?: number;\n\n  /** X offset for the position of the tooltip */\n  xOffset?: number;\n\n  /** Y offset for the position of the tooltip */\n  yOffset?: number;\n}\n\n/** Generates the tooltip box */\nexport const TooltipLayer = ({\n  hovering,\n  hoveredPoint,\n  drawFromXAxis = true,\n  axisProjectedValues,\n  graphWidth,\n  graphHeight,\n  margin,\n  x = drawFromXAxis\n    ? axisProjectedValues[hoveredPoint.index].basePos + margin.left\n    : hoveredPoint.position.x,\n  y = drawFromXAxis\n    ? hoveredPoint.position.y\n    : axisProjectedValues[hoveredPoint.index].basePos + margin.top,\n  xOffset = 0,\n  yOffset = 0,\n}: TooltipLayerProps) => {\n  const projected = axisProjectedValues[hoveredPoint.index];\n  const tooltipItems = projected.projectedVals.map((pointY, key) => (\n    <TooltipItem\n      key={`t${key}-${pointY.color}`}\n      color={pointY.color}\n      text={`${pointY.projectedStrVal}`}\n    />\n  ));\n\n  return (\n    <Tooltip\n      graphWidth={graphWidth}\n      graphHeight={graphHeight}\n      position={{\n        x: x + xOffset,\n        y: y + yOffset,\n      }}\n      show={hovering}\n    >\n      <h3>{`${projected.baseStrVal}`}</h3>\n      {tooltipItems}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { LegendLinear, LegendOrdinal } from '@vx/legend';\n\nimport { LegendConfig } from '../common/types';\n\nconst SCALE_TYPE_TO_LEGEND = {\n  ordinal: LegendOrdinal,\n  sequential: LegendLinear,\n};\n\nexport interface LegendProps {\n  direction?: LegendConfig['direction'];\n  scaleType: string;\n  scale: (val: any) => string;\n  title: string;\n  render?: (labels: ReadonlyArray<object>) => React.ReactNode;\n}\n\nconst defaultProps = {\n  direction: 'vertical',\n};\n\nexport const Legend = ({\n  direction,\n  render,\n  scaleType,\n  scale,\n  title,\n}: LegendProps) => {\n  const LegendComponent = SCALE_TYPE_TO_LEGEND[scaleType];\n  const vxDirection = direction === 'horizontal' ? 'row' : 'column';\n  return (\n    <div>\n      <div>{title}</div>\n      <LegendComponent scale={scale} direction={vxDirection}>\n        {render}\n      </LegendComponent>\n    </div>\n  );\n};\n\nLegend.defaultProps = defaultProps;\n","import React, { RefObject, forwardRef } from 'react';\n\nimport { ColorScale, LegendConfig } from '../common/types';\nimport { styled } from '../utils/styled-components';\n\nimport { Legend } from './Legend';\n\ninterface LegendGroupProps {\n  color?: ColorScale & { legend?: LegendConfig };\n}\n\nconst LegendGroupWrapper = styled.div`\n  position: absolute;\n`;\n\nconst LeftLegendGroupWrapper = styled(LegendGroupWrapper)`\n  top: 0;\n  left: 0;\n`;\n\nconst RightLegendGroupWrapper = styled(LegendGroupWrapper)`\n  top: 0;\n  right: 0;\n`;\n\nconst TopLegendGroupWrapper = styled(LegendGroupWrapper)`\n  top: 0;\n  left: 0;\n`;\nconst BottomLegendGroupWrapper = styled(LegendGroupWrapper)`\n  bottom: 0;\n  left: 0;\n`;\n\nconst LEGEND_WRAPPER_MAP = {\n  top: TopLegendGroupWrapper,\n  right: RightLegendGroupWrapper,\n  bottom: BottomLegendGroupWrapper,\n  left: LeftLegendGroupWrapper,\n};\n\n/**\n * Pass scales(color / shape / size, etc.) props,\n * LegendGroup will return corresponding legend.\n *\n */\nexport const LegendGroup = forwardRef((\n  { color }: LegendGroupProps,\n  ref: RefObject<HTMLDivElement>,\n) => {\n  /**\n   * TODO: May support more different scales(shape / size) here\n   * to include multiple legends.\n   */\n  if (!color || (color.legend && color.legend.hide)) {\n    return null;\n  }\n  const { scale, scaleType, field, legend = {} } = color;\n  const orient = legend.orient || 'right';\n  const isSideLegend = ['left', 'right'].indexOf(orient) !== -1;\n  const direction = legend.direction || (isSideLegend ? 'vertical' : 'horizontal');\n  const LegendGroupWrapperComponent = LEGEND_WRAPPER_MAP[orient];\n  return (\n    <LegendGroupWrapperComponent ref={ref} >\n      <Legend\n        scale={scale}\n        scaleType={scaleType}\n        title={field}\n        render={legend.render}\n        direction={direction}\n      />\n    </LegendGroupWrapperComponent>\n  );\n});\n","import React, { useContext } from 'react';\n\nimport { ThemeContext } from '../themes';\nimport { styled } from '../utils/styled-components';\nimport { HeaderBoxTheme } from '../common/types';\n\nexport interface HeaderBoxProps {\n  title?: string | JSX.Element;\n  desc?: string | JSX.Element;\n  align?: string;\n}\n\nconst Wrapper = styled.div<HeaderBoxTheme & Pick<HeaderBoxProps, 'align'>>`\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  box-sizing: border-box;\n  padding: ${({ padding }) => padding};\n  line-height: ${({ lineHeight }) => lineHeight};\n  text-align: ${({ align, defaultTextAlign }) => align || defaultTextAlign};\n`;\n\nconst Title = styled.h5<HeaderBoxTheme>`\n  font-size: ${({ titleFontSize }) => `${titleFontSize}px`};\n  color: ${({ titleColor }) => titleColor};\n  margin: 0;\n`;\n\nconst Description = styled.span<HeaderBoxTheme>`\n  font-size: ${({ titleDescFontSize }) => `${titleDescFontSize}px`};\n  color: ${({ titleDescColor }) => titleDescColor};\n`;\n\nexport const HeaderBox = React.forwardRef<\n  HTMLDivElement,\n  HeaderBoxProps\n>(({\n  title,\n  desc,\n  align,\n}, ref) => {\n  const theme = useContext(ThemeContext);\n  const { headerBox: headerBoxTheme } = theme;\n\n  if (!title && !desc) {\n    return null;\n  }\n\n  return (\n    <Wrapper\n      ref={ref}\n      align={align}\n      {...headerBoxTheme}\n    >\n      {title && (\n        <Title {...headerBoxTheme}>\n          {title}\n        </Title>\n      )}\n      {desc && (\n        <Description {...headerBoxTheme}>\n          {desc}\n        </Description>\n      )}\n    </Wrapper>\n  );\n});\n","import * as React from 'react';\nimport { schemeCategory10, interpolateCool, schemeBlues } from 'd3-scale-chromatic';\nimport deepmerge from 'deepmerge';\n\nimport { Theme } from '../common/types';\n\nconst COLORS = {\n  GRAY: '#7c8a94',\n  DARK: '#233142',\n};\n\ninterface ThemeProviderProps {\n  /** theme prop can be partial of Theme type */\n  theme: Partial<Theme>;\n  children: React.ReactNode;\n}\n\nexport const themes = {\n  default: {\n    colors: {\n      /** see [d3-scale-chromatic](https://github.com/d3/d3-scale-chromatic) */\n      category: schemeCategory10,\n      sequential: {\n        scheme: schemeBlues,\n        interpolator: interpolateCool,\n      },\n    },\n    globalStyle: {\n      fontColor: COLORS.DARK,\n    },\n    xAxis: {\n      labelFontSize: 15,\n      labelColor: COLORS.DARK,\n      labelTextAnchor: 'middle',\n      strokeColor: COLORS.GRAY,\n      tickStrokeColor: COLORS.GRAY,\n      strokeWidth: 1.5,\n      tickFontSize: 13,\n    },\n    yAxis: {\n      labelFontSize: 15,\n      labelColor: COLORS.DARK,\n      labelTextAnchor: 'middle',\n      strokeColor: COLORS.GRAY,\n      tickStrokeColor: COLORS.GRAY,\n      strokeWidth: 1.5,\n      tickFontSize: 13,\n    },\n    headerBox: {\n      titleFontSize: 19,\n      titleColor: COLORS.DARK,\n      titleDescFontSize: 15,\n      titleDescColor: COLORS.GRAY,\n      lineHeight: 1.3,\n      padding: '0.5rem 1rem',\n      defaultTextAlign: 'left',\n    },\n  },\n};\n\nconst defaultTheme = themes.default;\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nconst { Provider } = ThemeContext;\nfunction mergeTheme(theme: Theme, partialTheme: Partial<Theme>): Theme {\n  // see https://github.com/TehShrike/deepmerge\n  return deepmerge(\n    theme,\n    partialTheme,\n    { arrayMerge: (dest, source) => source },\n  );\n}\n\nexport const ThemeProvider = ({ theme, children }: ThemeProviderProps) => {\n  const resultTheme = mergeTheme(defaultTheme, theme);\n  return (\n    <Provider value={resultTheme}>\n      {children}\n    </Provider>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { useTransition, animated } from 'react-spring';\n\nimport { styled } from '../utils/styled-components';\n\nexport interface TooltipProps {\n  position: {\n    x: number;\n    y: number;\n  };\n  show: boolean;\n  children: React.ReactNode;\n  graphWidth: number;\n  graphHeight: number;\n}\n\nconst TooltipWrapper = styled.div`\n  display: table;\n  position: absolute;\n  min-width: 3rem;\n  background-color: rgba(255, 255, 255, 0.8);\n  padding: 0.5rem 1.2rem;\n  border-radius: 5px;\n  font-size: 1rem;\n  white-space: nowrap;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  transition: all 500ms linear;\n  box-shadow: 0px 2px 8px 3px rgba(120,120,120,0.3);\n\n  h3 {\n    color: #7c8a94;\n    margin: 0.15rem 0 0.4rem 0.1rem;\n    font-size: 1.1rem;\n  }\n`;\n\n/**\n * Returns the position and transform\n * which limit the tooltip within the bound of the graph\n */\nfunction getTooltipPosition(\n  graphWidth: TooltipProps['graphWidth'],\n  graphHeight: TooltipProps['graphHeight'],\n  position: TooltipProps['position'],\n) {\n  const onRightHalf = (position.x / graphWidth) > 0.5;\n  const percentX = onRightHalf ? -100 : 0;\n  const percentY = Math.round(-80 * (position.y / graphHeight));\n  const xOffset = onRightHalf ? -16 : 16;\n  return {\n    top: `${position.y}px`,\n    left: `${position.x + xOffset}px`,\n    transform: `translate(${percentX}%, ${percentY}%)`,\n    transition: 'all 150ms ease',\n  };\n}\n\nexport const Tooltip: FunctionComponent<TooltipProps> = ({\n  position,\n  children,\n  show = false,\n  graphWidth,\n  graphHeight,\n}) => {\n  if (!position) {\n    return null;\n  }\n\n  const tooltipStyle = getTooltipPosition(graphWidth, graphHeight, position);\n\n  const transition = useTransition(show, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    unique: true,\n  });\n\n  // use transition to control the mounting/unmounting of Tooltip\n  return (\n    <>\n      {transition.map(({ item, key, props }) => (\n        item && (\n          <animated.div key={key} style={{ ...props, transition: 'opacity 300ms ease-out' }}>\n            <TooltipWrapper style={tooltipStyle}>\n              {children}\n            </TooltipWrapper>\n          </animated.div>\n        )\n      ))}\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport { styled } from '../utils/styled-components';\n\nexport interface TooltipItemProps {\n  color: string;\n  text: string;\n}\n\nconst ItemWrapper = styled.div`\n  margin: 0.1rem 0;\n\n  &:before {\n    content: '';\n    width: 0.35rem;\n    height: 0.35rem;\n    background-color: ${({ color }) => color};\n    float: left;\n    margin: 0.5rem 0.8rem 0 0.1rem;\n    border-radius: 50%;\n  }\n`;\n\nexport const TooltipItem: React.SFC<TooltipItemProps> = ({\n  color = 'gray',\n  text,\n}) => {\n  return (\n    <ItemWrapper color={color}>\n      {text}\n    </ItemWrapper>\n  );\n};\n","import { extent as d3Extent } from 'd3-array';\nimport {\n  scaleLinear,\n  scalePoint,\n  scaleTime,\n  scaleBand,\n} from 'd3-scale';\n\nimport { AxisScale, ScaleType, AxisEncoding } from '../common/types';\nimport { DEFAULT_VALS } from '../common/config';\n\nimport { getValByScaleType } from './getValByScaleType';\nimport { getFieldValuesFromData } from './getFieldValuesFromData';\n\nexport interface GetAxisScaleArgs {\n  data: object[];\n  encoding: AxisEncoding;\n  axisLength: number;\n}\n\n/**\n * Computes and returns the configurations for the axis,\n * such as its domain, range and d3 scale functions\n */\nexport function getAxisScale(\n  min: number,\n  max: number,\n  data: object[],\n  encoding: AxisEncoding,\n): AxisScale {\n  const range: AxisScale['range'] = [min, max];\n  const { field, type, scaleConfig } = encoding;\n\n  const dataVals = getFieldValuesFromData(data, field);\n\n  let domain: AxisScale['domain'];\n  let scale;\n  const scaleType: ScaleType = encoding.scale || DEFAULT_VALS.SCALE_TYPE;\n  const getValue = getValByScaleType(scaleType);\n\n  switch (scaleType) {\n    case 'point': {\n      domain = dataVals;\n      scale = scalePoint().domain(domain).range(range);\n      break;\n    }\n    case 'time': {\n      domain = d3Extent(dataVals.map(time => getValue(time)));\n      scale = scaleTime().domain(domain).range(range);\n      break;\n    }\n    case 'band': {\n      domain = dataVals;\n      scale = scaleBand().domain(domain).range(range);\n      if (scaleConfig) {\n        const { padding, paddingInner, paddingOuter } = scaleConfig;\n        if (padding) {\n          scale.padding(padding);\n        }\n        if (paddingInner) {\n          scale.paddingInner(paddingInner);\n        }\n        if (paddingOuter) {\n          scale.paddingOuter(paddingOuter);\n        }\n      }\n      break;\n    }\n    case 'linear':\n    default: {\n      domain = d3Extent(dataVals);\n      scale = scaleLinear().domain(domain).range(range);\n      break;\n    }\n  }\n\n  const axisScale = {\n    field,\n    range,\n    domain,\n    scaleType,\n    type,\n    scale,\n  };\n  return axisScale;\n}\n\nexport function getXAxisScale({ encoding, data, axisLength }: GetAxisScaleArgs): AxisScale {\n  return getAxisScale(0, axisLength, data, encoding);\n}\n\nexport function getYAxisScale({ encoding, data, axisLength }: GetAxisScaleArgs): AxisScale {\n  return getAxisScale(axisLength, 0, data, encoding);\n}\n","import map from 'lodash/map';\nimport sortedUniq from 'lodash/sortedUniq';\nimport { extent as d3Extent } from 'd3-array';\nimport { scaleOrdinal, scaleSequential } from 'd3-scale';\n\nimport { Theme, ColorEncoding, ColorScale } from '../common/types';\n\ninterface ColorScaleArgs {\n  colors: Theme['colors'];\n  encoding: ColorEncoding;\n  data: object[];\n}\n\nfunction getNumericDomain(values: number[]): [number, number] {\n  /**\n   * The `d3Extent` return [number, number] | [undefined, undefined].\n   * Maybe there is better way to make compiler happy, it's a workaround now.\n   */\n  const [extentMin = 0, extentMax = 0] = d3Extent(values);\n  return [extentMin, extentMax];\n}\n\nconst getColorScaleSetting = ({\n  colors,\n  encoding,\n  data,\n}: ColorScaleArgs): Pick<\n  ColorScale,\n  Extract<keyof ColorScale, 'domain' | 'scale' | 'range' | 'scaleType'>\n> => {\n  const { field, type } = encoding;\n  switch (type) {\n    case 'nominal': {\n      const domain = map(data, field);\n      const scale = scaleOrdinal(colors.category).domain(domain);\n      return {\n        domain,\n        scale,\n        scaleType: 'ordinal',\n        range: colors.category,\n      };\n    }\n    case 'ordinal': {\n      /**\n       * make sure the element is unique or\n       * scaleOrdinal will treat same element in domain as different value and map it incorrectly.\n       */\n      const domain = sortedUniq(map(data, field).sort((a, b) => Number(a) - Number(b)));\n      const range = colors.sequential.scheme[domain.length];\n      const scale = scaleOrdinal(range).domain(domain);\n      return {\n        domain,\n        range,\n        scale,\n        scaleType: 'ordinal',\n      };\n    }\n    case 'temporal': {\n      const timeStamps: number[] = data.map(obj => obj[field].getTime());\n      const domain = getNumericDomain(timeStamps);\n      const scale = scaleSequential(colors.sequential.interpolator)\n        .domain(domain);\n      return {\n        domain,\n        scale,\n        scaleType: 'sequential',\n      };\n    }\n    case 'quantitative': {\n      const values = data.map(row => Number(row[field]));\n      const domain = getNumericDomain(values);\n      const scale = scaleSequential(colors.sequential.interpolator).domain(domain);\n      return {\n        domain,\n        scale,\n        scaleType: 'sequential',\n      };\n    }\n    default: {\n      throw Error('Invalid color encoding type.');\n    }\n  }\n};\n\n/**\n * computes and returns domain, range, color scale and value selector,\n * which you can utitlize in Chart component.\n */\n\nexport function getColorScale({\n  colors,\n  encoding,\n  data,\n}: ColorScaleArgs): ColorScale {\n  const { type, field } = encoding;\n  const { scale, scaleType, domain, range } = getColorScaleSetting({ colors, encoding, data });\n  return {\n    scale,\n    domain,\n    type,\n    field,\n    range,\n    scaleType,\n  };\n}\n","import groupBy from 'lodash/groupBy';\nimport values from 'lodash/values';\n\nimport { Encoding } from '../common/types';\n\n/**\n * It's a utility to split rows into different sub rows by multiple field.\n * For example, given:\n * const data = [\n *   { value: 1, type: 'a', color: 'green' },\n *   { value: 2, type: 'b', color: 'green' },\n *   { value: 3, type: 'a', color: 'red' },\n *   { value: 4, type: 'b', color: 'red' },\n *   { value: 5, type: 'a', color: 'green' },\n *   { value: 6, type: 'b', color: 'green' },\n *   { value: 7, type: 'a', color: 'red' },\n *   { value: 8, type: 'b', color: 'red' },\n * ]\n * `getDataGroupByFields(data, ['type', 'color']) will categorize data by fields and return\n * [\n *   [\n *     { value: 1, type: 'a', color: 'green' },\n *     { value: 5, type: 'a', color: 'green' },\n *   ],\n *   [\n *     { value: 2,  type: 'b', color: 'green' },\n *     { value: 6,  type: 'b', color: 'green' },\n *   ],\n *   [\n *     { value: 3, type: 'a', color: 'red' },\n *     { value: 7, type: 'a', color: 'red' },\n *   ],\n *   [\n *     { value: 4 type: 'b', color: 'red' }\n *     { value: 8 type: 'b', color: 'red' }\n *   ],\n * ]\n */\n\nexport function getDataGroupByFields(data: object[], fields: string[]): object[][] {\n  return fields.reduce(\n    (all, field) => {\n      const groups = all.map(rows => values(groupBy(rows, field)));\n      return groups.reduce((joinedGroups, group) => [...joinedGroups, ...group], []);\n    },\n    [data],\n  );\n}\n\n/**\n *\n * It's a utility to split rows into different sub rows by multiple encoding.\n * It will get field name from encodings\n * and apply `getdataGroupByFields` to build data group.\n */\n\nexport function getDataGroupByEncodings(data: object[], encodings: Encoding[]): object[][] {\n  const fieldsToGroupBy: string[] = encodings\n    .map(encoding => encoding!.field);\n  return getDataGroupByFields(data, fieldsToGroupBy);\n}\n","/**\n * Returns an array of data selected by the given field name of the data array.\n * It will filter out null and undefined values automatically.\n * @param data - an array of data with various fields\n * @param fieldName - the field to be selected\n */\nexport function getFieldValuesFromData(\n  data: object[],\n  fieldName: string,\n) {\n  const dataVals: any[] = [];\n  data.forEach((row) => {\n    const val = row[fieldName];\n    if (val !== undefined && val !== null) {\n      dataVals.push(val);\n    }\n  });\n  return dataVals;\n}\n","import { Scale } from '../common/types';\n\nimport { getValByScaleType } from './getValByScaleType';\n\n/**\n * Returns the data value selectors for a data record\n * using the computed axis configurations including the d3Scale function of the axis\n * @param axis - AxisScale\n * @param fieldIndex - the current index of the field\n */\nexport function getRecordFieldSelector(\n  axis: Pick<Scale, Extract<keyof Scale, 'field' | 'scale' | 'getValue' | 'scaleType'>>,\n) {\n  const { field, scale, scaleType } = axis;\n  const getValue = getValByScaleType(scaleType);\n\n  /** Given a record of data, it returns the original value of the specified field */\n  const getOriginalVal = (record: object) => getValue(record[field]);\n\n  return {\n    getOriginalVal,\n\n    /**\n     * Given a record of data,\n     * it returns the mapped value (computed by d3 scale function) of the specified field\n     */\n    getScaledVal: (record: object) => scale(getOriginalVal(record)),\n\n    getFormattedStringVal: (record: object) => {\n      const recordValue = getOriginalVal(record);\n\n      if (scaleType === 'time') {\n        // FIXME: unify the way of formatting datetime\n        return recordValue.toLocaleString();\n      }\n\n      return recordValue;\n    },\n  };\n}\n","import { ScaleType } from '../common/types';\nimport { DEFAULT_VALS } from '../common/config';\n\n/**\n * Returns the orignal value of the data\n * based on the scale type.\n * It currently formats the date string as Date object.\n */\nexport function getValByScaleType(\n  scaleType: ScaleType = DEFAULT_VALS.SCALE_TYPE\n) {\n  let getValue = (val: any) => val;\n\n  if (scaleType === 'time') {\n    // TODO: think out a way to deal with the date type\n    getValue = (val: string) => new Date(val);\n  }\n\n  return getValue;\n}\n","import * as styledComponents from 'styled-components';\n\nexport interface ThemeInterface {\n  primaryColor: string;\n  primaryColorInverted: string;\n}\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<ThemeInterface>;\n\nexport { styled, css, createGlobalStyle, keyframes };\n"],"sourceRoot":""}