{"version":3,"sources":["/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/docs/chart-settings/Legend.mdx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/docs/sampleData/lineData.js","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/docs/sampleData/multiLinesData.js","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/common/config.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/utils/getInnerGraphDimensionAndMargin.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/hooks/useChartDimensions.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/utils/getAxisProjectedValues.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/hooks/useCartesianEncodings.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/frames/SvgWithAxisFrame.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/line/LineChart.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/bar/BarChart.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/chart/src/index.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Props","LineChart","lineData","multiLinesData","__codesandbox","style","width","height","_ichef_transcharts_chart__WEBPACK_IMPORTED_MODULE_4__","data","x","type","field","y","color","size","legend","hide","href","render","labels","map","label","idx","key","backgroundColor","value","padding","marginBottom","text","direction","orient","target","rel","isMDXComponent","date","weekday","mutliLinesData","DEFAULT_VALS","MARGIN","top","right","bottom","left","DEFAULT_LENGTH","getInnerGraphDimensionAndMargin","dimension","margin","headerDimension","legendDimension","legendOrient","outerWidth","outerHeight","graphWidth","graphHeight","graphMargin","objectSpread","graphDimension","useChartDimensions","arguments","length","undefined","chartRef","useRef","legendRef","titleRef","outerDimension","useContainerDimension","_useMemo","useMemo","getAxisProjectedValues","dataGroups","xSelector","ySelector","getColorString","projections","xPositions","forEach","group","groupIdx","row","xStrVal","getFormattedStringVal","yStrVal","xPos","getScaledVal","yPos","push","keys","reduce","accum","groupedY","column","concat","toConsumableArray","sort","a","b","getLinearDomainFromDataGroup","keyField","valueField","aggreatedMax","aggreatedMin","val","Math","min","apply","values","max","useCartesianEncodings","theme","sortedData","getValue","getValByScaleType","scale","getOriginalVal","record","rowA","rowB","encodings","filter","encoding","getDataGroupByEncodings","xAxis","axisScale","getXAxisScale","axisLength","domain","yAxis","getYAxisScale","getRecordFieldSelector","colorScale","getColorScale","colors","defaultColor","category","axisProjectedValues","scalesConfig","rowValSelectors","getString","Wrapper","styled","div","_templateObject","fontColor","FrameContent","_ref2","showLeftAxis","showBottomAxis","axisInBackground","svgOverlay","children","axisLayer","react_default","createElement","src","xAxisScale","yAxisScale","Fragment","transform","defaultProps","SvgWithAxisFrame","React","forwardRef","_ref3","ref","title","titleDesc","titleAlign","restProps","objectWithoutProperties","globalStyle","useContext","ThemeContext","SvgWithAxisFrame_FrameContent","desc","align","getXPosByIndex","arr","arrIdx","HoveringIndicator","hovering","projectedPoints","circles","pointY","cx","cy","r","fill","x1","y1","x2","y2","stroke","strokeWidth","DataLine","rows","lineDots","dataRow","index","vx_shape_es","strokeLinecap","strokeLinejoin","_useChartDimensions","_useHoverState","useHoverState","clearHovering","hoveredPoint","setHoveredPosAndIndex","_useCartesianEncoding","graphGroup","colorString","LineChart_DataLine","hoverDetectionComponents","rectX","rectWidth","opacity","LineChart_HoveringIndicator","paddingInner","BarChart","_ref2$margin","_ref2$paddingInner","xEncoding","scaleConfig","yEncoding","bandScale","linearScale","bandWidth","bandwidth","getHoveringRectPos","useCallback","paddingVal","baseY","positiveY","nonPositiveY","getAccumY","scaledY","rowIdx","abs","xOffset","BarChart_HoveringIndicator","__webpack_require__","d","__webpack_exports__","LineChart_LineChart","BarChart_BarChart"],"mappings":"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","file":"static/js/docs-chart-settings-legend.f2ead424.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { LineChart } from '@ichef/transcharts-chart'\nimport lineData from '../sampleData/lineData';\nimport multiLinesData from '../sampleData/multiLinesData'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"legend\"\n    }}>{`Legend`}</h1>\n    <p>{`By default, when we pass `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop to Chart component (`}<inlineCode parentName=\"p\">{`<LineChart>`}</inlineCode>{`, or any other charts in future), it will render legend.`}</p>\n    <p>{`You could hide / customize legend if you want. See the following example.`}</p>\n    <h2 {...{\n      \"id\": \"default-legend\"\n    }}>{`Default legend`}</h2>\n    <Playground __position={0} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpTmsk8Lzd_cx2MVykOmGaZlnHqkKnsbML8QBkuTvSsmzVOs8T_y0ChgP0BhFuE0TxLWgBtdYoKwK4kqWBr2AATiWfXaEShWpu3yQkqmyQ5am9hhcQG_hfFkYgm2fWt_aPVqETrKLFXq4ps3q4ACse8siHzPifM-F85bXySrfGB98liPxgM_eCiVLAMk_ivdga92ByxwEAlogDgEHzlEfcB585ZJmgbA2BD8n4v0SgAdWyBg6sP9Ur_3YccEBJCwGn3IQVKhd8kq0KQfQuU1gOhKEwdg2aBDppEMmu0UhfCL4AMEXA4RCC6EoLlIzCALCAC6Kp_TOiwFpAmRMpgj3UsY3u_dLKwBskbByJt1Lj0AroECBgwJ43tLPHSBARKOVNkpJe0j14cN3jbSa_B85TS6lw4hSjeEQMvuomhWjRE6Lfh_PaX8opYN_hw_Bxd2CxJ-jAOWCT96KOUakqBQiMlziya_NB7s8nhJwcUpYpTynzCqSABRoDj4qIoek-BzTkGvyYegFh39CmcK3kmHpFSrh9JgPEwZiTakpP4eMzRkyxHtAke0KRrCFmyK3n_aJayQD5wGUMnhIzUlqMaRMxBUzEp6LmQU7BQtIkrJDuszZjzknPPIVfN5ByPlHPflDDp5zsElW6TcspdyKkPO2cMshkD9kiM-eI9BCL5nYIAOwot6ei_p1TuFgpxWMqF-KjkzJ-WwuWHDlmouBTSpJdS9mMsyQS45eBJH5LYQADg4dcyl9yeU7PBaovFgqjnfIRUY3yvipgWN0s2cIQTXHiVsUoEAA1tiuDSOPagHip6gRANFas_BUDekZEgNFPxizVAyOaH8VkurrH4G7AQ-RqD8FuUlHA4akp-odX3eA5B-gzG7P6V1_AlpnUIrAaEWBB6ZswGSSgiRcx5AKBOTUvEix_FLNGiw_AohoFDWi1Q2Bx7VrRXmugmA_IQHgA2-17N-B4QbfwAAelNHAuCo2DJXPwU0koh0gFHSVHA4qcAgunYIMtVp52LuXau_g6x0byF7h67wHxqCQBSJa1A1q9C2uincmAPosihv4PG8UtBzSzotLMGY_Aj1J3kEAA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\"\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <p>{`Note that the legend shape will depends on the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` (which influences the scale), for example:`}</p>\n    <Playground __position={1} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={[\\n      { x: 1, y: 5, size: 3 },\\n      { x: 3, y: 6, size: 3 },\\n      { x: 2, y: 3, size: 3 },\\n      { x: 9, y: 7, size: 3 },\\n      { x: 7, y: 1, size: 3 },\\n      { x: 4, y: 2, size: 5 },\\n      { x: 1, y: 10, size: 5 },\\n      { x: 6, y: 4, size: 5 },\\n      { x: 8, y: 9, size: 5 },\\n      { x: 9, y: 0, size: 5 },\\n      { x: 5, y: 3, size: 8 },\\n      { x: 3, y: 8, size: 8 },\\n      { x: 4, y: 4, size: 8 },\\n      { x: 10, y: 7, size: 8 },\\n    ]}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'size\\',\\n      type: \\'ordinal\\',\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq6AG1Vd1iwoKwK4pqWBr2AAViWfIJquJM9qy03TfN53rauEqHfGyaXaUE2PfYC32Dl73Ur9p3Utd4Pdc99gAE5I4AdmjgO45192otDq505aS2M-drOc_ZxPZsL8Pi7t0uy7NvPpsjoWa9tuv68T32q8rx3JrboPs_dxOAA5I5Ts7_aufu3fr3Ow_Hm2ktb9uy8T-2q6TGvh5XnPE83qvR4nmPt4H2e56uSubZ7yf2BPmeO8bluq4L3urjv-OLAAXXR-usB5775iJQAI6hHcDEJSMRWAwHFpAec6BEoZWVh_Fo_9QqALlCAsBLxohsGgUsWBr1EqJGhvIH-ZcqBQCFDzZBFgCHwLlL3IaZ80GTXaEKPK8QmFl1IfHTcJtMaxhXFIOmDMmYs0elIKm2MzBfhADJOS3orI2VUtZcS_4tAUGAvoBgi1hKiXEmtY21ZE5LyruPfWtBEoKymknSQSUpqSDllNdgwtECuOFuLEYQRtj6xtu0PU1ASEz0TlbKu68LGsOsbY-xji5YuKSm4hJHilheJgD4-CiVLAMiCesROcscDrxtuErIVj7HRIcXLF27iklJU8d43xiUADq2QcnGMbvvG2-8ImlJsXYipBV4mJMSXUtJDS5TWA6Kfc-7BL5F2OCUuUUS-mOLbtU4ZKT6kZLlIzCArTP4qn9M6LAWkCZEymCo9SBzZHyMsrAGydl9LkSMmogC2hdAgQMGBPG9pdE6QICJRyzylKGNyY3UxNtx4sKuPwFhU0urzMsYsspyynGDOqSM9JfiAlQzriEyO68oXsBhT9GAct4XdKRb0mJcs4lrOSXOUZWz2hZOgbixuEcwlLEJcS-YZKQBLApe0JZ1Kqk1PWQyzFTSWlsrDh0r2ADJo8pgHC_lCLInIupQMultSNmMr8RM9oUyK7Ny5SS6FIAWF8oFQsoVGqKmrLFfS1Jkrtn9FaQ3MOT8IWmvQUqlV1rEW2qpRU5x2qMVjP8YEmVPt8U-sVRaklVq1U9PKbEtFNTw1MpZe66ZBcilxvNZa8lNrhUVNFUMp1my_HNPQDmvJkd97coTfMf1ybKWprllqx1OqJURoNUaxuh8bahKbUW1VgrS0rPTeK51Eadl7IObjY5-MYCE10s2cIAKnmXJkUoEAA1tiuDSOo6ggF3naLAtFas_BUDekZEgIlQFyh_FLOaH8VkurrH4FAgQ-RqD8HNUlHAQGkqfuvXI-A5B-gzG7P6B9_AloT1_NCLAijYDHBgGSSgiRcx5AKBOTUvEiwvpqAIMDFh-BRDQABx9qhsDqPI4-zA8xwx-QgPAGjV72b8DwjR_gAA9KaOB8mgf5SufgppJR8ZAIJkqOBh44H9eJwQhGrTSdk_JxT_B1jo3kLI4s1QPjUEgCkE9qAz1aNAiAaKFqYA-iyAB_gUHxS0HNJJi0swZj8D06Q-QQA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={[{\n          x: 1,\n          y: 5,\n          size: 3\n        }, {\n          x: 3,\n          y: 6,\n          size: 3\n        }, {\n          x: 2,\n          y: 3,\n          size: 3\n        }, {\n          x: 9,\n          y: 7,\n          size: 3\n        }, {\n          x: 7,\n          y: 1,\n          size: 3\n        }, {\n          x: 4,\n          y: 2,\n          size: 5\n        }, {\n          x: 1,\n          y: 10,\n          size: 5\n        }, {\n          x: 6,\n          y: 4,\n          size: 5\n        }, {\n          x: 8,\n          y: 9,\n          size: 5\n        }, {\n          x: 9,\n          y: 0,\n          size: 5\n        }, {\n          x: 5,\n          y: 3,\n          size: 8\n        }, {\n          x: 3,\n          y: 8,\n          size: 8\n        }, {\n          x: 4,\n          y: 4,\n          size: 8\n        }, {\n          x: 10,\n          y: 7,\n          size: 8\n        }]} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"size\",\n          type: \"ordinal\"\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"hide-legend\"\n    }}>{`Hide legend`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`legend: { hide: true }`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` will hide legend.`}</p>\n    <Playground __position={2} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n      legend: {\\n        hide: true,\\n      },\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpT3XYDSDArminWq4sGxMCuVEGSypuayUQuLCTwvN39zHYxXKQ6YZpmWceqQqexswvxAGS5O9KybNU6zxP_LQKGA_QGEW4TRPEtaAG11igrAriSpYGvYABOJZ9doRKFamu_JCSqbJDlqb2GFxB_7C3FiMII2x9a33aHqagidO5RXYJfaaN8rgAFZH5ZBfp_d-n9v5yz_klAB-CgFLBATAMB8FEqWAZDA8-8CrhyxwKgloKC0HPzlK_LBX85ZJjwQQghwDQHgMSgAdWyNQ6sF8rhJiQalFhk12jsI_pwgqPDAFJX4aQwRcprAdB7uI2h7BZpMMQccdBbDMGKO_sglRhC1HEIEeQuUjMIBiIALoqn9M6LAWkCZEymOvdS7iF5L0srAGyRsHIm3UlvQCugQIGDAnje0B8dIEBEo5U2SlT40IQdfIxD8baTX4PnKaXUTGsPkeY7BP9rF8LsRohxkDoF7VgRI4xt9GHF3YEUn6MA5alKfnIhRVTcGqNqXOepEDKHu2adkuh0iOk9KuN0-YfSQCyIwW_CxXCalEPGWQiBIj0BiIsK0qRRizmdOWTAEpayymDMqUonZti9maPaNo9ouiTn6MMbfKaSxLkgHzqs9ZZjNlVKsaM3ZJD9mJScccuBCChbSPyQC4p_TTEVLBZw3-kLnnQteVAqGMy9EIJKvM_5iyumAp6cCu5GyOE4KeeomFWiqHEq-QggA7OSgpSzqUrPReUoZnDuG4uZa8w58LWly2kRcylVybkgsxQyuWyixV1JZW8vAOiWn6IABzSL-byqlQLBX3KxZYplGrXlwuJW43yiSpg-N0s2cIaTIniUCUoEAA1tiuDSFvagMTd6gRAA3Cw_BUDekZEgKlPxizVAyOaH8VkurrH4G7AQ-RqD8D5UlHA-akppurPwco5B-gzG7P6WN_AlpnUIrAaEWAV6NswGSSgiRcx5AKBOTUvEix_FLMWiNIAohoFzVS1Q2At7DqpW2ugmA_IQHgBO8NNZS1BQnfwAAelNHA9Ci1rJXPwU0kot0gF3SVHAeqcCKuPYIPtVpz2Xuvbe_g6x0byAXgm7wHxqCQBSIG1Awa9ChuioCmAPosi5v4OW8UtBzSnotLMGY_Av1J3kEAA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\",\n          legend: {\n            hide: true\n          }\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-legend\"\n    }}>{`Custom legend`}</h2>\n    <p>{`You could also pass render props in `}<inlineCode parentName=\"p\">{`color.legend.render`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`render`}</inlineCode>{` function will be passed into `}<inlineCode parentName=\"p\">{`<Legend>`}</inlineCode>{` in @vx/legend package.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://vx-demo.now.sh/legends\"\n      }}>{`vx/legend custom legend example`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://vx-demo.now.sh/static/docs/vx-legend.html#legend-\"\n      }}>{`legend component document`}</a></p>\n    <Playground __position={3} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n      legend: {\\n        render: labels => {\\n          return (\\n            <div>\\n              {labels.map((label, idx) => {\\n                return (\\n                  <div\\n                    key={idx}\\n                    style={{\\n                      backgroundColor: label.value,\\n                      color: \\'#eee\\',\\n                      padding: \\'5px 10px\\',\\n                      marginBottom: 5,\\n                    }}\\n                  >\\n                    {label.text}\\n                  </div>\\n                )\\n              })}\\n            </div>\\n          )\\n        },\\n      },\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpT3XYDSDArminWq4sScMiuODAigOwyaiwuq66Ag-nMCmm6bmNZF7keovb-c4BwKIZgjCNp6gJYuCwUmjobyfJ_7wfjsb7eU7HifD5rbYYED4A1-T0-R65y7gC32_t48CVtkQtoMEcdOy2E1wO5wKweIDIsrP23mnIUiUADEQQC4HzAbrHKnYCiJQAKzFSFuVUBCCm6xXiteEQEQiBXFQdgnBusk4n0PmzchT1l44FoFgAgN9aGY1jFQkeb5yH7RYafNh494FNy4YfJQVDRGCIsJQwRm5_b8JoVIOmDMmYs0elIKm2MzBfhADJOS3orI2VUtZcS_4tAUGAvoBgi1hKiXEmtAA2usKCWArhJSWA1dgABOJY-taCJQVlNDxkgkpTUkHLKa7BhaIEicLcWIwgjbH1u49oepqCJ2wU4q4U03EkO8VkPxwTAnBNCXLCJSUollJiUsOJMAEnwUSpYBkaTHHsGcewOWOBSEtByccPJcp_GFJCXLJMpTynlNifExJiUADq2QmnVgyalbJiyem-L6QUoJgyCojOiUlcZNTJlymsB0cRFgFmzS6dNXJqz2j9I2aE1B2yKm7KqRMupcpGYQDmQAXRVP6Z0WAtIEyJlMQx6lflaJ0ZZWANkjYORNupExgFdAgQMGBPG9orE6QICJRypslL2Oaa01xFyvE20mvwfOU0uorMmjc9ZRSwmPLGS8_ZbzkmpL2uklpmSlmdOLuwClP0YBy2pT42ltyGUlJ2cyucrKkkNPdpywlVw5a8qWPywV8wRUgCueK-lgzhnSsqbK2pSSZnoDmac7lyz3FJnVUKq4mqYBUp1TS_JAS7lyy2Ua55JqDntCOe0E5UVrXnPcVksljqQD521bq91Az7lMuNdU01iUPmWpDa0oWSzSUaujUKl1ca1keoZeEn1ezU1yhSVDJV8zrUlTVZGgV-atWit6XSktgypVPJlSm_1CqM0LIAOyNrzTGtt1yJUGqTb6vtbLzWDutaqi5dqm1OsLW64tCavUzorf2vAxyuWtIABxLIjWOoVsbN0du3Q88tLLK3tHTbWn5vl0VTCBbpZs4QcXwvEuCpQIABrbFcGkEx1AkXmNAiAJ-_BUDekZEgZtPxizVAyOaH8VkurrH4G7AQ-RqD8CjUlHAJGkrYerPwco5B-gzG7P6JD_AlpnUIrAaEWA9FscwGSSgiRcx5AKBOTUvEix_FLBRiw_AohoCI821Q2ATESebdxugmA_IQHgLJp-kntFBVk_wAAelNHA7TyM6pXPwU0kp9MgCMyVHAx6cCFos4IYTVobN2Yc05_g6x0byC0ah7wHxqCQBSOB1AkG9DQeitGmAPoshEf4DR8UtBzRWYtLMGY_B_NJ3kEAA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\",\n          legend: {\n            render: labels => {\n              return <div>\n                {labels.map((label, idx) => {\n                  return <div key={idx} style={{\n                    backgroundColor: label.value,\n                    color: '#eee',\n                    padding: '5px 10px',\n                    marginBottom: 5\n                  }}>\n                      {label.text}\n                    </div>;\n                })}\n              </div>;\n            }\n          }\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"direction\"\n    }}><inlineCode parentName=\"h2\">{`direction`}</inlineCode></h2>\n    <p>{`The direction of label. Default value is.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`horizontal`}</inlineCode>{` if `}<inlineCode parentName=\"li\">{`orient`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`top`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`bottom`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vertical`}</inlineCode>{` if `}<inlineCode parentName=\"li\">{`orient`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`left`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`right`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"horizontal\"\n    }}>{`horizontal`}</h3>\n    <Playground __position={4} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n      legend: {\\n        direction: \\'horizontal\\',\\n      },\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpT3XYDSDArminWq4sFgugh6hEuGfpcOAiusqbmslELiwk8Lzd_cx2MVykOmGaZlnHqkKnsbML8QBkuTvSsmzVOs8T_y0ChgP0BhFuE0TxLWgBtdYoKwK4kqWBr2AATiWfXaEShWpufyQkqmyQ5ZTXYMLRAIDhbixGEEbY-sn7tD1NQROfcorsDvtNR-VwACsb8sifz_j_P-AC5bAKSqAkh4CliQJgNA-CiVLAMkQTfFBVw5Y4CwS0TB2CP5yi_vg_-cskzENIaQiBUCYGJQAOrZAYdWW-VwkzoNSpwya7QeG_z4QVQRYCkoiKoWIuU1gOiDxkUw9gs12FoOODg7heC1EAIwZosh2iKGiJoXKRmEBpEAF0VT-mdFgLSBMiZTB3upHxq916WVgDZI2DkTbqX3oBXQIEDBgTxvaU-OkCAiUcqbJSV9GGoIfuY1-NtJr8HzlNLqliuEqJsQQwBDjhHON0a4uBCC9pINkRYp-bDi7sHKT9GAcsqnv2Uao-pRCtFNLnC02BdD3YdIKcwhRvTBlXAGfMYZIAlG4O_rY_hjTyEzOobAyR6BpEWC6fI8x1y-kbJgJU7Z1Sxl1PUYcpxxy9HtAMe0IxlyTFmKflNJYdyQD5y2Ts6xez6n2KmUcyhJzEruIucg1BQsFElNBRUkZVjanQr4UAuFHyEVfPgVDRZxjUElRWSCtZ_SwWDIhc83ZvDCHvJ0Yi_R9CKX_NQQAdhpaU9ZDLNk4pqeMvhAiiUcq-WclFXS5YKNuXS-5jzIV4tZXLDR0rmmcu-XgQxnSTEAA4FHAqFfS8FYqXn4rsey3VXzkUUu8b5NJUxAm6WbOEbJcTxJhKUCAAa2xXBpH3tQRJR9QIgAbhYfgqBvSMiQPSn4xZqgZHND-KyXV1j8DdgIfI1B-DCqSjgEtSVs3Vn4OUcg_QZjdn9Em_gS0zqEVgNCLAm822YDJJQRIuY8gFAnJqXiRY_ilgrbGkAUQ0BFvpaobA-8J30u7XQTAfkIDwFnTGmsVagqzv4AAPSmjgFh5btkrn4KaSU-6QBHpKjgY1OA1UXsEMOq0N670PqffwdY6N5Cr1Td4D41BIApDDagCNego3RTBTAH0WQi38BreKWg5or0WlmDMfg_6k7yCAA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\",\n          legend: {\n            direction: 'horizontal'\n          }\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"vertical\"\n    }}>{`vertical`}</h3>\n    <Playground __position={5} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n      legend: {\\n        direction: \\'vertical\\',\\n      },\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpT3XYDSDArminWq4sFgugh6hErd4VYgrrKm5rJRC4sJPC83f3MdjFcpDphmmZZx6pCp7GzC_EAZLk70rJs1TrPE_8tAoYD9AYRbhNE8S1oAbXWKCsCuJKlga9gAE4ln12hEoVqan8kJKpskOWprsGFogYBwtxYjCCNsfWj92h6moInXuUV2C32mg_K4ABWV-WQP6_2_r_f-csgFJRAcQsBSwIEwCgfBRKlgGQIOvsgq4cscCYJaBgrB785SfzwX_OWSYiEkJIeAyB0DEoAHVsj0OrDfK4SY0GpQ4ZNdo3Cf68IKgI0BSVhGUNEXKawHQB7SMYewWabDUHHGwVw3Bqj_7oI0aQrR5CRHULlIzCAUiAC6Kp_TOiwFpAmRMpjb3Ut4lea9LKwBskbByJt1J70AroECBgwJ43tCfHSBARKOVNkpS-DCUH3zMS_G2k1-D5yml1CxnDlHWPwQA-xQinE6JcbA-Be1EEyPMY_Vhxd2BlJ-jAOWlS35KJUXUwhmjGlzmaTA2h7t2n5KYfInpAyrj9PmEMkAiicFfxsXwhpZDplUJgRI9AUiLCdLkWYq5vT1kwAqVsqpozalqIOY4o5uj2j6PaIYi5xjTGPymksW5IB86bO2VY3ZdS7GTMORQ45iU3HnKQSgoW8jikgvKcMyxNSoW8MAbC958LPlwKhgsoxKCSrLOBasvpoKBngqeTsnhBC3naIRXouh5K_koIAOzUpKWs-lGzsXVLGbw_hhL2WfNOcizpct5E3NpXch5ELcUsrluoqVTSOVfLwAYjpxiAAc8igWCrpWC0Vzy8W2LZTqz5SLyVeN8qkqYATdLNnCFk2J4lQlKBAANbYrg0h72oAkw-oEQANwsPwVA3pGRIDpT8Ys1QMjmh_FZLq6x-Cd3yNQfgQqko4CLUlLN1Z-DlHIP0GY3Z_SJv4EtM6hFYDQiwBvFtmAySUESLmPIBQJyal4kWP4pYy0xpAFENABa6WqGwHvMddLO10EwH5CA8Bp3RprBWoK07-AAD0po4GYaWrZK5-CmklLukAB6So4CNTgVVZ7BCDqtFem9d6H38HWOjeQK8U3eA-NQSAKRQ2oHDXoSN0VQUwB9FkAt_Aq3iloOaC9FpZgzH4L-pO8ggA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\",\n          legend: {\n            direction: 'vertical'\n          }\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"orient\"\n    }}><inlineCode parentName=\"h2\">{`orient`}</inlineCode></h2>\n    <p>{`We could change where we put the legend by changing `}<inlineCode parentName=\"p\">{`legend.orient`}</inlineCode>{`. Default `}<inlineCode parentName=\"p\">{`orient`}</inlineCode>{` would be `}<inlineCode parentName=\"p\">{`right`}</inlineCode>{`. Allow `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`right`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`bottom`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{` orient.`}</p>\n    <h3 {...{\n      \"id\": \"left\"\n    }}>{`left`}</h3>\n    <Playground __position={6} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n      legend: {\\n        orient: \\'left\\',\\n      },\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpT3XYDSDArminWq4sIUIH0RLYDAF8sqbmslELiwk8Lzd_cx2MVykOmGaZlnHqkKnsbML8QBkuTvSsmzVOs8T_y0ChgP0BhFuE0TxLWgBtdYoKwK4kqWBr2AATiWfXaEShWpofyQkqmyQ5am9hhaIEAcLcWIwgjbH1vfdoepqCJ27lFdg19pp3yuAAVmflkN-39P7f1_nLABSUgGEJAUsMBMAIHwUSpYBkcDL6IKuHLHA6CWhoIwa_OU78cE_zlkmAhRCiGgPAZAxKAB1bItDqxXyuEmFBqU2GTXaJwr-3CCp8OAUlQR5DhFymsB0Pukj6HsFmiw5BxxMEcOwco3-qC1HEI0aQoRlC5SMwgBIgAuiqf0zosBaQJkTKYm91KeKXivSysAbJGwcibdSO9AK6BAgYMCeN7RHx0gQESjlTZKXPnQpBt8TFPxtpNfg-cppdTMewxRljcF_1sQIhxWinHQNgXteBUjTH32YcXdgJSfowDluUl-CilE1Pweo-pc5GlQOoe7VpuSGGyK6X0q4vT5gDJAPIrBH8rE8LqSQyZFCoFiPQBIiw7SZEmIud01ZMAykbIqcM6pKi9n2IOdo9ouj2j6LOYY4x98ppLGuSAfO6zNkWO2TUmx4z9lkMOYlFxpyEFIKFrIwpQLSmDPMVUiF3D_7QtebC95MCoZzIMUgkqizAXLJ6cCvpoKHlbK4Xgl5mi4U6JoaSn5SCADslKikrNpWszFlSRncN4fi1l7zjmIvaXLWRVzqU3LuWC7FTK5aqIlQ0tlHy8B6LaYYgAHLIgF_KaUguFY8nF1iWVaveQi0lHjfLJKmH43SzZwgZOieJYJSgQADW2K4NIO9qBxP3qBEADcLD8FQN6RkSAaU_GLNUDI5ofxWS6usfgbsBD5GoPwAVSUcCFqShm6s_ByjkH6DMbs_p438CWmdQisBoRYDXs2zAZJKCJFzHkAoE5NS8SLH8Uspao0gCiGgfNNLVDYB3qOmlHa6CYD8q3OAU7I01nLUFKd_AAB6U0cCMJLRslc_BTSSh3SAfdJUcAGpwMq09ggB1Wkvde2997-DrHRvIJeSbvAfGoJAFIwbUChr0OG6KwKYA-iyPm_glbxS0HNOei0swZj8B_UneQQA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\",\n          legend: {\n            orient: 'left'\n          }\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"top\"\n    }}>{`top`}</h3>\n    <Playground __position={7} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n      legend: {\\n        orient: \\'top\\',\\n      },\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpT3XYDSDArminWq4sIUIH0RKIhmSum4sJRC575OLc3f3MdjFcpDphmmZZx6pCp7GzC_EAZLk70rJs1TrPE_8tAoYD9AYRbhNE8S1oAbXWKCsCuJKlga9gAE4ln12hEoVqb78kJKpskOWpvYYXEAAOFuLEYQRtj6zvu0PU1BE5ZQsJfK4U1b5XAAKxPyyK_L-H8v4_zlv_JKgCCHAKWKAmA4D4KJUsAyWBF92BX3YHLHAaCWioPQS_OUb9sHfzlkmfBhDCEgLARAxKAB1bINDqwINSsg6RxwMEcKwZ_bhBU-FAKSoIshwi5TWA6L3SRdCrizRYdNNhk12icKUT_FBqiiHqJIUIihcpGYQAkQAXRVP6Z0WAtIEyJlMDe6kPGL2XpZWANkjYORNupbegFdAgQMGBPG9pD46QICJRypslJn1ofQm-xjH420mvwfOU0upyPYeYxRODf42IEfYzRjioEwL2nAqKBiTHGOYcXdgxSfowDlmU5-ZiLHVLwWoupc4GmQKoe7FpOSrhyxkV0vpVxenzAGSAUxmD36WJ4bU4hkzyGQLEegCR8D2lJhkZcwpqyQAlMGfIypOzqkqPGQc0hRzKF4F0a0qRRi75IJuT0u5fSNlbIUc87h1i3l2MOVo9ozizltPoULGRBTulrJgKUzZ5ThlVO4X_GFGjPlymgVDOZ-j6ElSWUsDFIL1kPIqSM7hYzbETI-fCmZSKpEAHYaVAsxWC3F2yuE_14US-pJL2gnO5e0xZxjrl0vuTioZIrdmvLZe8hx0zvntD0ec-hAAOGRgKlWgsZXiyFVj9mwo5Y0xFFL3G-SSVMXxulmzhHSVE8SQSlAgAGtsVwaRt7UFiXvUCIAG4WH4Kgb0jIkDAp-MWaoGRzQ_isl1dY_A3YCHyNQfgtyko4CLUlTN1Z-DlHIP0GY3Z_QJv4EtM6hFYDQiwKvFtmAySUESLmPIBQJyal4kWP4pYy3RpAFENABbgWqGwNvMdwLO10EwH5VucBp1RprBWoK07-AAD0po4EYaWzZK5-CmklLukAB6So4ENTgbFrTx0XotFaK9N670Pv4OsdG8hF7Ju8B8agkAUghtQGGvQEbop3JgD6LIBb-BVvFLQc0L7zSzBmPwP9Sd5BAA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\",\n          legend: {\n            orient: 'top'\n          }\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"bottom\"\n    }}>{`bottom`}</h3>\n    <Playground __position={8} __code={'<div style={{ width: \\'100%\\', height: \\'320px\\' }}>\\n  <LineChart\\n    data={multiLinesData}\\n    x={{ type: \\'quantitative\\', field: \\'x\\' }}\\n    y={{ type: \\'quantitative\\', field: \\'y\\' }}\\n    color={{\\n      field: \\'type\\',\\n      type: \\'nominal\\',\\n      legend: {\\n        orient: \\'bottom\\',\\n      },\\n    }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      lineData,\n      multiLinesData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgcitWiVwsLoj0DzgSQKl_MSCFcSQROdRTXEEoj2CIUIoBiMjnTgdTJPdaRTlk-SyRgdTJB0vSIAM-B1M09V2EDSUTPlM12jBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ0SgAWdL2AANnSzL1jAYCADFvWgRJEv4ZxDgRB1MBgoR-CWIhqEoOAcoRCrqyqmhnAgXDLnYABGAqsvkXz_KmABBOYIvYCMoM46B0DDdh5A5CKxHW6MZHYFEwpgbhgDwkKLrgeQtxrYAtqgHbggAMne8ZEnmShmhet7zG4YG5TAZDJQGVB2nYAB-DZtrDCMDquAGw3m6spBkKs3zMGFXMwMAwj09aDu4I6owxlbl2rBN3IIHBqsyFIrwIR6a1rU7ztgK6oJxdAJkSqakqSgBSTLfBgCAUkIRKkwAJiS8q9oeld2cYRzKP40QafZmt0HEq67P08ijPE9Hdd1rAee--ZEoAR1CdwYiUmJWBgcXIHndBEoy5XVd1xJrdC225Qdp2XmiNh3aWT3XsSxJofkc2LZrKgoCFHn_Yt2PvblYPo6z3X88S1BIjQeIhpT3XYDSDArminWq4sIUIH0RKvBuSJK6biwlEL3vk4tzd_cx2MVykOmGaZlnHqkKnsbML8QBkuTvSsmzVOs8T_y0ChgP0BhFuE0TxLWgBtdYoKwK4kqWBr2AATiWfXaEShWpofyQkqmyQ5am9hhaIEAcLcWIwgjbH1vfdoepqCJyyhYK-Vwpp3yuAAVmflkN-39P7f1_nLABSUgGEJAUsMBMAIHwUSpYBkcDL7sGvuwOWOB0EtDQRg1-cp344J_nLJMBCiFENAeAyBiUADq2RaHVkQalFBMjjiYM4dgr-PCCr8OAUlIR5CRFymsB0PuUj6FXFmqw6a7DJrtC4co3-qC1HEI0aQ4RlC5SMwgJIgAuiqf0zosBaQJkTKYm91KeKXivSysAbJGwcibdSO9AK6BAgYMCeN7RHx0gQESjlTZKXPnQhht8TFPxtpNfg-cppdXkRwixSjcF_1sYIhxWinHQNgXteBUVDGmJMSw4u7ASk_RgHLcpL9zGWJqfg9R9S5yNKgdQ92rTclXDlrI7p_Srh9PmIMkAZisEfysbwupJCpkUKgeI9AkiEEdKTLIq5RS1kgFKUMhRVTdk1NURMw5ZDjlULwHotp0jjH32Qbc3p9z-mbO2Yol5PCbHvPsUc7R7QXHnPaQwoWsjCk9PWTAMpWyKkjOqTw_-sLNFfLlDAqG8yDEMJKsspYmLQUbMeZU0ZPDxl2MmZ8hFszkXSIAOy0uBVi8FeKdncN_nw4lDTSXtFOTyjpSyTE3PpQ83FwzRV7Leeyj5jiZk_PaPoi5DCAAcsigXKrBUy_FULrEHLhZyppSLKUeN8skqYfjdLNnCBk6J4lglKBAANbYrg0g72oHE_eoEQANwsPwVA3pGRIBBT8Ys1QMjmh_FZLq6x-BuwEPkag_A7lJRwMWpKWbqz8HKOQfoMxuz-kTfwJaZ1CKwGhFgNerbMBkkoIkXMeQCgTk1LxIsfxSzlpjSAKIaBC0gtUNgHe46QVdroJgPyrc4AzujTWStQUZ38AAHpTRwEwstWyVz8FNJKPdIBD0lRwEanAOK2kTsvRaK017b33sffwdY6N5BLxTd4D41BIApFDagcNehI3RXuTAH0WRC38GreKWg5pX3mlmDMfg_6k7yCAA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '320px'\n      }}>\n    <LineChart data={multiLinesData} x={{\n          type: 'quantitative',\n          field: 'x'\n        }} y={{\n          type: 'quantitative',\n          field: 'y'\n        }} color={{\n          field: \"type\",\n          type: \"nominal\",\n          legend: {\n            orient: 'bottom'\n          }\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"legend-config-properties-table\"\n    }}>{`Legend config properties table`}</h2>\n    <table>\n  <thead>\n    <tr>\n      <th>\n        name\n      </th>\n      <th>\n        type\n      </th>\n      <th>\n        description\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>hide</td>\n      <td>boolean</td>\n      <td>Hide legend or not. Default is `false`</td>\n    </tr>\n    <tr>\n      <td>direction</td>\n      <td>`horizontal` | `vertical`</td>\n      <td>\n        The direction of label. Default is `horizontal`\n      </td>\n    </tr>\n    <tr>\n      <td>orient</td>\n      <td>`top` | `right` | `bottom` | `left`;</td>\n      <td>\n        Where we put the legend in the chart. Default is `right`\n      </td>\n    </tr>\n    <tr>\n      <td>render</td>\n      <td>(labels: ReadonlyArray{'<'}object{'>'}) => React.ReactNode;</td>\n      <td>\n        Custom render function. If specify transcharts will call this to render custom legend.<br />\n        `labels` are all labels data in the legend and its attribute is as same as vx-legend label. See\n        <a target=\"_blank\" rel=\"noopener\" href=\"https://vx-demo.now.sh/legends\">vx-legend example</a>\n      </td>\n    </tr>\n  </tbody>\n    </table>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","const lineData = [\n  { x: 0, y: 9, date: '2019/01/21 00:00:00', weekday: 'Mon' },\n  { x: 1, y: 5, date: '2019/01/22 00:00:00', weekday: 'Tue' },\n  { x: 2.5, y: 5, date: '2019/01/23 00:00:00', weekday: 'Wed' },\n  { x: 3, y: 3, date: '2019/01/24 00:00:00', weekday: 'Thu'},\n  { x: 4, y: 1, date: '2019/01/25 00:00:00', weekday: 'Fri' },\n];\n\nexport default lineData;\n","export const mutliLinesData = [\n  { x: 0, y: 9, type: \"type1\", date: '2019/01/21 00:00:00', weekday: 'Mon' },\n  { x: 1, y: 5, type: \"type2\", date: '2019/01/22 00:00:00', weekday: 'Tue' },\n  { x: 2, y: 5, type: \"type2\", date: '2019/01/23 00:00:00', weekday: 'Wed' },\n  { x: 3, y: 3, type: \"type1\", date: '2019/01/24 00:00:00', weekday: 'Thu'},\n  { x: 4, y: 1, type: \"type2\", date: '2019/01/25 00:00:00', weekday: 'Fri' },\n  { x: 10, y: 9, type: \"type1\", date: '2019/01/21 00:00:00', weekday: 'Mon' },\n  { x: 6, y: 5, type: \"type2\", date: '2019/01/22 00:00:00', weekday: 'Tue' },\n  { x: 7, y: 5, type: \"type2\", date: '2019/01/23 00:00:00', weekday: 'Wed' },\n  { x: 2, y: 3, type: \"type1\", date: '2019/01/24 00:00:00', weekday: 'Thu'},\n  { x: 8, y: 1, type: \"type2\", date: '2019/01/25 00:00:00', weekday: 'Fri' },\n];\n\nexport default mutliLinesData;\n","export const DEFAULT_VALS = {\n  MARGIN: {\n    top: 20,\n    right: 20,\n    bottom: 50,\n    left: 55,\n  },\n};\n","import { GraphDimension, Margin, LegendConfig } from '@ichef/transcharts-graph';\n\nconst DEFAULT_LENGTH = 300;\n\n/**\n * Returns the inner width and height of the graph\n * @param dimension - the outer width and height of the graph\n * @param margin - the lengths of top, right, bottom, and left margin\n * @param headerDimension - the width and height of the header box\n * @param legendDimension - the width and height of the legend\n * @param legendOrient - orient of legend\n */\nexport function getInnerGraphDimensionAndMargin(\n  dimension: GraphDimension,\n  margin: Margin,\n  headerDimension: GraphDimension,\n  legendDimension: GraphDimension,\n  legendOrient: LegendConfig['orient'],\n) {\n  const { width: outerWidth, height: outerHeight } = dimension;\n  const { top, right, bottom, left } = margin;\n  let graphWidth = DEFAULT_LENGTH;\n  let graphHeight = DEFAULT_LENGTH;\n  const graphMargin = { ...margin };\n\n  // deal with the legend\n  switch (legendOrient) {\n    case 'left':\n    case 'right': {\n      graphWidth = outerWidth > 0\n        ? outerWidth - left - right - legendDimension.width\n        : DEFAULT_LENGTH;\n      graphHeight = outerHeight > 0 ? outerHeight - top - bottom : DEFAULT_LENGTH;\n      if (legendOrient === 'left') {\n        graphMargin.left += legendDimension.width;\n      }\n      break;\n    }\n    case 'top':\n    case 'bottom': {\n      graphWidth = outerWidth > 0 ? outerWidth - left - right : DEFAULT_LENGTH;\n      graphHeight = outerHeight > 0\n        ? outerHeight - top - bottom - legendDimension.height\n        : DEFAULT_LENGTH;\n      if (legendOrient === 'top') {\n        graphMargin.top += legendDimension.height;\n      }\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // deal with the header box\n  graphMargin.top += headerDimension.height;\n  graphHeight -= headerDimension.height;\n\n  return {\n    graphMargin,\n    graphDimension: {\n      width: graphWidth,\n      height: graphHeight,\n    },\n  };\n}\n","import { useRef, useMemo } from 'react';\nimport {\n  // from common types\n  Margin,\n  GraphDimension,\n  ColorEncoding,\n  // from hooks\n  useContainerDimension,\n} from '@ichef/transcharts-graph';\n\nimport { getInnerGraphDimensionAndMargin } from '../utils/getInnerGraphDimensionAndMargin';\n\n/**\n * Returns a ref to be bind with a container,\n * and it calculates the inner and outer dimension of the graph\n * based on the given margin.\n */\nexport const useChartDimensions = (\n  /** Margin between the inner graph area and the outer svg */\n  margin: Margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 60,\n  },\n  color?: ColorEncoding,\n) => {\n  // compute the outer and inner dimension of the chart\n  const chartRef = useRef<HTMLDivElement>(null);\n  const legendRef = useRef<HTMLDivElement>(null);\n  const titleRef = useRef<HTMLDivElement>(null);\n  const outerDimension: GraphDimension = useContainerDimension(chartRef);\n  const legendDimension = useContainerDimension(legendRef);\n  const headerDimension = useContainerDimension(titleRef);\n  const legendOrient = (color && color.legend && color.legend.orient) || 'right';\n\n  const { graphDimension, graphMargin }  = useMemo(\n    () => {\n      return getInnerGraphDimensionAndMargin(\n        outerDimension,\n        margin,\n        headerDimension,\n        legendDimension,\n        legendOrient,\n      );\n    },\n    [\n      outerDimension,\n      margin,\n      headerDimension,\n      legendDimension,\n      legendOrient,\n    ],\n  );\n\n  return {\n    /** Ref to the chart, which is to be passed in the props of the container */\n    chartRef,\n\n    /** Ref to the header box, which is to be passed in the props of the header box */\n    titleRef,\n\n    /** Ref to the legend, which is to be passed in the props of the legend */\n    legendRef,\n\n    /** Width and height of the outer container */\n    outerDimension,\n\n    /** Width and height of the inner graph (does not contain axes, legend, etc...) */\n    graphDimension,\n\n    /** Margin between the chart container and the inner graph */\n    graphMargin,\n  };\n};\n","import {\n  // from common types\n  FieldSelector,\n} from '@ichef/transcharts-graph';\n\n/**\n * Return the y-values in the `dataGroups` grouped by projected x values.\n * -  Structure of groupedY: \"groupedY\":[ { \"index of dataGroup\": \"value\" }, ... ]\n * @example\n * [{\n *  \"xPos\": 0,\n *  \"xStrVal\": \"0\",\n *  \"groupedY\": [{\"groupIdx\": 0, \"yStrVal\": 9, \"yPos\": 18, \"color\": \"#deebf7\"}],\n *  },\n * {\n *  \"xPos\": 109.12812500000001,\n *  \"xStrVal\": \"2\",\n *  \"groupedY\": [{\"groupIdx\": 0, \"yStrVal\": 3, \"yPos\": 6, \"color\": \"#deebf7\"}, ...],\n * }]\n */\nexport function getAxisProjectedValues(\n  /** Data grouped in `useCartesianEncodings()`  */\n  dataGroups: object[][],\n\n  /** Functions to get value on the x-axis */\n  xSelector: FieldSelector,\n\n  /** Functions to get value on the y-axis */\n  ySelector: FieldSelector,\n\n  /** Functions to get the formatted color string */\n  getColorString: (record: any) => string,\n) {\n  // project by original values on the axis\n  const projections = {};\n  const xPositions = {};\n  dataGroups.forEach((group, groupIdx) => {\n    group.forEach((row) => {\n      const xStrVal = xSelector.getFormattedStringVal(row);\n      const yStrVal = ySelector.getFormattedStringVal(row);\n      const xPos = xSelector.getScaledVal(row);\n      const yPos = ySelector.getScaledVal(row);\n      if (!projections[xStrVal]) {\n        projections[xStrVal] = [];\n        xPositions[xStrVal] = xPos;\n      }\n      projections[xStrVal].push({\n        groupIdx,\n        yStrVal,\n        yPos,\n        color: getColorString(row),\n      });\n    });\n  });\n\n  // convert the position along the axis, and sort by the converted values\n  const columns = Object.keys(projections).reduce(\n    (accum, xStrVal: any) => {\n      const groupedY = projections[xStrVal];\n      // ensure that we always get the correct type, not a string instead\n      const xPos: number = xPositions[xStrVal] || 0;\n      const column = {\n        xPos,\n        xStrVal,\n        groupedY,\n      };\n\n      return [...accum, column];\n    },\n    []\n  );\n\n  return columns.sort((a, b) => (a.xPos - b.xPos));\n}\n","import { useMemo } from 'react';\nimport values from 'lodash/values';\nimport {\n  // from utils\n  getColorScale,\n  getDataGroupByEncodings,\n  getXAxisScale,\n  getYAxisScale,\n  getRecordFieldSelector,\n  getValByScaleType,\n  // from common types\n  Encoding,\n  AxisEncoding,\n  ColorEncoding,\n  GraphDimension,\n  // from themes\n  Theme,\n  // from TooltipLayer\n  AxisProjectedValue,\n} from '@ichef/transcharts-graph';\n\nimport { getAxisProjectedValues } from '../utils/getAxisProjectedValues';\n\n/**\n * Return [min, max] of a column selected from the grouped data\n */\nfunction getLinearDomainFromDataGroup(\n  dataGroups: object[][],\n  keyField: string,\n  valueField: string,\n) {\n  const aggreatedMax: object = {};\n  const aggreatedMin: object = {};\n  dataGroups.forEach((data: object[]) => {\n    data.forEach((row) => {\n      const key = row[keyField];\n      const val = row[valueField];\n      if (val >= 0) {\n        aggreatedMax[key] = aggreatedMax[key]\n          ? aggreatedMax[key] + val\n          : val;\n      } else {\n        aggreatedMin[key] = aggreatedMin[key]\n          ? aggreatedMin[key] + val\n          : val;\n      }\n    });\n  });\n\n  const min = Math.min(0, ...values(aggreatedMin));\n  const max = Math.max(0, ...values(aggreatedMax));\n\n  return [min, max];\n}\n\n/**\n * It returns calculated groups of data and its value selectors\n * from the given encodings of Cartesian plots.\n */\nexport const useCartesianEncodings = (\n  /** Width and height of the inner graph (does not contain axes, legend, etc...) */\n  graphDimension: GraphDimension,\n\n  /** Theme of the chart */\n  theme: Theme,\n\n  /** Array of rows of data */\n  data: object[],\n\n  /** Field and data type of x-axis */\n  x: AxisEncoding,\n\n  /** Field and data type of y-axis */\n  y: AxisEncoding,\n\n  /** Fields and definitions for colors */\n  color?: ColorEncoding,\n) => {\n  // get the inner width and height of the graph\n  const { width, height } = graphDimension;\n\n  // sort the data\n  const sortedData = useMemo(\n    () => {\n      const getValue = getValByScaleType(x.scale);\n      const getOriginalVal = (record: object) => getValue(record[x.field]);\n\n      return (\n        data.sort(\n          (rowA, rowB) => getOriginalVal(rowA) - getOriginalVal(rowB),\n        )\n      );\n    },\n    [data, x],\n  );\n\n  // groups the data by colors\n  const dataGroups = useMemo(\n    () => {\n      const encodings = [color].filter((encoding): encoding is Encoding => !!encoding);\n      return getDataGroupByEncodings(sortedData, encodings);\n    },\n    [color, sortedData],\n  );\n\n  // the scales and configs of the axis based on its encodings\n  const xAxis = useMemo(\n    () => {\n      const axisScale = getXAxisScale({\n        data,\n        axisLength: width,\n        encoding: x,\n      });\n\n      // update the domain if the domains of x-y scales is band-linear\n      if (x.scale === 'linear' && y.scale === 'band') {\n        axisScale.scale.domain(getLinearDomainFromDataGroup(dataGroups, y.field, x.field));\n      }\n      return axisScale;\n    },\n    [data, width, x],\n  );\n  const yAxis = useMemo(\n    () => {\n      const axisScale = getYAxisScale({\n        data,\n        axisLength: height,\n        encoding: y,\n      });\n\n      // update the domain if the domains of x-y scales is linear-band\n      if (x.scale === 'band' && y.scale === 'linear') {\n        axisScale.scale.domain(getLinearDomainFromDataGroup(dataGroups, x.field, y.field));\n      }\n      return axisScale;\n    },\n    [data, height, y],\n  );\n\n  // selectors to get the original/scaled/formatted values\n  const xSelector = useMemo(\n    () => getRecordFieldSelector(xAxis),\n    [xAxis],\n  );\n  const ySelector = useMemo(\n    () => getRecordFieldSelector(yAxis),\n    [yAxis],\n  );\n\n  // handle the colors\n  const colorScale = useMemo(\n    () => {\n      if (typeof color === 'undefined') {\n        return null;\n      }\n      return getColorScale({\n        data,\n        encoding: color,\n        colors: theme.colors,\n      });\n    },\n    [color, data, theme.colors],\n  );\n  const defaultColor = theme.colors.category[0];\n  const getColorString = useMemo(\n    () => (\n      colorScale\n      ? getRecordFieldSelector(colorScale).getScaledVal\n      : () => defaultColor\n    ),\n    [colorScale, defaultColor],\n  );\n\n  const axisProjectedValues: AxisProjectedValue[] = useMemo(\n    () => {\n      return getAxisProjectedValues(dataGroups, xSelector, ySelector, getColorString);\n    },\n    [dataGroups, xSelector, ySelector, getColorString],\n  );\n\n  return {\n    /** Array of data grouped by fields of colors  */\n    dataGroups,\n\n    /**\n     * The y-values in the `dataGroups` grouped by projected x values.\n     * -  Structure of groupedY: \"groupedY\":[ { \"index of dataGroup\": \"value\" }, ... ]\n     * @example\n     * [{\n     *  \"xPos\": 0,\n     *  \"xStrVal\": \"0\",\n     *  \"groupedY\": [{\"groupIdx\": 0, \"yStrVal\": 9, \"yPos\": 18, \"color\": \"#deebf7\"}],\n     *  },\n     * {\n     *  \"xPos\": 109.12812500000001,\n     *  \"xStrVal\": \"2\",\n     *  \"groupedY\": [{\"groupIdx\": 0, \"yStrVal\": 3, \"yPos\": 6, \"color\": \"#deebf7\"}, ...],\n     * }]\n     */\n    axisProjectedValues,\n\n    /** d3 scale functions and other related configurations computed for various encodings */\n    scalesConfig: {\n      /** scale function and configs for x-axis */\n      x: xAxis,\n\n      /** scale function and configs for y-axis */\n      y: yAxis,\n\n      /** scale function and configs for the color scale; null if there is no color encoding */\n      color: colorScale,\n    },\n\n    /** Contains functions to select values from a data row */\n    rowValSelectors: {\n      /** Functions to get value on the x-axis */\n      x: xSelector,\n\n      /** Functions to get value on the y-axis */\n      y: ySelector,\n\n      /** Functions to get colors */\n      color: {\n        /** Function to get the color string */\n        getString: getColorString,\n      },\n    },\n  };\n};\n","import React, { useContext } from 'react';\nimport {\n  // from AxisLayer\n  AxisLayer,\n  // from Overlays\n  HeaderBox,\n  HeaderBoxProps,\n  // from common types\n  AxisScale,\n  Margin,\n  GraphDimension,\n  AxisEncoding,\n  // theme\n  ThemeContext,\n  GlobalTheme,\n  // styled-components\n  styled,\n} from '@ichef/transcharts-graph';\n\nexport interface FrameContentProps {\n  /** Width and height of the outer container including the margin */\n  outerDimension: GraphDimension;\n\n  /** Width and height of the graph to be drawed inside the SVG group */\n  graphDimension: GraphDimension;\n\n  /** Axis encoding of x-axis */\n  x: AxisEncoding;\n\n  /** Axis encoding of y-axis */\n  y: AxisEncoding;\n\n  /** Margin between the inner graph area and the outer svg */\n  margin: Margin;\n\n  /** It determines how the axes are drawn */\n  data: object[];\n\n  /** Should show the axis on the left or not */\n  showLeftAxis: boolean;\n\n  /** Should show the axis on the bottom or not */\n  showBottomAxis: boolean;\n\n  /** Whether to display the axes in the background or foreground of the chart */\n  axisInBackground: boolean;\n\n  scalesConfig: {\n    x: AxisScale,\n    y: AxisScale,\n  };\n\n  /** Elements to be overlayed on top of the SVG */\n  svgOverlay?: React.ReactNode;\n\n  /** Elements to be drawed inside of the SVG */\n  children: React.ReactNode;\n}\nexport interface SvgFrameProps extends FrameContentProps {\n  /** Ref to <HeaderBox> */\n  titleRef: React.RefObject<HTMLDivElement>;\n\n  /** Title of <HeaderBox> */\n  title?: HeaderBoxProps['title'];\n\n  /** Description of <HeaderBox> */\n  titleDesc?: HeaderBoxProps['desc'];\n\n  /** Text align of the header box */\n  titleAlign?: HeaderBoxProps['align'];\n}\n\nconst defaultProps = {\n  showLeftAxis: true,\n  showBottomAxis: true,\n  axisInBackground: true,\n};\n\nconst Wrapper = styled.div<GlobalTheme>`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  color: ${({ fontColor }) => fontColor};\n`;\n\nconst FrameContent = ({\n  outerDimension,\n  graphDimension,\n  x,\n  y,\n  margin,\n  data,\n  scalesConfig,\n  showLeftAxis,\n  showBottomAxis,\n  axisInBackground,\n  svgOverlay,\n  children,\n}: FrameContentProps) => {\n  const { width: outerWidth, height: outerHeight } = outerDimension;\n  const { width: graphWidth, height: graphHeight } = graphDimension;\n  const axisLayer = (\n    <AxisLayer\n      width={graphWidth}\n      height={graphHeight}\n      showLeftAxis={showLeftAxis}\n      showBottomAxis={showBottomAxis}\n      data={data}\n      x={x}\n      y={y}\n      xAxisScale={scalesConfig.x.scale}\n      yAxisScale={scalesConfig.y.scale}\n    />\n  );\n\n  return (\n    <>\n      <svg width={outerWidth} height={outerHeight}>\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          {axisInBackground ? (<>{axisLayer}{children}</>) : (<>{children}{axisLayer}</>)}\n        </g>\n      </svg>\n      {svgOverlay}\n    </>\n  );\n};\nFrameContent.defaultProps = defaultProps;\n\n/**\n * It manages the size of the chart container, SVG, and the axes\n * that generally used across different charts.\n */\nexport const SvgWithAxisFrame = React.forwardRef<\n  HTMLDivElement,\n  JSX.LibraryManagedAttributes<typeof FrameContent, SvgFrameProps>\n>(({\n  titleRef,\n  title,\n  titleDesc,\n  titleAlign,\n  ...restProps\n}, ref) => {\n  const theme = useContext(ThemeContext);\n  const { globalStyle } = theme;\n\n  return (\n    <Wrapper\n      ref={ref}\n      {...globalStyle}\n    >\n      <FrameContent {...restProps} />\n      <HeaderBox\n        ref={titleRef}\n        title={title}\n        desc={titleDesc}\n        align={titleAlign}\n      />\n    </Wrapper>\n  );\n});\n","import React, { useContext, useMemo } from 'react';\nimport { LinePath } from '@vx/shape';\nimport {\n  // from HoverLayer\n  HoverLayer,\n  // from hooks\n  useHoverState,\n  // from TooltipLayer\n  TooltipLayer,\n  AxisProjectedValue,\n  // from Legend,\n  LegendGroup,\n  // from common types\n  FieldSelector,\n  // from themes\n  Theme,\n  ThemeContext,\n} from '@ichef/transcharts-graph';\n\nimport { useChartDimensions } from '../hooks/useChartDimensions';\nimport { useCartesianEncodings } from '../hooks/useCartesianEncodings';\nimport { SvgWithAxisFrame } from '../frames/SvgWithAxisFrame';\nimport { DEFAULT_VALS } from '../common/config';\nimport { CommonChartProps } from '../common/types';\n\n/**\n * Return the position of the hovering detection rect.\n * If the given index exceeds its bound, it will return its closest value.\n */\nfunction getXPosByIndex(arr: AxisProjectedValue[], idx: number) {\n  let arrIdx = idx < 0 ? 0 : idx;\n  if (idx >= arr.length) {\n    arrIdx = arr.length - 1;\n  }\n  return arr[arrIdx].xPos;\n}\n\nexport type LineChartProps = CommonChartProps;\n\n/** A line and a dot for the point being hovered */\nconst HoveringIndicator = ({ hovering, projectedPoints, height }: {\n  hovering: boolean,\n  projectedPoints: AxisProjectedValue,\n  height: number,\n}) => {\n  if (!hovering) {\n    return null;\n  }\n\n  const circles = projectedPoints.groupedY.map(pointY => (\n    <circle\n      key={`c-${pointY.yStrVal}`}\n      cx={projectedPoints.xPos}\n      cy={pointY.yPos}\n      r={4.5}\n      fill={pointY.color}\n    />\n  ));\n\n  return(\n    <>\n      <line\n        x1={projectedPoints.xPos}\n        y1={0}\n        x2={projectedPoints.xPos}\n        y2={height}\n        style={{ stroke:'rgba(124, 137, 147, 0.25)', strokeWidth: 2 }}\n      />\n      {circles}\n    </>\n  );\n};\n\nconst DataLine = ({ color, xSelector, ySelector, rows }: {\n  color: string,\n  xSelector: FieldSelector,\n  ySelector: FieldSelector,\n  rows: object[],\n}) => {\n  const lineDots = rows.map((dataRow, index) => (\n    <circle\n      key={`c-${index}`}\n      cx={xSelector.getScaledVal(dataRow)}\n      cy={ySelector.getScaledVal(dataRow)}\n      r={3.5}\n      fill={color}\n    />\n  ));\n  return (\n    <>\n      {/* Draw the line */}\n      <LinePath\n        data={rows}\n        x={xSelector.getScaledVal}\n        y={ySelector.getScaledVal}\n        stroke={color}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n\n      {/* Draw dots on the line */}\n      {lineDots}\n    </>\n  );\n};\n\nconst defaultProps = {\n  margin: DEFAULT_VALS.MARGIN,\n};\n\nexport const LineChart = ({\n  data,\n  margin,\n  x,\n  y,\n  color,\n  title,\n  titleDesc,\n  titleAlign,\n  showLeftAxis,\n  showBottomAxis,\n}: LineChartProps) => {\n  const theme = useContext<Theme>(ThemeContext);\n  const {\n    chartRef,\n    titleRef,\n    legendRef,\n    outerDimension,\n    graphDimension,\n    graphMargin,\n  } = useChartDimensions(margin, color);\n  const { width: graphWidth, height: graphHeight } = graphDimension;\n  const { clearHovering, hovering, hoveredPoint, setHoveredPosAndIndex } = useHoverState();\n  const {\n    dataGroups,\n    scalesConfig,\n    rowValSelectors,\n    axisProjectedValues,\n  } = useCartesianEncodings(graphDimension, theme, data, x, y, color);\n\n  const graphGroup = useMemo(\n    () => (\n      dataGroups.map(\n        (rows: object[], index: number) => {\n          const colorString: string = rowValSelectors.color.getString(rows[0]);\n          return (\n            <DataLine\n              key={`row-${index}`}\n              color={colorString}\n              rows={rows}\n              xSelector={rowValSelectors.x}\n              ySelector={rowValSelectors.y}\n            />\n          );\n        }\n      )\n    ),\n    [dataGroups, rowValSelectors]\n  );\n\n  const hoverDetectionComponents = useMemo(\n    () => (\n      axisProjectedValues.map(\n        (row, idx) => {\n          const rectX = (row.xPos + getXPosByIndex(axisProjectedValues, idx - 1)) / 2;\n\n          const rectWidth = (\n            (row.xPos + getXPosByIndex(axisProjectedValues, idx + 1)) / 2\n          ) - rectX;\n\n          return (\n            <rect\n              // #TODO: use unique keys rather than array index\n              key={`colli-${idx}`}\n              x={rectX}\n              y={0}\n              width={rectWidth}\n              height={graphHeight}\n              opacity={0}\n            />\n          );\n        }\n      )\n    ),\n    [axisProjectedValues, graphHeight]\n  );\n\n  return (\n    <SvgWithAxisFrame\n      ref={chartRef}\n      titleRef={titleRef}\n      title={title}\n      titleDesc={titleDesc}\n      titleAlign={titleAlign}\n      outerDimension={outerDimension}\n      graphDimension={graphDimension}\n      showLeftAxis={showLeftAxis}\n      showBottomAxis={showBottomAxis}\n      x={x}\n      y={y}\n      margin={graphMargin}\n      data={data}\n      scalesConfig={scalesConfig}\n      svgOverlay={\n        <>\n          {/* Draw the tooltip */}\n          <TooltipLayer\n            hovering={hovering}\n            hoveredPoint={hoveredPoint}\n            axisProjectedValues={axisProjectedValues}\n            graphWidth={graphWidth}\n            graphHeight={graphHeight}\n            margin={graphMargin}\n          />\n          {/* Draw the legned */}\n          <LegendGroup\n            color={color && {\n              ...color,\n              ...scalesConfig.color!,\n            }}\n            ref={legendRef}\n          />\n        </>\n      }\n    >\n      {graphGroup}\n      <HoveringIndicator\n        hovering={hovering}\n        projectedPoints={axisProjectedValues[hoveredPoint.index]}\n        height={graphHeight}\n      />\n\n      {/* Areas which are used to detect mouse or touch interactions */}\n      <HoverLayer\n        setHoveredPosAndIndex={setHoveredPosAndIndex}\n        clearHovering={clearHovering}\n        hoverDetectionComponents={hoverDetectionComponents}\n      />\n    </SvgWithAxisFrame>\n  );\n};\nLineChart.defaultProps = defaultProps;\n","import React, { useContext, useMemo, useCallback } from 'react';\nimport { ScaleBand, ScaleLinear } from 'd3-scale';\nimport {\n  // from HoverLayer\n  HoverLayer,\n  // from hooks\n  useHoverState,\n  // from TooltipLayer\n  TooltipLayer,\n  // from Legend,\n  LegendGroup,\n  // from common types\n  AxisEncoding,\n  // from themes\n  Theme,\n  ThemeContext,\n} from '@ichef/transcharts-graph';\n\nimport { useChartDimensions } from '../hooks/useChartDimensions';\nimport { useCartesianEncodings } from '../hooks/useCartesianEncodings';\nimport { SvgWithAxisFrame } from '../frames/SvgWithAxisFrame';\nimport { DEFAULT_VALS } from '../common/config';\nimport { CommonChartProps } from '../common/types';\n\n/** A line and a dot for the point being hovered */\nconst HoveringIndicator = ({ hovering, x, y, width, height }: {\n  hovering: boolean,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n}) => {\n  if (!hovering) {\n    return null;\n  }\n\n  return(\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      opacity={0.5}\n      fill=\"rgba(124, 137, 147, 0.25)\"\n    />\n  );\n};\n\nexport interface BarChartProps extends CommonChartProps {\n  /** Ratio of the paddings between bars */\n  paddingInner: number;\n}\n\nconst defaultProps = {\n  margin: DEFAULT_VALS.MARGIN,\n  paddingInner: 0.1,\n};\n\nexport const BarChart = ({\n  data,\n  // FIXME: remove the default margin after fixing the defaultProps of`<SvgWithAxisFrame>`\n  margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 60,\n  },\n  x,\n  y,\n  color,\n  title,\n  titleDesc,\n  titleAlign,\n  showLeftAxis,\n  showBottomAxis,\n  paddingInner = 0.1,\n}: BarChartProps) => {\n  const theme = useContext<Theme>(ThemeContext);\n  const {\n    chartRef,\n    titleRef,\n    legendRef,\n    outerDimension,\n    graphDimension,\n  } = useChartDimensions(margin);\n  const { width: graphWidth, height: graphHeight } = graphDimension;\n\n  const xEncoding: AxisEncoding = { ...x, scale: 'band', scaleConfig: {\n    paddingInner,\n  }};\n  const yEncoding: AxisEncoding = { ...y, scale: 'linear' };\n  const {\n    dataGroups,\n    scalesConfig,\n    rowValSelectors,\n    axisProjectedValues,\n  } = useCartesianEncodings(graphDimension, theme, data, xEncoding, yEncoding, color);\n  const { clearHovering, hovering, hoveredPoint, setHoveredPosAndIndex } = useHoverState();\n\n  const bandScale = scalesConfig.x.scale as ScaleBand<any>;\n  const linearScale = scalesConfig.y.scale as ScaleLinear<any, any>;\n  const bandWidth = bandScale.bandwidth();\n\n  /**\n   * Returns the size and position of the hovering detection rectangle\n   * or hovering highlight rectangle\n   */\n  const getHoveringRectPos = useCallback(\n    (idx: number) => {\n      const paddingVal = bandWidth * paddingInner;\n      const xPos = idx === 0\n        ? 0\n        : axisProjectedValues[idx].xPos - paddingVal / 2;\n      const width = idx === 0 || idx === data.length - 1\n            ? bandWidth + paddingVal / 2\n            : bandWidth + paddingVal;\n\n      return {\n        width,\n        height: graphHeight,\n        x: xPos,\n        y: 0,\n      };\n    },\n    [bandWidth, paddingInner],\n  );\n\n  const hoverDetectionComponents = useMemo(\n    () => (\n      axisProjectedValues.map(\n        (row, idx) => {\n          return (\n            <rect\n              // #TODO: use unique keys rather than array index\n              key={`colli-${idx}`}\n              x={row.xPos}\n              y={0}\n              height={graphHeight}\n              width={bandWidth}\n              opacity={0}\n              {...{ ...getHoveringRectPos(idx) }}\n            />\n          );\n        }\n      )\n    ),\n    [axisProjectedValues, graphHeight, bandWidth, getHoveringRectPos]\n  );\n\n  const graphGroup = useMemo(\n    () => {\n      const baseY = linearScale(0);\n\n      // calculate the accumulated y position of certain points\n      const positiveY = {};\n      const nonPositiveY = {};\n      const getAccumY = (xPos: number, scaledY: number) => {\n        if (scaledY >= 0) {\n          if (!positiveY[xPos]) {\n            positiveY[xPos] = baseY;\n          }\n          positiveY[xPos] -= scaledY;\n          return positiveY[xPos];\n        }\n\n        // scaledY < 0\n        const yPos = !nonPositiveY[xPos] ? baseY : nonPositiveY[xPos];\n        nonPositiveY[xPos] = yPos - scaledY;\n        return yPos;\n      };\n\n      return dataGroups.map(\n        (rows: object[], groupIdx: number) => {\n          return rows.map((row: object, rowIdx: number) => {\n            const colorString: string = rowValSelectors.color.getString(rows[0]);\n            const xPos = rowValSelectors.x.getScaledVal(row);\n            const scaledY = rowValSelectors.y.getScaledVal(row);\n            const height = scaledY >= 0\n              ? baseY - scaledY\n              : baseY - graphHeight - scaledY;\n\n            return (\n              <rect\n                key={`bar-${rowIdx}`}\n                x={xPos}\n                y={getAccumY(xPos, height)}\n                width={bandWidth}\n                height={Math.abs(height)}\n                fill={colorString}\n              />\n            );\n          });\n        }\n      );\n    },\n    [dataGroups, scalesConfig, rowValSelectors],\n  );\n\n  return (\n    <SvgWithAxisFrame\n      ref={chartRef}\n      titleRef={titleRef}\n      title={title}\n      titleDesc={titleDesc}\n      titleAlign={titleAlign}\n      outerDimension={outerDimension}\n      graphDimension={graphDimension}\n      showLeftAxis={showLeftAxis}\n      showBottomAxis={showBottomAxis}\n      x={x}\n      y={y}\n      // put the axes on top of the bars\n      axisInBackground={false}\n      margin={margin}\n      data={data}\n      scalesConfig={scalesConfig}\n      svgOverlay={\n        <>\n          {/* Draw the tooltip */}\n          <TooltipLayer\n            hovering={hovering}\n            hoveredPoint={hoveredPoint}\n            axisProjectedValues={axisProjectedValues}\n            graphWidth={graphWidth}\n            graphHeight={graphHeight}\n            margin={margin}\n            xOffset={bandWidth / 2}\n          />\n          {/* Draw the legned */}\n          <LegendGroup\n            color={color && {\n              ...color,\n              ...scalesConfig.color!,\n            }}\n            ref={legendRef}\n          />\n        </>\n      }\n    >\n      {graphGroup}\n      <HoveringIndicator\n        hovering={hovering}\n        {...{ ...getHoveringRectPos(hoveredPoint.index) }}\n      />\n\n      {/* Areas which are used to detect mouse or touch interactions */}\n      <HoverLayer\n        setHoveredPosAndIndex={setHoveredPosAndIndex}\n        clearHovering={clearHovering}\n        hoverDetectionComponents={hoverDetectionComponents}\n      />\n    </SvgWithAxisFrame>\n  );\n};\nBarChart.defaultProps = defaultProps;\n","export * from './common/config';\nexport * from './hooks/useChartDimensions';\nexport * from './hooks/useCartesianEncodings';\nexport * from './line/LineChart';\nexport * from './bar/BarChart';\nexport * from './frames/SvgWithAxisFrame';\nexport * from './utils/getInnerGraphDimensionAndMargin';\n"],"sourceRoot":""}