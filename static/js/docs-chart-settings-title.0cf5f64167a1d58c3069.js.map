{"version":3,"sources":["/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/docs/chart-settings/Title.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Props","LineChart","taiwanData","__codesandbox","style","width","height","_ichef_transcharts_chart__WEBPACK_IMPORTED_MODULE_4__","title","titleDesc","target","titleAlign","data","x","field","type","y","isMDXComponent"],"mappings":"+eAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,4HACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,SAApB,mDACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,aAApB,iEACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,cAApB,+BAA2GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,QAA3G,IAAiKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAAjK,IAAyNN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,SAAzN,KAAiRN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,QAAjR,4BAEFN,OAAAE,EAAA,EAAAF,CAAA,sBAAiBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,4BAAjB,+BAAqHN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACvIC,KAAQ,iCADyG,aAArH,OAE8BP,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,4BAF9B,yCAGAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,8eAAggBC,QAAS,CAC1iBZ,MAAOa,KAAOA,KAAKb,MAAQA,EAC3Bc,eACAC,UACAC,cACAC,gBACCC,cAAa,ssNAAysNb,QAAQ,cACnuNJ,OAAAE,EAAA,EAAAF,CAAA,OAAKkB,MAAO,CACNC,MAAO,OACPC,OAAQ,UAEZpB,OAAAE,EAAA,EAAAF,CAACqB,EAAA,EAAD,CAAWC,MAAM,0BAA0BC,UAAWvB,OAAAE,EAAA,EAAAF,CAAA,uBAAcA,OAAAE,EAAA,EAAAF,CAAA,KAAGO,KAAK,6BAA6BiB,OAAO,UAA5C,aAAd,0CAA+HC,WAAW,QAAQC,KAAMV,IAAYW,EAAG,CACvNC,MAAO,OACPC,KAAM,WACLC,EAAG,CACJF,MAAO,YACPC,KAAM,gBACLzB,QAAQ,oMAMnBR,EAAWmC,gBAAiB","file":"static/js/docs-chart-settings-title.36493e4f.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { LineChart } from '@ichef/transcharts-chart'\nimport { taiwanData } from '../sampleData/gapMinderData';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"title\"\n    }}>{`Title`}</h1>\n    <p>{`If you want to add a title and description on the header of the chart, you can simply pass the following props:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`title`}</inlineCode>{`: Title of the chart. (Can be either text/node)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`titleDesc`}</inlineCode>{`: Description underneath the title. (Can be either text/node)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`titleAlign`}</inlineCode>{`: Text align of the title. (`}<inlineCode parentName=\"li\">{`left`}</inlineCode>{`|`}<inlineCode parentName=\"li\">{`center`}</inlineCode>{`|`}<inlineCode parentName=\"li\">{`right`}</inlineCode>{`; `}<inlineCode parentName=\"li\">{`left`}</inlineCode>{` if it is not provided)`}</li>\n    </ul>\n    <p>{`Charts in `}<inlineCode parentName=\"p\">{`@ichef/transcharts-chart`}</inlineCode>{` simply pass these props to `}<a parentName=\"p\" {...{\n        \"href\": \"/graph_components/header_box\"\n      }}>{`HeaderBox`}</a>{` of `}<inlineCode parentName=\"p\">{`@ichef/transcharts-graph`}</inlineCode>{` to render the title and description.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<div style={{ width: \\'100%\\', height: \\'380px\\' }}>\\n  <LineChart\\n    title=\\\"Taiwan\\'s GDP Per Capita\\\"\\n    titleDesc={\\n      <span>\\n        Source:{\\' \\'}\\n        <a href=\\\"https://www.gapminder.org/\\\" target=\\\"_blank\\\">\\n          GapMinder\\n        </a>{\\' \\'}\\n        | Unit: constant 2011 international $\\n      </span>\\n    }\\n    titleAlign=\\\"right\\\"\\n    data={taiwanData}\\n    x={{ field: \\'year\\', type: \\'ordinal\\' }}\\n    y={{ field: \\'gdpPercap\\', type: \\'quantitative\\' }}\\n  />\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LineChart,\n      taiwanData\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2CgghXAgEZ3C1aJXHYGi3XaD0DzgSQKl_KTRKeWY9VUDJ1NcQSiPYQNJSwujTUVMFUF0FFjlOXDnAIRIsXYbhhPWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZx8gAWIL2AANiCkL1jAYCADFvWgRIfP4ZxDgRB1MBgoR-CWIhqEoOBwoRZLq1SmhnAgXDLnYABGaLQvkSzrKmABBOYXPYCMoM46B0DDWSORcsQhujGR2BRJyYG4YA8Icpa4HkLca2AUaoHG4IADJDvGRJ5koZo9oO8xuFuuUwGQyUBlQdp2AAfg2MawwjKariusMuurKQZCrN8zBhdVjhgMAwigKYfum2agf65dqwTYyCBwNLMhSK8CG2mta3mxbYBWqCcXQCYfNa3zfIAUhC3wYAgFJCB8pMAA5fKS2StpXQnGDI51KP40Q0cJmsYgIUn-EsMSJJeuwAHEtWgmCMgcWYXlcfh-YlqXYC1eByBWvWJdrKr3AJ82JbyvoEWQV72kBm2bcYGS8C6MA-BAQhbnuR4RiDk9ZiIHSBBwIUUl5EBxn408fYAfQ8ODUG2cQzdd9gla08PM_NqRXDEYAnZdrPCYAH3YABVVAXj-6gUXcKYACZfNa1rOD0ARUGiZ7ewAEnzmspEt1BrfNsvXYNmBeqgFnUB9_pWdEEBh_QaSVtE8TJOkqebawMnDQged0B8xJxQERnHPmHyhUi-JXvkffzcSI_IFPnyUnQGZoIyOIZjXzOi1doABHUIzdtYxFYDAJ-L8aybj1sDWMK4pAYyxjjPG20pAo1BmYL8IAlIqW9GSGAelNIzG0uGAQel_xaAoMBfQhgTBFCMOwLUoxUBQEoB2XMeQChXBSKHcOfYJTbFcGkLuRkhp-zuA8b4mRUChnNP2Sg6gtiYyjpIEYMAPCSGquItIykhEzDDtQyQIozy9S1HqM8-BiBQDfOwNhzhhihH2qI5I0RUQQA8OEZ6Q5rj-3kUHEYIdTHh0jp5SQeZNjmH4TOTgBBQrOIWmgAqLx2h2HngiVAcA-HUIcKaaB3Q0zlTyewXqNx-h-O7OYJMOB_I5LoPknArDeT-lQI8dh0k9jNDljvcw-QrLdFagATnir5cGWBDI9TjoMvSg0ADa6xgArioMhVE2U5QDIVrVQmugYgZgID5Xq-R9IpJrBffiVxxnxRbpciw88wAwDPDMq48UACsOAHkrkFDMW54zWoczGZzR5qQf5_wEAA25HMW4txwBzAA7GMy5ShVnrLaDQAQ2z2i7PcPsmshzyI0FOecwlFhrlljahMpF4LnmvPeQlJFOBPngv-bcpM8Vooc3imM354tv6_3_rMK4LduUNI5p85FaLLlrPFhs7FuL8UvXBcS45ZKIAXJXFS25YykUCsJgyt5AKEpjJwEmVFfzKCmtap8-FkzLXgqFVCmF7Boq-XuayluTr1jourPKg5WKtk-RVRSwsNASUnLlGcrV4bdU0qRXSlcxqmVIt8qyq14sOVtXikiqVdznWQpFaaz5nyJmsvGRzWVGKFXBpxaG-WBK1XASjZq7V4sE1VsNTWVNpqDU4FavFdlNrYWfPbpa3yRbhXQtFewJF0VxUWs-TymtAbMWbIbTsptqrMWRo1TG8l4Ku1jJlSmiALyTVXCRQ0jq1rbX6s-UmsZWbCYupLYC3yK7WXxWBWuiwgaiX1uVTu8N6r9DtvjZfPV_L6UXsZf26KPzh33rFZ63lYy_0rnfbO219q7U4C-Si_9bk62bpA4MsDraD3tFjR2wmJ79VwcvWm75Lc2WofYC3IdLdeVfuna6udbc27xURdxkjgGLCKpDduyjLb90QcPXG490GuO0x7U8-DV752iZfSO018Loorp9a-msOG3U-p9d8xdSYkwSY3Uqxtcm91HMU7Ro9OrVNt18sm8Wfbr0cxwHe7No6uNJlaguluYzgtvuLbhsVyLgU_KRfFatfrQoAF0VSdO6Ysi6Vgd1LGxu4BESwABSsx3BLFri8XMDkshwCWJUdgjUZyzCFN0YZBU7lTOdDMyGczIAwMcJuk-dhXIrPXWRxzcpisjKowp0lcozx9BtbAlTNyaX3OYwh69GbPmtX01caKSLWotw9bTATH62pfsmUFqVHHqz-oAw5mT7Q5s1Xk65pb7QVsDnW55zbdzfNGq02m1qrLHuExzdFMZny-W0yndhuLbqzsvvNZhpN9nptvY-wDuti3o2_dW_MKDQP9UafYP5-dCKwWcYOze7zSPBUo7nUOmmLKgUg9knK17W73uKM-y5tty2Sf44Y6p8ZWPz0sf7ZKuz9PwtfPbqZiw5m2dwv5YRpMB3sdBvIz5PHC3vtE7-2tsn1Lu07e0wuxFqu-yhZXdFWz8OodmdZwZ3yUXJWPr10Bg3s3Bfi6A4TnyZvScbct6e7nmnZfXtE0mGLNYc1lvikmdul3kczosyJ0T0VF2HfS7W_XM2BcleD1J6jbnw8V5aJLl9lPqdJqCyhkLpab0Loi_b9XBmTu-QaSi39fvK8B7L_Nr7Ivif_YtzBmPVOwf9sC9yo77BpX3MT7xq78WuPSpBTgfNsPh-FlH0bifNGa8z7U1763abzXlpX-W_l46ddb4syCpd_efVH-k_z0_wvz9i6X7eZz7U5cyEZPor6_q-QcyWpDqv5zrp596NJDrc7PakYl5vYVbhS7oE4m6QaR56rbYy67YJSBY3or5w4wERYQFZ6CampEaibcpw7f7AY-RYHNr_5uZ0aX7A4379oQ7O4r40zQHsYtzEa0HXanonb74cy8osGj7sE4FBqh5Kb0ZXL14Gp8HXq3qU45oc7ApwrkESHb7tRJpkG8pJ5oGSbH6l6KHG6T7cEEGJogEL7XrfJ05t6AqcwGonYK4s7Z5s7xRQEWrS5Pa8447852Fn5cEeadr15wpaHzqc6F6eFtTApGaw4LrwEPqcxIY0w0FhHF7-62GVZKEh54GqE8HR6JH5qEZz56Hwq-SYZJjsbZFio-pIrfLRbjLyElHYH2E0aOGA5R6wbEE27mpcpCHnYtH8p8ptFcapbnZ2665F5TYYGRGlEDExHKbDGz6JFgFzGcZnblrw6w7d4e4JYcxDqspSq9GYGbHRE_ZDFxGbbeaN6uHsAJFHFiGerSrRQpGxYBEGZ8ZIblo9GrEvYRG4pRGcFPGxES6vG0wuFx6fEIqOpTELp5oU7zFK7w6NKpYAk85FEj6l6tYmIdZbFwk7EvFR5EF-YfFfL76npCGdFe6Z7-F0FXBcq243rw53H85kntZdCUlE7PEIm0nIkkF5o4DRat7Q6hZS4pbsmAmcnur6osr_G3EQnoHFFvaCl2i17gZUlqGUoaHvEol8reqEkWA5rcb2oXbzFSr6r77w49pWF864r6kUmPGinwnqHk6hGg4onppMlu42mhaWafLp7M4qnXYdzcYZrQHMHanWE_6ekFBCmGlV7GlVFfH0nBkQ4pYr7ioHYYbzF2pDrmrs6EnulQk-RenCk-n4G7E0pnr5kkE3o_rFkopGb2rlmyG_qsrp5paFFrG6kCkZkGkinNk0kwbmkdnfL5ojnymmotE668phkQpAlionaWkgpnb8npltZTlNmVFOHjJMZjFpqc7Sor6cxe7p7nHbkBQ67jJBYpZylEljkkl6mTnemwm-nUnilobX5XmL7771Ghb_HqlFnGFupcoPmDpfqWHhHrFHnkmNkAUznAVX6SnjEymaGca9nRlPmqknbtQNJd6fm1loVOZ7KnnuZAX-m0nznaaMm6EKlAogoeGxkmFwoIrIqmY0XjkUb0VYVnktm8FgUfIsqbl6Fco8p8qU495ioSqIrSqoGoUiV0UcG4EOF-mmkBmsVMqWm-qpF2oOr96kXXYeper2pmUWDCU_n85hoMVinMV6qBm9ofEhn35HF5oFoTLzFloVoHbMkpkek6VlGV4qGMUml17k55lBkdkIpwFHFSoTpjIxnu7PmRYJ4rrLlfmQm0WyZiV6WDEGUJVR5tnJU263pCGPrPrWUmH5Ggm_qFVOU2FvauXiVxVVGjHtk25IbirFnoZ8pYYclxn4bfJEZCVaXOWiW6XKEVF9Xnkvp4WsY_JyURk8Z8abkqVqYiZiY1nzVdUuWgZuWVUJpvE1G6b262nnbGYOU5WqmWY65BY-p-GOWnVplRXTkSWzm4U1GBZJ7hkGbhaRbRbzG8anaBZiGpaHk-Q1a0A5D1a0BwD_W0ZHj9BxAY1rV0m1VpoZribpVfL3nKkvVxm_qdntR-WjnFXaVyjI11aiTo2Y29TY2xD-BVF5o1EZqwXmXR5naI7llw7p4WpfLUU_WsFM11wo0tas3wDs2c241VGEWDXg4Wqg0O6e6noTIi1wVCbAqeqNI65zXElnW4rM2o2K1429Uc0ZBc122A2Kk1ENI8XJ4RnCaToU1q4XFcYeoDpp4k3006kLVI1y0s0NbK2O2q1rVJXeXBlIZfLFktHAr5ov6G0GbjpNGQ6YaI2y21Y23R1uUq3c3x0bX9rfKgWpHna8b95RlfWU3b5RayFIY66-QoUW2_WF3y1o1K2l2x3l2SUN63WNL3URnw4gqanNXwXeYNKgrwoF3tDW0K0l321l3O04UXmV3x6IrWk61ioGqYYRaTI4lPrSnO5N2dU90r2R3F1s2D043D2A03XSVJEWoH22nIp5plojVZ1clZXOlNHJmh2pky131F1r2P0b1D1b0eVA3v21F113ntytSWrRZz4HWLpw4Q5k0nVmBZaWTdKWA2pqZnVjZ9L4jdA2CszwBTA95SLAHTKzKNxTARAzBKwe7LLd0QMAByQoEkiQmNF-ThwB-xGahaRF9yKK_9k12-sOOunOWVbp0to-AA0qEBJJkpdUxYZdSuI0g7JbIcWeOmWnTbxW6r4SbXrR1Wo6SX-ZheVdsfFddUiTURjurSucdmWiRfMeRc7oOoPsvavf3fAzFStQ7c_eE1VSBbvfOnDYuqgx3Bgydv41FgduAeFsvQ0F0KnOgCI4AWI-40g4FrIdtaav8U0dAZ-X7c-bZZ0TKRMl3d-ZbT5AABLUCzjqNdNLCURoDxVGmAWuNeYlMa2mpwo_LQGQGnqd0HkAMBQU5Ib6o1VFVh1tNyjOD5jNQCD5OFPT7FM-b7GFntwr6dErpBEH0HVJisl55ArL18OjibC7OVAxNDNh5FMtmGPjPXrmopYcW2pEaeroM4lYksqgq2bL32DuAdiDPZmimb1AFjOE0TMZpk13m2ZZXtRXP-1crhbmpWY5MIh7MMWiNfPIuJ0kFXEumQWrkq7ZMLNcrG0yEDXfW8Oj69R5A-JwuxVkuv0Uux4dnmqa4r5XHrUwGgtnZ578qaXsul5GyoAeTbD7Pm6HPxO1G2YAtXAXNXFtzn1iEg3p3L2csoiZDzw8srU6gIjuB6OxOIM_OfEQ6EucZtzO7_EC2WMIH57vXcktMM3h2bM6KYDRURorV8s4XfMotXBgFt0UH940wmOMuczlr748p-vrO33XjzjPChDWikufP8tHNIPmr55f0KlWXwpyOeurlcpa6TIrFgORWzZoAku9XhsIORuUv4XhZN1g3as-oczRRn1JttwsrQH54hP33sDqMFBWgqsR7ktFsOsoofUVMfI-b_Me11Oqmav97IYgsRV1lyhKwZBRCoDCP5sHOLvqslueqivna0wvq1Nbk7vcYhk3MTuHslXtAwnOM5lqv7Fon94YlDsopePN3wVDp4noYEOtO31_5_um4FsRsCvz4okHEFHeMJQJuwHPvXOd0hnty82rFEOoAEIGISJ_iaDUCASHJMJgSAb8C9xHj8BXD8A_DFjVAZDmg_ikKlTrD8AwICD5DUCsfsD8CJmNL8fVj8DlDkD9AzB1Jif8C9RpK_jQhYAkKwBQxkiUAXw5AJKzjmQWgcd_CljScWD8BRBoDKcqDhgaBwAWfieEIwDzDhhWRjZifWGyd2S2cAB6TrUnIA4K_Axn_n1xgWrUTnlnggmolokQ4XomkXusT2Zg8gBCnH3gHw1AkAKQdCNH2gdHoEIAayIAtAPoWQrH7HxSMA5oxn5oswMw_A6Xz88gQAA`} mdxType=\"Playground\">\n  <div style={{\n        width: '100%',\n        height: '380px'\n      }}>\n    <LineChart title=\"Taiwan's GDP Per Capita\" titleDesc={<span>Source: <a href=\"https://www.gapminder.org/\" target=\"_blank\">GapMinder</a> | Unit: constant 2011 international $</span>} titleAlign=\"right\" data={taiwanData} x={{\n          field: 'year',\n          type: 'ordinal'\n        }} y={{\n          field: 'gdpPercap',\n          type: 'quantitative'\n        }} mdxType=\"LineChart\" />\n  </div>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}