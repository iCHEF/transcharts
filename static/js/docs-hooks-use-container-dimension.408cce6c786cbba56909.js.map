{"version":3,"sources":["/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/docs/hooks/useContainerDimension.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","isMDXComponent"],"mappings":"0XAYMA,iFAAc,IAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yBADR,yBAGAL,OAAAE,EAAA,EAAAF,CAAA,gBAAWA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,yBAAX,mCAAgHN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAAhH,oBAA0LN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAA1L,QAAoPN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAApP,oBACAN,OAAAE,EAAA,EAAAF,CAAA,yBAAoBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAApB,4DACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,4JAWLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gCADR,mBAEuBL,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,iBACvBN,OAAAE,EAAA,EAAAF,CAAA,gBAAWA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,yBAAX,sBAAmGN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACrHE,KAAQ,qEADuF,kBAAnG,oFAIAR,OAAAE,EAAA,EAAAF,CAAA,6GACAA,OAAAE,EAAA,EAAAF,CAAA,wBAAmBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,gBAAnB,2EAAuJN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,yBAAvJ,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,iQAOTX,EAAWa,gBAAiB","file":"static/js/docs-hooks-use-container-dimension.a46357c5.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { ResponsiveLayer } from '@ichef/transcharts-graph'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"usecontainerdimension\"\n    }}>{`useContainerDimension`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useContainerDimension`}</inlineCode>{` hook help you get the bounding `}<inlineCode parentName=\"p\">{`dimension`}</inlineCode>{` (an object with `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{`) of a DOM node.`}</p>\n    <p>{`By combining `}<inlineCode parentName=\"p\">{`useRef`}</inlineCode>{`, you can easily get the width and height of a DOM node:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const graphRef = useRef(null);\nconst { width, height } = useContainerDimension(graphRef);\n\nreturn (\n  <div ref={graphRef}>\n    ...\n  </div>\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"advanced-usage\"\n    }}>{`Advanced Usage`}</h2>\n    <h3 {...{\n      \"id\": \"customizing-the-debouncetime\"\n    }}>{`Customizing the `}<inlineCode parentName=\"h3\">{`debounceTime`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useContainerDimension`}</inlineCode>{` hook utilizes the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/updates/2016/10/resizeobserver\"\n      }}>{`ResizeObserver`}</a>{`\nto listen to the changes in the dimension of elementâ€™s content rectangle.`}</p>\n    <p>{`To avoid updating the dimension too frequently, we set a debounce time for updating such change.`}</p>\n    <p>{`The default `}<inlineCode parentName=\"p\">{`debounceTime`}</inlineCode>{` is 300 ms, and you can customize it by setting the second parameter of `}<inlineCode parentName=\"p\">{`useContainerDimension`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const { width, height } = useContainerDimension(graphRef, 100);\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}