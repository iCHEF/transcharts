{"version":3,"sources":["/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/docs/api-reference/Overview.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","alt","src","isMDXComponent"],"mappings":"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","file":"static/js/docs-api-reference-overview.dbe1c646.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"making-your-own-charts\"\n    }}>{`Making Your Own Charts`}</h1>\n    <p>{`You can utilize the `}<inlineCode parentName=\"p\">{`@ichef/transcharts-graph`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`@ichef/transcharts-chart`}</inlineCode>{` packages to create charts with X and Y axis.`}</p>\n    <h2 {...{\n      \"id\": \"calculate-chart-dimensions\"\n    }}>{`Calculate Chart Dimensions`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useChartDimensions`}</inlineCode>{` lets you get the `}<inlineCode parentName=\"p\">{`outerDimension`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`graphDimension`}</inlineCode>{`.`}</p>\n    <p>{`By attaching the ref to the outer chart (`}<inlineCode parentName=\"p\">{`chartRef`}</inlineCode>{`), the ref to the title box (`}<inlineCode parentName=\"p\">{`titleRef`}</inlineCode>{`), the legend (`}<inlineCode parentName=\"p\">{`legendRef`}</inlineCode>{`), and the inner margin of the chart,\nit calcultates the following dimensions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Full dimension of the chart: `}<inlineCode parentName=\"li\">{`outerDimension`}</inlineCode>{` (see the blue text on the graph below)`}</li>\n      <li parentName=\"ul\">{`Inner dimension of the chart: `}<inlineCode parentName=\"li\">{`graphDimension`}</inlineCode>{` (see the orange text on the graph below)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  const {\n    chartRef,\n    titleRef,\n    legendRef,\n    outerDimension,\n    graphDimension,\n  } = useChartDimensions(margin);\n`}</code></pre>\n    <p><img alt=\"Transchart_Dimension\" src=\"https://user-images.githubusercontent.com/1139698/61859951-b64c7880-aefb-11e9-9f5a-f6e4b1929c23.png\" /></p>\n    <p>{`It calculates the width and height of a component using `}<inlineCode parentName=\"p\">{`useContainerDimension`}</inlineCode>{` hook of the graph package.`}</p>\n    <h2 {...{\n      \"id\": \"svgwithaxisframe\"\n    }}>{`SvgWithAxisFrame`}</h2>\n    <p><inlineCode parentName=\"p\">{`<SvgWithAxisFrame>`}</inlineCode>{` is the component that draws the following basics components of a chart for you:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The title and description of the chart (`}<inlineCode parentName=\"li\">{`<HeaderBox>`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`The SVG to draw the chart along with the X and Y axes (the axes are drawn using `}<inlineCode parentName=\"li\">{`<AxisLayer>`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\">{`The transformed inner SVG element container `}<inlineCode parentName=\"li\">{`<g>`}</inlineCode>{` to draw the main SVG components  (yellow area on the chart above).`}</li>\n    </ul>\n    <p>{`Pass the following props to draw a chart:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`children`}</inlineCode>{`: the main SVG components like the bars, lines, or dots to be drawn on the transformed inner SVG element container `}<inlineCode parentName=\"li\">{`<g>`}</inlineCode>{` (yellow area on the chart above).`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`svgOverlay`}</inlineCode>{`: the non-SVG components like the tooltip and legend.`}</li>\n    </ul>\n    <p>{`You may refer to the source code of `}<inlineCode parentName=\"p\">{`<LineChart>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<BarChart>`}</inlineCode>{` as an example.`}</p>\n    <h2 {...{\n      \"id\": \"add-tooltipshovering-effects\"\n    }}>{`Add Tooltips/Hovering Effects`}</h2>\n    <p><img alt=\"Tooltip_transchart\" src=\"https://user-images.githubusercontent.com/1139698/61932715-aa71bc80-afb6-11e9-9606-4e71acecfff7.png\" /></p>\n    <p>{`To detect the mouse and touch events, you can add a `}<inlineCode parentName=\"p\">{`<HoverLayer>`}</inlineCode>{` component\nin which you can put `}<inlineCode parentName=\"p\">{`hoverDetectionComponents`}</inlineCode>{` which are an array of transparent svg elements to be attached with the mouse and touch events.`}</p>\n    <p><inlineCode parentName=\"p\">{`<HoverLayer>`}</inlineCode>{` detects the X and Y position and the index of the `}<inlineCode parentName=\"p\">{`hoverDetectionComponents`}</inlineCode>{` array are being hovered,\nand sets such information using the passed in prop `}<inlineCode parentName=\"p\">{`setHoveredPosAndIndex(...)`}</inlineCode>{`.\nIt also calls the passed in `}<inlineCode parentName=\"p\">{`clearHovering()`}</inlineCode>{` to clear the hovering index when users hover/touch out of the regions of `}<inlineCode parentName=\"p\">{`hoverDetectionComponents`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`setHoveredPosAndIndex(...)`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`clearHovering()`}</inlineCode>{` can be gotten from `}<inlineCode parentName=\"p\">{`useHoverState`}</inlineCode>{` hook\nwhich also lets you get `}<inlineCode parentName=\"p\">{`hovering`}</inlineCode>{` (whether users are hovering/touching the `}<inlineCode parentName=\"p\">{`hoverDetectionComponents`}</inlineCode>{`)\nand `}<inlineCode parentName=\"p\">{`hoveredPoint`}</inlineCode>{` (the index of `}<inlineCode parentName=\"p\">{`hoverDetectionComponents`}</inlineCode>{` and the X and Y position).`}</p>\n    <p>{`You can use `}<inlineCode parentName=\"p\">{`hovering`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`hoverDetectionComponents`}</inlineCode>{` to create the visual hovering effect or add tooltips.`}</p>\n    <p>{`To draw the tooltip, there is `}<inlineCode parentName=\"p\">{`<TooltipLayer>`}</inlineCode>{` to help you create it with ease.`}</p>\n    <h3 {...{\n      \"id\": \"usecartesianencodings\"\n    }}>{`useCartesianEncodings`}</h3>\n    <p><inlineCode parentName=\"p\">{`useCartesianEncodings`}</inlineCode>{` is a hook of the `}<inlineCode parentName=\"p\">{`chart`}</inlineCode>{` library aimed to isolating the data transformation and computing\nshared across most charts with the X and Y axes.`}</p>\n    <p>{`It groups the data based on the provided color encoding and computes the d3 scale functions\nfor the X and Y axis along with the color scale.`}</p>\n    <p>{`It is currently used by `}<inlineCode parentName=\"p\">{`<LineChart>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<BarChart>`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"input-of-usecartesianencodings\"\n    }}>{`Input of useCartesianEncodings`}</h4>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`graphDimension`}</strong>{`: Width and height of the inner graph (does not contain axes, legend, etc...)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`theme`}</strong>{`: Theme of the chart, used for the generation of the color scale`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`data`}</strong>{`: Array of rows of data`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`x`}</strong>{`: Field and data type of x-axis`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`y`}</strong>{`: Field and data type of y-axis`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`color?`}</strong>{`: Fields and definitions for colors; pass in `}<inlineCode parentName=\"li\">{`undefined`}</inlineCode>{` if you are intended to draw single color.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`drawFromXAxis`}</strong>{`: Whether the graph is drawn from the x-axis, i.e., vertical graph. In a transposed (horizontal) graph, you have to set it as false, in order to get the right `}<inlineCode parentName=\"li\">{`axisProjectedValues`}</inlineCode>{` value.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"output-of-usecartesianencodings\"\n    }}>{`Output of useCartesianEncodings`}</h4>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`dataGroups`}</strong>{`: Array of data grouped by fields of colors.`}</li>\n    </ul>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  [\n    {\n      \"restaurant\": \"Cafe\",\n      \"type\": \"Beer\",\n      \"sales\": 100\n    },\n    {\n      \"restaurant\": \"Tea Time\",\n      \"type\": \"Beer\",\n      \"sales\": 150\n    }\n  ],\n  [\n    {\n      \"restaurant\": \"Tea Time\",\n      \"type\": \"Black Tea\",\n      \"sales\": 300\n    },\n    {\n      \"restaurant\": \"Bistro\",\n      \"type\": \"Black Tea\",\n      \"sales\": 500\n    }\n  ],\n  ...\n]\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`axisProjectedValues`}</strong>{`: The y-values in the `}<inlineCode parentName=\"li\">{`dataGroups`}</inlineCode>{` grouped by projected x values. It is useful for displaying the tooltips.`}</li>\n    </ul>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"basePos\": 0,\n    \"baseStrVal\": \"Bistro\",\n    \"projectedVals\": [\n      {\n        \"groupIdx\": 1,\n        \"projectedStrVal\": 500,\n        \"projectedPos\": 281.0807291666667,\n        \"color\": \"#ff7f0e\"\n      },\n      {\n        \"groupIdx\": 2,\n        \"projectedStrVal\": 700,\n        \"projectedPos\": 393.51302083333337,\n        \"color\": \"#2ca02c\"\n      }\n    ]\n  },\n  {\n    \"basePos\": 88.27586206896552,\n    \"baseStrVal\": \"Tea Time\",\n    \"projectedVals\": [\n      {\n        \"groupIdx\": 0,\n        \"projectedStrVal\": 150,\n        \"projectedPos\": 84.32421875,\n        \"color\": \"#1f77b4\"\n      },\n      {\n        \"groupIdx\": 1,\n        \"projectedStrVal\": 300,\n        \"projectedPos\": 168.6484375,\n        \"color\": \"#ff7f0e\"\n      },\n      {\n        \"groupIdx\": 2,\n        \"projectedStrVal\": 200,\n        \"projectedPos\": 112.43229166666666,\n        \"color\": \"#2ca02c\"\n      }\n    ]\n  },\n  ...\n]\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`scalesConfig`}</strong>{`: d3 scale functions and other related configurations computed for various encodings.\nIt contains keys of objects of the encodings of `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` axes as well as the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` (if exists).`}</p>\n        <p parentName=\"li\">{`  The inner keys of the encodings:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`field`}</strong>{`: Name of the selected column from the data.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`type`}</strong>{`: The data encoding type passed in from the props of the chart (`}<inlineCode parentName=\"li\">{`'nominal' | 'ordinal' | 'quantitative' | 'temporal'`}</inlineCode>{`).`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`scaleType`}</strong>{`: Converted d3 scaled name which is determined by the chart component.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`domain`}</strong>{`: Calculated domain based on the `}<inlineCode parentName=\"li\">{`scaleType`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`range`}</strong>{`: Range related to the visual space.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`Exmaple:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"x\": {\n    \"field\": \"restaurant\",\n    \"range\": [\n      0,\n      674.734375\n    ],\n    \"domain\": [\n      \"Cafe\",\n      \"Tea Time\",\n      \"Bistro\",\n      \"Cafe\",\n      \"Tea Time\",\n      \"Tea Time\",\n      \"Bistro\"\n    ],\n    \"scaleType\": \"band\",\n    \"type\": \"nominal\"\n  },\n  \"y\": {\n    \"field\": \"sales\",\n    \"range\": [\n      256,\n      0\n    ],\n    \"domain\": [\n      0,\n      1200\n    ],\n    \"scaleType\": \"linear\",\n    \"type\": \"quantitative\"\n  },\n  \"color\": {\n    \"domain\": [\n      \"Beer\",\n      \"Black Tea\",\n      \"Black Tea\",\n      \"Wine\",\n      \"Wine\",\n      \"Beer\",\n      \"Wine\"\n    ],\n    \"type\": \"nominal\",\n    \"field\": \"type\",\n    \"range\": [\n      \"#1f77b4\",\n      \"#ff7f0e\",\n      \"#2ca02c\",\n      \"#d62728\",\n      \"#9467bd\",\n      \"#8c564b\",\n      \"#e377c2\",\n      \"#7f7f7f\",\n      \"#bcbd22\",\n      \"#17becf\"\n    ],\n    \"scaleType\": \"ordinal\"\n  }\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`rowValSelectors`}</strong>{`: Contains functions to select values from a data row.`}</p>\n        <p parentName=\"li\">{`The inner keys of the x and y encodings contains the following:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`getFormattedStringVal`}</strong>{`: Funtion helps you get the string to be displayed on tooltips from a data row.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`getOriginalVal`}</strong>{`: Funtion helps you get the original data from a data row.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`getScaledVal`}</strong>{`: Given a record of data, it returns the mapped value (computed by d3 scale function) of the specified field.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`Exmaple:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"color\": {\n    \"getString\": function,\n  },\n  \"x\": {\n    \"getFormattedStringVal\": function,\n    \"getOriginalVal\": function,\n    \"getScaledVal\" function\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}