{"version":3,"sources":["/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/common/config.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/components/Foo.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/hooks/useAnimationFrame.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/hooks/useContainerDimension.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/hooks/useHoverState.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/index.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/AxisLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/HoverLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/ResponsiveLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/layers/TooltipLayer.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/legend/Legend.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/legend/LegendGroup.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/themes/index.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/tooltip/Tooltip.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/tooltip/TooltipItem.tsx","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getAxisScale.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getColorScale.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getDataGroupByEncodings.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getFieldValuesFromData.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getRecordFieldSelector.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/getValByScaleType.ts","/Users/hsunpeiwang/Documents/Projects/iChef/transcharts/packages/graph/src/utils/styled-components/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_VALS","SCALE_TYPE","Foo","_React$Component","Object","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","react__WEBPACK_IMPORTED_MODULE_5__","props","framework","React","useAnimationFrame","react__WEBPACK_IMPORTED_MODULE_0__","animaFrameIdRef","useRef","requestWindowAnimationFrame","useCallback","rafCallback","current","window","requestAnimationFrame","useEffect","cancelAnimationFrame","animationFrame","useContainerDimension","containerRef","debounceTime","length","undefined","_useState","useState","width","height","_useState2","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dimension","setDimension","resizeObsrRef","updateDimension","debouncedResize","debounce","entries","observer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_entry$contentRect","contentRect","err","return","resizeObserverPolyfill","observe","disconnect","useHoverState","hovering","setHovering","_useState3","index","position","x","y","_useState4","hoveredPoint","setHoveredPoint","clearHovering","setHoveredPosAndIndex","hoveredIndex","xPos","yPos","_components_Foo__WEBPACK_IMPORTED_MODULE_0__","_common_types__WEBPACK_IMPORTED_MODULE_1__","o","_hooks_useContainerDimension__WEBPACK_IMPORTED_MODULE_3__","_hooks_useHoverState__WEBPACK_IMPORTED_MODULE_4__","_layers_ResponsiveLayer__WEBPACK_IMPORTED_MODULE_6__","_layers_AxisLayer__WEBPACK_IMPORTED_MODULE_7__","_layers_HoverLayer__WEBPACK_IMPORTED_MODULE_8__","_layers_TooltipLayer__WEBPACK_IMPORTED_MODULE_9__","_themes__WEBPACK_IMPORTED_MODULE_10__","_legend_LegendGroup__WEBPACK_IMPORTED_MODULE_12__","_utils_getValByScaleType__WEBPACK_IMPORTED_MODULE_15__","_utils_getAxisScale__WEBPACK_IMPORTED_MODULE_16__","_utils_getColorScale__WEBPACK_IMPORTED_MODULE_17__","_utils_getDataGroupByEncodings__WEBPACK_IMPORTED_MODULE_18__","_utils_getRecordFieldSelector__WEBPACK_IMPORTED_MODULE_19__","AxisLayer","react__WEBPACK_IMPORTED_MODULE_0___default","n","_vx_axis__WEBPACK_IMPORTED_MODULE_1__","_themes__WEBPACK_IMPORTED_MODULE_2__","getNumberOfTicks","axisLength","data","maxTicks","Math","max","lengthBasis","ticksFromLen","ceil","min","getYtickLabelProps","styles","fill","strokeColor","fontSize","tickFontSize","textAnchor","tickFormat","val","concat","_ref","_ref$showLeftAxis","showLeftAxis","_ref$showBottomAxis","showBottomAxis","xAxis","yAxis","theme","useContext","ThemeContext","xAxisTheme","yAxisTheme","a","createElement","Fragment","top","left","scale","stroke","strokeWidth","tickStroke","tickStrokeColor","numTicks","tickLabelProps","dx","dy","label","HoverLayer","lodash_throttle__WEBPACK_IMPORTED_MODULE_1__","lodash_throttle__WEBPACK_IMPORTED_MODULE_1___default","_vx_event__WEBPACK_IMPORTED_MODULE_2__","_hooks_useAnimationFrame__WEBPACK_IMPORTED_MODULE_3__","handleHover","hoverDetectionComponents","throttleTime","updatePosition","throttle","dataIndex","event","_localPoint","localPoint","handleTooltip","persist","hideTooltip","cancel","detectionAreas","map","area","handleCurrentTooltip","cloneElement","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","defaultProps","ResponsiveLayer","className","style","children","restProps","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","layerRef","react__WEBPACK_IMPORTED_MODULE_2___default","assign","ref","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","TooltipLayer","_tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_1__","_tooltip_TooltipItem__WEBPACK_IMPORTED_MODULE_2__","axisProjectedValues","graphWidth","graphHeight","margin","_ref$x","_ref$y","_ref$xOffset","xOffset","_ref$yOffset","yOffset","projected","tooltipItems","groupedY","pointY","yStrVal","color","text","graphMargin","show","xStrVal","Legend","_vx_legend__WEBPACK_IMPORTED_MODULE_1__","SCALE_TYPE_TO_LEGEND","ordinal","LegendOrdinal","sequential","LegendLinear","direction","render","scaleType","title","LegendComponent","vxDirection","LegendGroupWrapper","styled","div","_templateObject","LeftLegendGroupWrapper","_templateObject2","RightLegendGroupWrapper","_templateObject3","LEGEND_WRAPPER_MAP","_templateObject4","right","bottom","_templateObject5","LegendGroup","forwardRef","legend","hide","field","_color$legend","orient","isSideLegend","indexOf","LegendGroupWrapperComponent","react__WEBPACK_IMPORTED_MODULE_1___default","_Legend__WEBPACK_IMPORTED_MODULE_3__","ThemeProvider","d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_1__","deepmerge__WEBPACK_IMPORTED_MODULE_2__","deepmerge__WEBPACK_IMPORTED_MODULE_2___default","themes","default","colors","category","schemeCategory10","scheme","schemeBlues","interpolator","interpolateCool","defaultTheme","Provider","resultTheme","partialTheme","deepmerge","arrayMerge","dest","source","mergeTheme","TooltipWrapper","Tooltip","_ref$show","_ref$graphMargin","tooltipStyle","onRightHalf","percentX","percentY","round","leftOffset","transform","transition","getTooltipPosition","useTransition","from","opacity","enter","leave","unique","_ref2","item","react_spring__WEBPACK_IMPORTED_MODULE_3__","ItemWrapper","TooltipItem","_ref2$color","react__WEBPACK_IMPORTED_MODULE_1__","getXAxisScale","getYAxisScale","d3_array__WEBPACK_IMPORTED_MODULE_0__","d3_scale__WEBPACK_IMPORTED_MODULE_1__","_common_config__WEBPACK_IMPORTED_MODULE_2__","_getValByScaleType__WEBPACK_IMPORTED_MODULE_3__","_getFieldValuesFromData__WEBPACK_IMPORTED_MODULE_4__","getAxisScale","encoding","domain","range","type","scaleConfig","dataVals","getFieldValuesFromData","getValue","getValByScaleType","scalePoint","d3Extent","time","scaleTime","scaleBand","padding","paddingInner","paddingOuter","scaleLinear","getNumericDomain","values","_d3Extent","_d3Extent2","_d3Extent2$","extentMin","_d3Extent2$2","getColorScaleSetting","scaleOrdinal","sortedUniq","sort","b","Number","obj","getTime","scaleSequential","row","Error","getColorScale","_getColorScaleSetting","getDataGroupByFields","fields","reduce","all","rows","groupBy","joinedGroups","group","_Users_hsunpeiwang_Documents_Projects_iChef_transcharts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getDataGroupByEncodings","encodings","fieldName","forEach","push","getRecordFieldSelector","_getValByScaleType__WEBPACK_IMPORTED_MODULE_0__","axis","getOriginalVal","record","getScaledVal","getFormattedStringVal","recordValue","toLocaleString","_common_config__WEBPACK_IMPORTED_MODULE_0__","Date","styled_components__WEBPACK_IMPORTED_MODULE_0__","styledComponents","css","createGlobalStyle","keyframes"],"mappings":"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","file":"static/js/docs-charts-bar-chart~docs-charts-line-chart~docs-hooks-use-container-dimension~docs-index~docs-laye~888e7bf1.56ce04dc.js","sourcesContent":["import { ScaleType } from './types';\n\nconst SCALE_TYPE: ScaleType = 'linear';\n\nexport const DEFAULT_VALS = {\n  SCALE_TYPE,\n};\n","import * as React from 'react';\n\nexport interface FooProps { framework: string; }\n\n// 'FooProps' describes the shape of props.\n// State is never set so we use the '{}' type.\nexport class Foo extends React.Component<FooProps, {}> {\n  public render() {\n    return <h1>Hello from {this.props.framework}!</h1>;\n  }\n}\n","import {\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\n\nexport interface AnimationFrameControl {\n  /** The current animation frame ID */\n  animationFrame: number | null;\n\n  /** Function that takes `rafCallback` and put it into `window.requestAnimationFrame()`  */\n  requestWindowAnimationFrame: (rafCallback: () => void) => void;\n}\n\nexport function useAnimationFrame(): AnimationFrameControl {\n  /** stores the animation frame ID */\n  const animaFrameIdRef = useRef<number | null>(null);\n\n  const requestWindowAnimationFrame = useCallback(\n    (rafCallback) => {\n      animaFrameIdRef.current = window.requestAnimationFrame(rafCallback);\n    },\n    [],\n  );\n\n  useEffect(\n    () => {\n      // the functional component unmounting\n      return () => {\n        // cancel the scheduled update on the animation frame\n        if (animaFrameIdRef.current) {\n          window.cancelAnimationFrame(animaFrameIdRef.current);\n        }\n      };\n    },\n    [],\n  );\n\n  return {\n    requestWindowAnimationFrame,\n    animationFrame: animaFrameIdRef.current,\n  };\n}\n","import {\n  RefObject,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport resizeObserverPolyfill from 'resize-observer-polyfill';\n\nimport { GraphDimension } from '../common/types';\n\nimport { useAnimationFrame } from './useAnimationFrame';\n\ninterface ResizeObserverEntry {\n  readonly target: Element;\n  readonly contentRect: DOMRectReadOnly;\n}\n\nexport function useContainerDimension(\n  containerRef: RefObject<HTMLElement>,\n  debounceTime = 300,\n) {\n  const [dimension, setDimension] = useState<GraphDimension>({\n    width: 0,\n    height: 0,\n  });\n\n  /** resizeObsrRef.current stores the ResizeObserver */\n  const resizeObsrRef = useRef<ResizeObserver | null>(null);\n  /** use requestAnimationFrame to update the dimension */\n  const { requestWindowAnimationFrame } = useAnimationFrame();\n\n  /** Function to set the updated dimension */\n  const updateDimension = useCallback(\n    (width: number, height: number) => {\n      requestWindowAnimationFrame(() => {\n        setDimension({\n          width,\n          height,\n        });\n      });\n    },\n    [],\n  );\n\n  /**\n   * Function to be called when there are resizing events observed by ResizeObserver\n   * Ref: https://developers.google.com/web/updates/2016/10/resizeobserver\n   */\n  const debouncedResize = useCallback(\n    debounce(\n      (\n        entries: ResizeObserverEntry[],\n        observer: ResizeObserver,\n      ) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          updateDimension(width, height);\n        }\n      },\n      debounceTime,\n    ),\n    [],\n  );\n\n  useEffect(\n    () => {\n      // connect the resize observer on mounted\n      if (containerRef.current) {\n        resizeObsrRef.current = new resizeObserverPolyfill(debouncedResize);\n        resizeObsrRef.current.observe(containerRef.current!);\n      }\n\n      return () => {\n        // disconnect the resize observer on unmounted\n        if (resizeObsrRef.current) {\n          resizeObsrRef.current!.disconnect();\n        }\n      };\n    },\n    [containerRef],\n  );\n\n  return dimension;\n}\n","import { useState, useCallback } from 'react';\n\nimport { HoveredPointState, HoveringState } from '../common/types';\n\nexport interface HoverState {\n  /** Records whether there is mouse or touch event generating from the inner layer */\n  hovering: HoveringState;\n\n  /** The position of the point being hovered and its mapped index of data  */\n  hoveredPoint: HoveredPointState;\n}\n\nexport interface HoverStateControls extends HoverState {\n  /** set `hovering` as false; it should be called after the mouse left the `<HoverLayer>`. */\n  clearHovering: () => void;\n  /** set current hovered position and data index */\n  setHoveredPosAndIndex: (hoveredIndex: number, xPos: number, yPos: number) => void;\n}\n\nexport function useHoverState(): HoverStateControls {\n  const [hovering, setHovering] = useState(false);\n  const [hoveredPoint, setHoveredPoint] = useState({\n    index: 0,\n    position: {\n      x: 0,\n      y: 0,\n    },\n  });\n\n  const clearHovering = useCallback(\n    () => {\n      setHovering(false);\n    },\n    [],\n  );\n\n  const setHoveredPosAndIndex = useCallback(\n    (hoveredIndex: number, xPos: number, yPos: number) => {\n      setHovering(true);\n      setHoveredPoint({\n        index: hoveredIndex,\n        position: {\n          x: xPos,\n          y: yPos,\n        },\n      });\n    },\n    [],\n  );\n\n  return {\n    hovering,\n    hoveredPoint,\n    clearHovering,\n    setHoveredPosAndIndex,\n  };\n}\n","export * from './components/Foo';\nexport * from './common/types';\nexport * from './common/config';\nexport * from './hooks/useContainerDimension';\nexport * from './hooks/useHoverState';\nexport * from './hooks/useAnimationFrame';\nexport * from './layers/ResponsiveLayer';\nexport * from './layers/AxisLayer';\nexport * from './layers/HoverLayer';\nexport * from './layers/TooltipLayer';\nexport * from './themes';\nexport * from './legend/Legend';\nexport * from './legend/LegendGroup';\nexport * from './tooltip/Tooltip';\nexport * from './tooltip/TooltipItem';\nexport * from './utils/getValByScaleType';\nexport * from './utils/getAxisScale';\nexport * from './utils/getColorScale';\nexport * from './utils/getDataGroupByEncodings';\nexport * from './utils/getRecordFieldSelector';\nexport * from './utils/getFieldValuesFromData';\n","import React, { useContext } from 'react';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\n\nimport { AxisScale } from '../common/types';\nimport { ThemeContext } from '../themes';\n\n/**\n * Returns the number of ticks on the axis based on the length of data and the axis\n * @param axisLength - length of the axis\n * @param data - data of the graph\n */\nfunction getNumberOfTicks(axisLength: number, data: object[]): number {\n  const maxTicks = Math.max(data.length, 2);\n  const lengthBasis = axisLength > 0 ? axisLength : 60;\n  const ticksFromLen = Math.ceil(lengthBasis / 60);\n  return Math.min(maxTicks, ticksFromLen);\n}\n\nexport interface AxisLayerProps {\n  /** Width of the inner graph */\n  width: number;\n\n  /** Height of the inner graph */\n  height: number;\n\n  /** Should show the axis on the left or not */\n  showLeftAxis: boolean;\n\n  /** Should show the axis on the bottom or not */\n  showBottomAxis: boolean;\n\n  /** Data of the chart */\n  data: object[];\n\n  /** X-axis configurations produced by `getAxisScale` */\n  xAxis: AxisScale;\n\n  /** Y-axis configurations produced by `getAxisScale` */\n  yAxis: AxisScale;\n}\n\nconst getXtickLabelProps = (styles: {\n  tickFontSize: number,\n  strokeColor: string,\n}) => (value: any, index: number) => ({\n  fill: styles.strokeColor,\n  textAnchor: 'end',\n  fontSize: styles.tickFontSize,\n  dx: '-0.25em',\n  dy: '0.25em',\n});\n\nconst getYtickLabelProps = (styles: {\n  tickFontSize: number,\n  strokeColor: string,\n}) => (value: any, index: number) => ({\n  fill: styles.strokeColor,\n  fontSize: styles.tickFontSize,\n  textAnchor: 'middle',\n});\n\n/**\n * Always format the value as string to prevent the zero value from not showing\n */\nconst tickFormat = (val: any) => `${val}`;\n\nexport const AxisLayer: React.SFC<AxisLayerProps> = ({\n  width,\n  height,\n  // it should always show the left axis by default\n  showLeftAxis = true,\n  // it should always show the bottom axis by default\n  showBottomAxis = true,\n  data,\n  xAxis,\n  yAxis,\n}) => {\n\n  const theme = useContext(ThemeContext);\n  const { xAxis: xAxisTheme, yAxis: yAxisTheme } = theme;\n\n  return (\n      <>\n        {showLeftAxis && (\n          <AxisLeft\n            top={0}\n            left={0}\n            scale={yAxis.scale}\n            // TODO: support showing labels on axes\n            stroke={xAxisTheme.strokeColor}\n            strokeWidth={xAxisTheme.strokeWidth}\n            tickStroke={xAxisTheme.tickStrokeColor}\n            // TODO: modify it as a function\n            numTicks={getNumberOfTicks(height, data)}\n            tickLabelProps={getXtickLabelProps(xAxisTheme)}\n            tickFormat={tickFormat}\n            // TODO: format the ticks based on the axis types\n            // tickComponent={({ formattedValue, ...tickProps }) => (\n            //   <text {...tickProps}>{formattedValue}</text>\n            // )}\n          />\n        )}\n        {showBottomAxis && (\n          <AxisBottom\n            top={height}\n            scale={xAxis.scale}\n            stroke={yAxisTheme.strokeColor}\n            strokeWidth={yAxisTheme.strokeWidth}\n            tickStroke={yAxisTheme.tickStrokeColor}\n            numTicks={getNumberOfTicks(width, data)}\n            label=\"label\"\n            tickFormat={tickFormat}\n            tickLabelProps={getYtickLabelProps(yAxisTheme)}\n          />\n        )}\n      </>\n  );\n};\n","import React, { useCallback } from 'react';\nimport throttle from 'lodash/throttle';\nimport { localPoint } from '@vx/event';\n\nimport { useAnimationFrame } from '../hooks/useAnimationFrame';\n\nexport type HoverLayerProps = {\n  /** Set the information related to hover or touch interactions  */\n  setHoveredPosAndIndex: (hoveredIndex: number, xPos: number, yPos: number) => void;\n\n  /** Function to hide the tooltip */\n  clearHovering: () => void;\n\n  /**\n   * Hidden components to detect the mouse or touch interactions.\n   * **Note:** The order of the components should correspond to the order of the data.\n   */\n  hoverDetectionComponents: JSX.Element[];\n} & typeof defaultProps;\n\nconst defaultProps = {\n  /** Function to be called before the latest tooltip position is set */\n  handleHover: () => null,\n\n  /** The throttle time for the mouse and touch events */\n  throttleTime: 180,\n};\n\nexport const HoverLayer = ({\n  setHoveredPosAndIndex,\n  handleHover,\n  clearHovering,\n  hoverDetectionComponents,\n  throttleTime,\n}: HoverLayerProps) => {\n  /** use requestAnimationFrame to schedule updates of hovered position and data index */\n  const { requestWindowAnimationFrame } = useAnimationFrame();\n\n  /** Function to update the position of the tooltip and sets the currently active data index */\n  const updatePosition = useCallback(\n    throttle(\n      (dataIndex: number, event: React.SyntheticEvent) => {\n        // custom action which executes before the position is updated\n        handleHover();\n\n        // convert the position of the event to the coordinate system of the SVG\n        const { x, y } = localPoint(event);\n        requestWindowAnimationFrame(() => {\n          setHoveredPosAndIndex(\n            dataIndex,\n            x,\n            y,\n          );\n        });\n      },\n      throttleTime,\n    ),\n    [handleHover, setHoveredPosAndIndex, throttleTime],\n  );\n\n  /** Function to keep the event data and perform throttled updates of the position */\n  const handleTooltip = useCallback(\n    (dataIndex: number) => (event: React.SyntheticEvent) => {\n      // removes it from the event pool and allows references to the event\n      event.persist();\n      updatePosition(dataIndex, event);\n    },\n    [updatePosition],\n  );\n\n  /** Function to cancel the update of position and disable the hovering state */\n  const hideTooltip = useCallback(\n    () => {\n      // cancel the previously thorttled event to prevent the tooltip from reappearing\n      updatePosition.cancel();\n      clearHovering();\n    },\n    [updatePosition, clearHovering],\n  );\n\n  const detectionAreas = hoverDetectionComponents.map((area: JSX.Element, dataIndex: number) => {\n    const handleCurrentTooltip = handleTooltip(dataIndex);\n    return React.cloneElement(area, {\n      onTouchStart: handleCurrentTooltip,\n      onTouchMove: handleCurrentTooltip,\n      onMouseMove: handleCurrentTooltip,\n      onMouseLeave: hideTooltip,\n    });\n  });\n\n  // Render areas to detect hovering interaction with mouse pointers or touches with data points\n  return (\n    <>\n      {detectionAreas}\n    </>\n  );\n};\n\nHoverLayer.defaultProps = defaultProps;\n","import React, { FunctionComponent, useRef } from 'react';\n\nimport { useContainerDimension } from '../hooks/useContainerDimension';\n\nexport interface ResponsiveProps {\n  className?: string;\n  style?: React.CSSProperties;\n  debounceTime?: number;\n  children: (dimension: { width: number; height: number }) => React.ReactNode;\n}\n\nexport const ResponsiveLayer: FunctionComponent<ResponsiveProps> = ({\n  className,\n  style,\n  children,\n  debounceTime,\n  ...restProps\n}) => {\n  const layerRef = useRef<HTMLDivElement>(null);\n  const dimension = useContainerDimension(layerRef);\n\n  return (\n    <div\n      ref={layerRef}\n      style={{ ...style, width: '100%', height: '100%', position: 'relative' }}\n      className={className}\n      {...restProps}\n    >\n      {children(dimension)}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport { Margin, HoveringState, HoveredPointState } from '../common/types';\nimport { Tooltip } from '../tooltip/Tooltip';\nimport { TooltipItem } from '../tooltip/TooltipItem';\nexport interface GroupedY {\n  /** Index of `dataGroups` */\n  groupIdx: number;\n\n  /** Original value on Y */\n  yStrVal: number;\n\n  /** Projected position of Y */\n  yPos: number;\n\n  /** Color string of the point */\n  color: string;\n}\nexport interface AxisProjectedValue {\n  /** Projected position of X */\n  xPos: number;\n\n  /** Original value on X */\n  xStrVal: number;\n\n  /** Corresponding data in `dataGroups` */\n  groupedY: GroupedY[];\n}\n\nexport interface TooltipLayerProps {\n  hovering: HoveringState;\n  hoveredPoint: HoveredPointState;\n  axisProjectedValues: AxisProjectedValue[];\n  graphWidth: number;\n  graphHeight: number;\n  margin: Margin;\n\n  /** X position of the tooltip */\n  x?: number;\n\n  /** Y position of the tooltip */\n  y?: number;\n\n  /** X offset for the position of the tooltip */\n  xOffset?: number;\n\n  /** Y offset for the position of the tooltip */\n  yOffset?: number;\n}\n\n/** Generates the tooltip box */\nexport const TooltipLayer = ({\n  hovering,\n  hoveredPoint,\n  axisProjectedValues,\n  graphWidth,\n  graphHeight,\n  margin,\n  x = axisProjectedValues[hoveredPoint.index].xPos,\n  y = hoveredPoint.position.y,\n  xOffset = 0,\n  yOffset = 0,\n}: TooltipLayerProps) => {\n  const projected = axisProjectedValues[hoveredPoint.index];\n  const tooltipItems = projected.groupedY.map(pointY => (\n    <TooltipItem\n      key={`t-${pointY.yStrVal}`}\n      color={pointY.color}\n      text={`${pointY.yStrVal}`}\n    />\n  ));\n\n  return (\n    <Tooltip\n      graphWidth={graphWidth}\n      graphHeight={graphHeight}\n      graphMargin={margin}\n      position={{\n        x: x + xOffset,\n        y: y + yOffset,\n      }}\n      show={hovering}\n    >\n      <h3>{`${projected.xStrVal}`}</h3>\n      {tooltipItems}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { LegendLinear, LegendOrdinal } from '@vx/legend';\n\nimport { LegendConfig } from '../common/types';\n\nconst SCALE_TYPE_TO_LEGEND = {\n  ordinal: LegendOrdinal,\n  sequential: LegendLinear,\n};\n\nexport interface LegendProps {\n  direction?: LegendConfig['direction'];\n  scaleType: string;\n  scale: (val: any) => string;\n  title: string;\n  render?: (labels: ReadonlyArray<object>) => React.ReactNode;\n}\n\nconst defaultProps = {\n  direction: 'vertical',\n};\n\nexport const Legend = ({\n  direction,\n  render,\n  scaleType,\n  scale,\n  title,\n}: LegendProps) => {\n  const LegendComponent = SCALE_TYPE_TO_LEGEND[scaleType];\n  const vxDirection = direction === 'horizontal' ? 'row' : 'column';\n  return (\n    <div>\n      <div>{title}</div>\n      <LegendComponent scale={scale} direction={vxDirection}>\n        {render}\n      </LegendComponent>\n    </div>\n  );\n};\n\nLegend.defaultProps = defaultProps;\n","import React, { RefObject, forwardRef } from 'react';\n\nimport { ColorScale, LegendConfig } from '../common/types';\nimport { styled } from '../utils/styled-components';\n\nimport { Legend } from './Legend';\n\ninterface LegendGroupProps {\n  color?: ColorScale & { legend?: LegendConfig };\n}\n\nconst LegendGroupWrapper = styled.div`\n  background: #fff;\n  position: absolute;\n`;\n\nconst LeftLegendGroupWrapper = styled(LegendGroupWrapper)`\n  top: 0;\n  left: 0;\n`;\n\nconst RightLegendGroupWrapper = styled(LegendGroupWrapper)`\n  top: 0;\n  right: 0;\n`;\n\nconst TopLegendGroupWrapper = styled(LegendGroupWrapper)`\n  top: 0;\n  left: 0;\n`;\nconst BottomLegendGroupWrapper = styled(LegendGroupWrapper)`\n  bottom: 0;\n  left: 0;\n`;\n\nconst LEGEND_WRAPPER_MAP = {\n  top: TopLegendGroupWrapper,\n  right: RightLegendGroupWrapper,\n  bottom: BottomLegendGroupWrapper,\n  left: LeftLegendGroupWrapper,\n};\n\n/**\n * Pass scales(color / shape / size, etc.) props,\n * LegendGroup will return corresponding legend.\n *\n */\nexport const LegendGroup = forwardRef((\n  { color }: LegendGroupProps,\n  ref: RefObject<HTMLDivElement>,\n) => {\n  /**\n   * TODO: May support more different scales(shape / size) here\n   * to include multiple legends.\n   */\n  if (!color || (color.legend && color.legend.hide)) {\n    return null;\n  }\n  const { scale, scaleType, field, legend = {} } = color;\n  const orient = legend.orient || 'right';\n  const isSideLegend = ['left', 'right'].indexOf(orient) !== -1;\n  const direction = legend.direction || (isSideLegend ? 'vertical' : 'horizontal');\n  const LegendGroupWrapperComponent = LEGEND_WRAPPER_MAP[orient];\n  return (\n    <LegendGroupWrapperComponent ref={ref} >\n      <Legend\n        scale={scale}\n        scaleType={scaleType}\n        title={field}\n        render={legend.render}\n        direction={direction}\n      />\n    </LegendGroupWrapperComponent>\n  );\n});\n","import * as React from 'react';\nimport { schemeCategory10, interpolateCool, schemeBlues } from 'd3-scale-chromatic';\nimport deepmerge from 'deepmerge';\n\nimport { Theme } from '../common/types';\n\ninterface ThemeProviderProps {\n  /** theme prop can be partial of Theme type */\n  theme: Partial<Theme>;\n  children: React.ReactNode;\n}\n\nexport const themes = {\n  default: {\n    colors: {\n      category: schemeCategory10,\n      sequential: {\n        scheme: schemeBlues,\n        interpolator: interpolateCool,\n      },\n    },\n    xAxis: {\n      strokeColor: '#7c8a94',\n      tickStrokeColor: '#7c8a94',\n      strokeWidth: 1.5,\n      tickFontSize: 13,\n    },\n    yAxis: {\n      strokeColor: '#7c8a94',\n      tickStrokeColor: '#7c8a94',\n      strokeWidth: 1.5,\n      tickFontSize: 13,\n    },\n  },\n};\n\nconst defaultTheme = themes.default;\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nconst { Provider } = ThemeContext;\nfunction mergeTheme(theme: Theme, partialTheme: Partial<Theme>): Theme {\n  // see https://github.com/TehShrike/deepmerge\n  return deepmerge(\n    theme,\n    partialTheme,\n    { arrayMerge: (dest, source) => source },\n  );\n}\n\nexport const ThemeProvider = ({ theme, children }: ThemeProviderProps) => {\n  const resultTheme = mergeTheme(defaultTheme, theme);\n  return (\n    <Provider value={resultTheme}>\n      {children}\n    </Provider>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { useTransition, animated } from 'react-spring';\n\nimport { styled } from '../utils/styled-components';\nimport { Margin } from '../common/types';\n\nexport interface TooltipProps {\n  position: {\n    x: number;\n    y: number;\n  };\n  show: boolean;\n  children: React.ReactNode;\n  graphWidth: number;\n  graphHeight: number;\n  graphMargin: Margin;\n}\n\nconst TooltipWrapper = styled.div`\n  position: absolute;\n  min-width: 3rem;\n  background-color: rgba(255, 255, 255, 0.8);\n  padding: 0.5rem 1.2rem;\n  border-radius: 5px;\n  font-size: 1rem;\n  white-space: nowrap;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  transition: all 500ms linear;\n  box-shadow: 0px 2px 8px 3px rgba(120,120,120,0.3);\n\n  h3 {\n    color: #7c8a94;\n    margin: 0.15rem 0 0.4rem 0.1rem;\n    font-size: 1.1rem;\n  }\n`;\n\n/**\n * Returns the position and transform\n * which limit the tooltip within the bound of the graph\n */\nfunction getTooltipPosition(\n  graphWidth: TooltipProps['graphWidth'],\n  graphHeight: TooltipProps['graphHeight'],\n  graphMargin: Margin,\n  position: TooltipProps['position'],\n) {\n  const onRightHalf = (position.x / graphWidth) > 0.5;\n  const percentX = onRightHalf ? -100 : 0;\n  const percentY = Math.round(-100 * (position.y / graphHeight));\n  const leftOffset = onRightHalf ? -20 : 20;\n  return {\n    top: `${graphMargin.top + position.y}px`,\n    left: `${graphMargin.left + position.x + leftOffset}px`,\n    transform: `translate(${percentX}%, ${percentY}%)`,\n    transition: 'all 150ms ease',\n  };\n}\n\nexport const Tooltip: FunctionComponent<TooltipProps> = ({\n  position,\n  children,\n  show = false,\n  graphWidth,\n  graphHeight,\n  graphMargin = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n}) => {\n  if (!position) {\n    return null;\n  }\n\n  const tooltipStyle = getTooltipPosition(graphWidth, graphHeight, graphMargin, position);\n\n  const transition = useTransition(show, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    unique: true,\n  });\n\n  // use transition to control the mounting/unmounting of Tooltip\n  return (\n    <>\n      {transition.map(({ item, key, props }) => (\n        item && (\n          <animated.div key={key} style={{ ...props, transition: 'opacity 300ms ease-out' }}>\n            <TooltipWrapper style={tooltipStyle}>\n              {children}\n            </TooltipWrapper>\n          </animated.div>\n        )\n      ))}\n    </>\n  );\n\n};\n","import * as React from 'react';\n\nimport { styled } from '../utils/styled-components';\n\nexport interface TooltipItemProps {\n  color: string;\n  text: string;\n}\n\nconst ItemWrapper = styled.div`\n  margin: 0.1rem 0;\n\n  &:before {\n    content: '';\n    width: 0.35rem;\n    height: 0.35rem;\n    background-color: ${({ color }) => color};\n    float: left;\n    margin: 0.5rem 0.8rem 0 0.1rem;\n    border-radius: 50%;\n  }\n`;\n\nexport const TooltipItem: React.SFC<TooltipItemProps> = ({\n  color = 'gray',\n  text,\n}) => {\n  return (\n    <ItemWrapper color={color}>\n      {text}\n    </ItemWrapper>\n  );\n};\n","import { extent as d3Extent } from 'd3-array';\nimport {\n  scaleLinear,\n  scalePoint,\n  scaleTime,\n  scaleBand,\n} from 'd3-scale';\n\nimport { AxisScale, ScaleType, AxisEncoding } from '../common/types';\nimport { DEFAULT_VALS } from '../common/config';\n\nimport { getValByScaleType } from './getValByScaleType';\nimport { getFieldValuesFromData } from './getFieldValuesFromData';\n\nexport interface GetAxisScaleArgs {\n  data: object[];\n  encoding: AxisEncoding;\n  axisLength: number;\n}\n\n/**\n * Computes and returns the configurations for the axis,\n * such as its domain, range and d3 scale functions\n */\nexport function getAxisScale(\n  min: number,\n  max: number,\n  data: object[],\n  encoding: AxisEncoding,\n): AxisScale {\n  const range: AxisScale['range'] = [min, max];\n  const { field, type, scaleConfig } = encoding;\n\n  const dataVals = getFieldValuesFromData(data, field);\n\n  let domain: AxisScale['domain'];\n  let scale;\n  const scaleType: ScaleType = encoding.scale || DEFAULT_VALS.SCALE_TYPE;\n  const getValue = getValByScaleType(scaleType);\n\n  switch (scaleType) {\n    case 'point': {\n      domain = dataVals;\n      scale = scalePoint().domain(domain).range(range);\n      break;\n    }\n    case 'time': {\n      domain = d3Extent(dataVals.map(time => getValue(time)));\n      scale = scaleTime().domain(domain).range(range);\n      break;\n    }\n    case 'band': {\n      domain = dataVals;\n      scale = scaleBand().domain(domain).range(range);\n      if (scaleConfig) {\n        const { padding, paddingInner, paddingOuter } = scaleConfig;\n        if (padding) {\n          scale.padding(padding);\n        }\n        if (paddingInner) {\n          scale.paddingInner(paddingInner);\n        }\n        if (paddingOuter) {\n          scale.paddingOuter(paddingOuter);\n        }\n      }\n      break;\n    }\n    case 'linear':\n    default: {\n      domain = d3Extent(dataVals);\n      scale = scaleLinear().domain(domain).range(range);\n      break;\n    }\n  }\n\n  const axisScale = {\n    field,\n    range,\n    domain,\n    scaleType,\n    type,\n    scale,\n  };\n  return axisScale;\n}\n\nexport function getXAxisScale({ encoding, data, axisLength }: GetAxisScaleArgs): AxisScale {\n  return getAxisScale(0, axisLength, data, encoding);\n}\n\nexport function getYAxisScale({ encoding, data, axisLength }: GetAxisScaleArgs): AxisScale {\n  return getAxisScale(axisLength, 0, data, encoding);\n}\n","import map from 'lodash/map';\nimport sortedUniq from 'lodash/sortedUniq';\nimport { extent as d3Extent } from 'd3-array';\nimport { scaleOrdinal, scaleSequential } from 'd3-scale';\n\nimport { Theme, ColorEncoding, ColorScale } from '../common/types';\n\ninterface ColorScaleArgs {\n  colors: Theme['colors'];\n  encoding: ColorEncoding;\n  data: object[];\n}\n\nfunction getNumericDomain(values: number[]): [number, number] {\n  /**\n   * The `d3Extent` return [number, number] | [undefined, undefined].\n   * Maybe there is better way to make compiler happy, it's a workaround now.\n   */\n  const [extentMin = 0, extentMax = 0] = d3Extent(values);\n  return [extentMin, extentMax];\n}\n\nconst getColorScaleSetting = ({\n  colors,\n  encoding,\n  data,\n}: ColorScaleArgs): Pick<\n  ColorScale,\n  Extract<keyof ColorScale, 'domain' | 'scale' | 'range' | 'scaleType'>\n> => {\n  const { field, type } = encoding;\n  switch (type) {\n    case 'nominal': {\n      const domain = map(data, field);\n      const scale = scaleOrdinal(colors.category).domain(domain);\n      return {\n        domain,\n        scale,\n        scaleType: 'ordinal',\n        range: colors.category,\n      };\n    }\n    case 'ordinal': {\n      /**\n       * make sure the element is unique or\n       * scaleOrdinal will treat same element in domain as different value and map it incorrectly.\n       */\n      const domain = sortedUniq(map(data, field).sort((a, b) => Number(a) - Number(b)));\n      const range = colors.sequential.scheme[domain.length];\n      const scale = scaleOrdinal(range).domain(domain);\n      return {\n        domain,\n        range,\n        scale,\n        scaleType: 'ordinal',\n      };\n    }\n    case 'temporal': {\n      const timeStamps: number[] = data.map(obj => obj[field].getTime());\n      const domain = getNumericDomain(timeStamps);\n      const scale = scaleSequential(colors.sequential.interpolator)\n        .domain(domain);\n      return {\n        domain,\n        scale,\n        scaleType: 'sequential',\n      };\n    }\n    case 'quantitative': {\n      const values = data.map(row => Number(row[field]));\n      const domain = getNumericDomain(values);\n      const scale = scaleSequential(colors.sequential.interpolator).domain(domain);\n      return {\n        domain,\n        scale,\n        scaleType: 'sequential',\n      };\n    }\n    default: {\n      throw Error('Invalid color encoding type.');\n    }\n  }\n};\n\n/**\n * computes and returns domain, range, color scale and value selector,\n * which you can utitlize in Chart component.\n */\n\nexport function getColorScale({\n  colors,\n  encoding,\n  data,\n}: ColorScaleArgs): ColorScale {\n  const { type, field } = encoding;\n  const { scale, scaleType, domain, range } = getColorScaleSetting({ colors, encoding, data });\n  return {\n    scale,\n    domain,\n    type,\n    field,\n    range,\n    scaleType,\n  };\n}\n","import groupBy from 'lodash/groupBy';\nimport values from 'lodash/values';\n\nimport { Encoding } from '../common/types';\n\n/**\n * It's a utility to split rows into different sub rows by multiple field.\n * For example, given:\n * const data = [\n *   { value: 1, type: 'a', color: 'green' },\n *   { value: 2, type: 'b', color: 'green' },\n *   { value: 3, type: 'a', color: 'red' },\n *   { value: 4, type: 'b', color: 'red' },\n *   { value: 5, type: 'a', color: 'green' },\n *   { value: 6, type: 'b', color: 'green' },\n *   { value: 7, type: 'a', color: 'red' },\n *   { value: 8, type: 'b', color: 'red' },\n * ]\n * `getDataGroupByFields(data, ['type', 'color']) will categorize data by fields and return\n * [\n *   [\n *     { value: 1, type: 'a', color: 'green' },\n *     { value: 5, type: 'a', color: 'green' },\n *   ],\n *   [\n *     { value: 2,  type: 'b', color: 'green' },\n *     { value: 6,  type: 'b', color: 'green' },\n *   ],\n *   [\n *     { value: 3, type: 'a', color: 'red' },\n *     { value: 7, type: 'a', color: 'red' },\n *   ],\n *   [\n *     { value: 4 type: 'b', color: 'red' }\n *     { value: 8 type: 'b', color: 'red' }\n *   ],\n * ]\n */\n\nexport function getDataGroupByFields(data: object[], fields: string[]): object[][] {\n  return fields.reduce(\n    (all, field) => {\n      const groups = all.map(rows => values(groupBy(rows, field)));\n      return groups.reduce((joinedGroups, group) => [...joinedGroups, ...group], []);\n    },\n    [data],\n  );\n}\n\n/**\n *\n * It's a utility to split rows into different sub rows by multiple encoding.\n * It will get field name from encodings\n * and apply `getdataGroupByFields` to build data group.\n */\n\nexport function getDataGroupByEncodings(data: object[], encodings: Encoding[]): object[][] {\n  const fieldsToGroupBy: string[] = encodings\n    .map(encoding => encoding!.field);\n  return getDataGroupByFields(data, fieldsToGroupBy);\n}\n","/**\n * Returns an array of data selected by the given field name of the data array.\n * It will filter out null and undefined values automatically.\n * @param data - an array of data with various fields\n * @param fieldName - the field to be selected\n */\nexport function getFieldValuesFromData(\n  data: object[],\n  fieldName: string,\n) {\n  const dataVals: any[] = [];\n  data.forEach((row) => {\n    const val = row[fieldName];\n    if (val !== undefined && val !== null) {\n      dataVals.push(val);\n    }\n  });\n  return dataVals;\n}\n","import { Scale } from '../common/types';\n\nimport { getValByScaleType } from './getValByScaleType';\n\n/**\n * Returns the data value selectors for a data record\n * using the computed axis configurations including the d3Scale function of the axis\n * @param axis - AxisScale\n * @param fieldIndex - the current index of the field\n */\nexport function getRecordFieldSelector(\n  axis: Pick<Scale, Extract<keyof Scale, 'field' | 'scale' | 'getValue' | 'scaleType'>>,\n) {\n  const { field, scale, scaleType } = axis;\n  const getValue = getValByScaleType(scaleType);\n\n  /** Given a record of data, it returns the orginal value of the specified field */\n  const getOriginalVal = (record: object) => getValue(record[field]);\n\n  return {\n    getOriginalVal,\n\n    /**\n     * Given a record of data,\n     * it returns the mapped value (computed by d3 scale function) of the specified field\n     */\n    getScaledVal: (record: object) => scale(getOriginalVal(record)),\n\n    getFormattedStringVal: (record: object) => {\n      const recordValue = getOriginalVal(record);\n\n      if (scaleType === 'time') {\n        // FIXME: unify the way of formatting datetime\n        return recordValue.toLocaleString();\n      }\n\n      return recordValue;\n    },\n  };\n}\n","import { ScaleType } from '../common/types';\nimport { DEFAULT_VALS } from '../common/config';\n\n/**\n * Returns the orignal value of the data\n * based on the scale type.\n * It currently formats the date string as Date object.\n */\nexport function getValByScaleType(\n  scaleType: ScaleType = DEFAULT_VALS.SCALE_TYPE\n) {\n  let getValue = (val: any) => val;\n\n  if (scaleType === 'time') {\n    // TODO: think out a way to deal with the date type\n    getValue = (val: string) => new Date(val);\n  }\n\n  return getValue;\n}\n","import * as styledComponents from 'styled-components';\n\nexport interface ThemeInterface {\n  primaryColor: string;\n  primaryColorInverted: string;\n}\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<ThemeInterface>;\n\nexport { styled, css, createGlobalStyle, keyframes, ThemeProvider };\n"],"sourceRoot":""}