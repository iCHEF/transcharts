(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"./docs/sampleData/lineData.js":function(e,t,n){"use strict";var o=[{x:0,y:9,date:"2019/01/21 00:00:00",weekday:"Mon"},{x:1,y:5,date:"2019/01/22 00:00:00",weekday:"Tue"},{x:2.5,y:5,date:"2019/01/23 00:00:00",weekday:"Wed"},{x:3,y:3,date:"2019/01/24 00:00:00",weekday:"Thu"},{x:4,y:1,date:"2019/01/25 00:00:00",weekday:"Fri"}];t.a=o,"undefined"!==typeof o&&o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"lineData",filename:"docs/sampleData/lineData.js"}})},"./docs/themes/Theme.mdx":function(e,t,n){"use strict";n.r(t);var o=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),a=n("./node_modules/docz/dist/index.esm.js"),i=n("./packages/chart/src/index.ts"),l=n("./packages/graph/src/index.ts"),s=n("./docs/sampleData/lineData.js"),d={colors:{category:["#d01040"]},xAxis:{strokeColor:"#d01040",tickStrokeColor:"#d01040"},yAxis:{strokeColor:"#d01040",tickStrokeColor:"#d01040"}};"undefined"!==typeof d&&d&&d===Object(d)&&Object.isExtensible(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"redTheme",filename:"docs/themes/customThemes.js"}}),n.d(t,"default",function(){return m});var c={},A="wrapper";function m(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(A,Object.assign({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"theme"},"Theme"),Object(r.b)("p",null,"By default, we have a default theme in ",Object(r.b)("inlineCode",{parentName:"p"},"transchart")," so you can directly render Chart component.\nHowever, if you'd like to customize theme for your chart, you could use ",Object(r.b)("inlineCode",{parentName:"p"},"ThemeProvider"),".\nWrapping the charts where you want to customize with ",Object(r.b)("inlineCode",{parentName:"p"},"ThemeProvider"),", pass your custom theme object, and it's done.\nThe theme object could be partial of theme."),Object(r.b)("h2",{id:"example-line-chart"},"Example: Line Chart"),Object(r.b)("p",null,"We use the following example data to generate the example charts below."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example Data and red theme:")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const lineData = [\n  { x: 0, y: 9, date: '2019/01/21 00:00:00', weekday: 'Mon' },\n  { x: 1, y: 5, date: '2019/01/22 00:00:00', weekday: 'Tue' },\n  { x: 2, y: 5, date: '2019/01/23 00:00:00', weekday: 'Wed' },\n  { x: 3, y: 3, date: '2019/01/24 00:00:00', weekday: 'Thu'},\n  { x: 4, y: 1, date: '2019/01/25 00:00:00', weekday: 'Fri' },\n];\nconst customRedTheme = {\n  colors: {\n    category: ['#d01040']\n  },\n  xAxis: {\n    strokeColor: '#d01040',\n    tickStrokeColor: '#d01040',\n  },\n  yAxis: {\n    strokeColor: '#d01040',\n    tickStrokeColor: '#d01040',\n  },\n}\n")),Object(r.b)(a.c,{__position:0,__code:"<div style={{ width: '100%', height: '320px' }}>\n  <ThemeProvider theme={customRedTheme}>\n    <LineChart\n      data={lineData}\n      x={{ field: 'x', type: 'quantitative', scale: 'linear' }}\n      y={{ field: 'y', type: 'quantitative', scale: 'linear' }}\n    />\n  </ThemeProvider>\n</div>",__scope:{props:this?this.props:n,Playground:a.c,Props:a.d,LineChart:i.b,Theme:l.Theme,ThemeProvider:l.ThemeProvider,lineData:s.a,customRedTheme:d},__codesandbox:"N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtSD2AAGTQGB7D8e1MKNWV2gAAViTYwEkVF3DgcgqIIOBzU41xhQIiD2Cg6wYCPJZRKPNDKFYLgMnYGi3QYpiYBYtjUA4rieMQ2Y8EEoj2CgcitWiVwsLoj0DzgSQKl_EyCFcSQjOdezXH09VhInbJJMROxehRSIxXQHyFPM91pFOayJjE-BvjyCIiB8uB3PtQNJTC-UzXaMFUF0FFjlOXDnAIRIsXYbhhPWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZ3qgAWVr2AANla9r1jAYCADFvWgRJ6v4ZxDgRB1MBgoR-CWIhqEoOAuoRMbqwmmhnAgXDLnYABGPqOvkHK8qmABBOZyvYCMoM46B0DDBSOXKsRXujGR2BRUqYG4YA8OK0G4HkLca2AD6oC-4IADIUfGRJ5koZpEeR8xuAJuUwGQyUBlQdp2AAfg2T6wwjX6rlxsNburKQZCrN8zBhDzMDAMIoCmem_oB1mnuXasEzSggcEmzIUivAg4ZrWsgZB2BwagnF0AmeqLoahqAFJ2t8GAIBSQh6qTAAmBrRoU2GV2VxgfOk2Sp3xGLwf8hKgp8h2JeVmtGDI51KP40QA8Dmt0FM8HnJgVyWajqOsA1w0IHndB6rapYSvmeqAEdQncGIHJiVgYGNjj4nO9p4_4in5CT5PlcSNPIEz-rEmNvPa6LkuXmiNhK6WavYHq-uBEb5uW83R2g8kF2hDdjIlYX9mVykKWZblhW4akMWObML8QCsmzvTJBPTKc4zTP_LQKGA_QGHuwzb4cl6AG11igrArgapYc12AAE4lgx1oPVG2F1gGSAahdSQVsLrsH1ogFB-tjYjCCNsGOQD2h6moI3DqFhf5XAuoAq4ABWMBWRIFwJgXAhBVtkENVQSw9BSxMEwGwfBeqlgGSEJ_uwP-7ArY4CoS0Sh1CIFyigfQ-BVskzMNYawjBWCcH1QAOrZAEdWEhzVyH6OODQmRdDYHyL6kotBDVVFcPUXKawHQlCCOEddCRl0pG11kWYhBFDLFsOsRwtRPC5SywgDogAuiqf0zosAGV5vzKY8dXJRJPmfaKR5rLe0iEle-gFdAgQMGBbm9pX5dGCpsI8L1gArioFAIU9xKqRxrHEWgKQhRAM_u0AAxOgOBDU-rWPCSuJxAcsAPSwLYK41SmkWBREIbYFFKB1LLHKHpfSBkHRbjEHYxV5mLOWfVNZesNlEJrCM1u4zJmNJbnMygCzHAHNWb045AT54WG2dsXZdz9lCkOc8_pryA4s3kCkpQIA9rbFcGke-1A8lP1AiAaZFh-CoG9IyJA7B-A_GLNUDI5ofyXw2usfgFcBD5GoPwK4_AGo4BpQ1Il1Z-DlHIP0GY3Z_QYv4A9YGhFYDQiwBfPlmAySUESLmPIBQvJml4kWP4pYGXIpAFENAlLMUqHDBoOACq1XCroJgXKGctUYqRTWJlhVVX8AAHoXRwKI-lIBTmKtNJKC1IBrVDRwAADhwBdbVTrNSWkiK691XqfX8HWMCk-OLvAfGoJAFIMLUBwr0Ai6pIBaA-iyJSrFppaDmmdRaWYMx-DyAUE3IAA",mdxType:"Playground"},Object(r.b)("div",{style:{width:"100%",height:"320px"}},Object(r.b)(l.ThemeProvider,{theme:d,mdxType:"ThemeProvider"},Object(r.b)(i.b,{data:s.a,x:{field:"x",type:"quantitative",scale:"linear"},y:{field:"y",type:"quantitative",scale:"linear"},mdxType:"LineChart"})))),Object(r.b)("h2",{id:"proptypes"},"propTypes"),Object(r.b)(a.d,{of:l.ThemeProvider,mdxType:"Props"}),Object(r.b)("p",null,"the ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," type has following attributes:"),Object(r.b)("h2",{id:"theme-attributes"},Object(r.b)("inlineCode",{parentName:"h2"},"theme")," attributes:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"{\n  /** common colors */\n  colors: {\n    /** colors used for nominal data */\n    category: ReadonlyArray<string>;\n\n    sequential: {\n      scheme: ReadonlyArray<ReadonlyArray<string>>;\n      interpolator: (val: number) => string;\n    }\n  };\n\n  /** Global style settings for the charts */\n  globalStyle: {\n    fontColor: string;\n  }\n\n  /** xaxis theme config */\n  xAxis: {\n    /** font size of the label */\n    labelFontSize: number;\n\n    /** color of the label */\n    labelColor: string;\n\n    /** text anchor of the label */\n    labelTextAnchor: string;\n\n    /** color of stroke */\n    strokeColor: string;\n\n    /** color of ticke stroke */\n    tickStrokeColor: string;\n\n    /** width of stroke */\n    strokeWidth: number;\n\n    /** font size of tick */\n    tickFontSize: number;\n  }\n\n  /** yaxis theme config */\n  yAxis: {\n    /** font size of the label */\n    labelFontSize: number;\n\n    /** color of the label */\n    labelColor: string;\n\n    /** text anchor of the label */\n    labelTextAnchor: string;\n\n    /** color of stroke */\n    strokeColor: string;\n\n    /** color of ticke stroke */\n    tickStrokeColor: string;\n\n    /** width of stroke */\n    strokeWidth: number;\n\n    /** font size of tick */\n    tickFontSize: number;\n  }\n\n  headerBox: {\n    /** Font size of the title */\n    titleFontSize: number;\n\n    /** Color of the title */\n    titleColor: string;\n\n    /** Font size of the description placed under the title */\n    titleDescFontSize: number;\n\n    /** Color of the description placed under the title */\n    titleDescColor: string;\n\n    /** Line height of the header box */\n    lineHeight: number;\n\n    /** Padding of the header box */\n    padding: string;\n\n    /** Default align of the text of the header box */\n    defaultTextAlign: string;\n  }\n};\n")),Object(r.b)("h3",{id:"current-default-theme"},"Current default theme"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const COLORS = {\n  GRAY: '#7c8a94',\n  DARK: '#233142',\n};\n\n{\n  colors: {\n    /** see [d3-scale-chromatic](https://github.com/d3/d3-scale-chromatic) */\n    category: schemeCategory10,\n    sequential: {\n      scheme: schemeBlues,\n      interpolator: interpolateCool,\n    },\n  },\n  globalStyle: {\n    fontColor: COLORS.DARK,\n  },\n  xAxis: {\n    labelFontSize: 15,\n    labelColor: COLORS.DARK,\n    labelTextAnchor: 'middle',\n    strokeColor: COLORS.GRAY,\n    tickStrokeColor: COLORS.GRAY,\n    strokeWidth: 1.5,\n    tickFontSize: 13,\n  },\n  yAxis: {\n    labelFontSize: 15,\n    labelColor: COLORS.DARK,\n    labelTextAnchor: 'middle',\n    strokeColor: COLORS.GRAY,\n    tickStrokeColor: COLORS.GRAY,\n    strokeWidth: 1.5,\n    tickFontSize: 13,\n  },\n  headerBox: {\n    titleFontSize: 19,\n    titleColor: COLORS.DARK,\n    titleDescFontSize: 15,\n    titleDescColor: COLORS.GRAY,\n    lineHeight: 1.3,\n    padding: '0 1rem',\n    defaultTextAlign: 'left',\n  },\n}\n")))}m&&m===Object(m)&&Object.isExtensible(m)&&Object.defineProperty(m,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/themes/Theme.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-themes-theme.2609f5b4913a963445f8.js.map